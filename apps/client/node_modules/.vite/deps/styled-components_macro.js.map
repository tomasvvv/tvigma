{
  "version": 3,
  "sources": ["browser-external:assert", "../../../../../node_modules/@babel/types/lib/utils/shallowEqual.js", "../../../../../node_modules/@babel/types/lib/validators/generated/index.js", "../../../../../node_modules/@babel/types/lib/validators/matchesPattern.js", "../../../../../node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js", "../../../../../node_modules/@babel/types/lib/validators/react/isReactComponent.js", "../../../../../node_modules/@babel/types/lib/validators/react/isCompatTag.js", "../../../../../node_modules/to-fast-properties/index.js", "../../../../../node_modules/@babel/types/lib/validators/isType.js", "../../../../../node_modules/@babel/types/lib/validators/isPlaceholderType.js", "../../../../../node_modules/@babel/types/lib/validators/is.js", "../../../../../node_modules/@babel/helper-validator-identifier/lib/identifier.js", "../../../../../node_modules/@babel/helper-validator-identifier/lib/keyword.js", "../../../../../node_modules/@babel/helper-validator-identifier/lib/index.js", "../../../../../node_modules/@babel/types/lib/validators/isValidIdentifier.js", "../../../../../node_modules/@babel/types/lib/constants/index.js", "../../../../../node_modules/@babel/types/lib/definitions/utils.js", "../../../../../node_modules/@babel/types/lib/definitions/core.js", "../../../../../node_modules/@babel/types/lib/definitions/flow.js", "../../../../../node_modules/@babel/types/lib/definitions/jsx.js", "../../../../../node_modules/@babel/types/lib/definitions/placeholders.js", "../../../../../node_modules/@babel/types/lib/definitions/misc.js", "../../../../../node_modules/@babel/types/lib/definitions/experimental.js", "../../../../../node_modules/@babel/types/lib/definitions/typescript.js", "../../../../../node_modules/@babel/types/lib/definitions/index.js", "../../../../../node_modules/@babel/types/lib/validators/validate.js", "../../../../../node_modules/@babel/types/lib/builders/validateNode.js", "../../../../../node_modules/@babel/types/lib/builders/generated/index.js", "../../../../../node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js", "../../../../../node_modules/@babel/types/lib/builders/react/buildChildren.js", "../../../../../node_modules/@babel/types/lib/validators/isNode.js", "../../../../../node_modules/@babel/types/lib/asserts/assertNode.js", "../../../../../node_modules/@babel/types/lib/asserts/generated/index.js", "../../../../../node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js", "../../../../../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js", "../../../../../node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js", "../../../../../node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js", "../../../../../node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js", "../../../../../node_modules/@babel/types/lib/builders/generated/uppercase.js", "../../../../../node_modules/@babel/types/lib/clone/cloneNode.js", "../../../../../node_modules/@babel/types/lib/clone/clone.js", "../../../../../node_modules/@babel/types/lib/clone/cloneDeep.js", "../../../../../node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js", "../../../../../node_modules/@babel/types/lib/clone/cloneWithoutLoc.js", "../../../../../node_modules/@babel/types/lib/comments/addComments.js", "../../../../../node_modules/@babel/types/lib/comments/addComment.js", "../../../../../node_modules/@babel/types/lib/utils/inherit.js", "../../../../../node_modules/@babel/types/lib/comments/inheritInnerComments.js", "../../../../../node_modules/@babel/types/lib/comments/inheritLeadingComments.js", "../../../../../node_modules/@babel/types/lib/comments/inheritTrailingComments.js", "../../../../../node_modules/@babel/types/lib/comments/inheritsComments.js", "../../../../../node_modules/@babel/types/lib/comments/removeComments.js", "../../../../../node_modules/@babel/types/lib/constants/generated/index.js", "../../../../../node_modules/@babel/types/lib/converters/toBlock.js", "../../../../../node_modules/@babel/types/lib/converters/ensureBlock.js", "../../../../../node_modules/@babel/types/lib/converters/toIdentifier.js", "../../../../../node_modules/@babel/types/lib/converters/toBindingIdentifierName.js", "../../../../../node_modules/@babel/types/lib/converters/toComputedKey.js", "../../../../../node_modules/@babel/types/lib/converters/toExpression.js", "../../../../../node_modules/@babel/types/lib/traverse/traverseFast.js", "../../../../../node_modules/@babel/types/lib/modifications/removeProperties.js", "../../../../../node_modules/@babel/types/lib/modifications/removePropertiesDeep.js", "../../../../../node_modules/@babel/types/lib/converters/toKeyAlias.js", "../../../../../node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js", "../../../../../node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js", "../../../../../node_modules/@babel/types/lib/converters/toSequenceExpression.js", "../../../../../node_modules/@babel/types/lib/converters/toStatement.js", "../../../../../node_modules/@babel/types/lib/converters/valueToNode.js", "../../../../../node_modules/@babel/types/lib/modifications/appendToMemberExpression.js", "../../../../../node_modules/@babel/types/lib/modifications/inherits.js", "../../../../../node_modules/@babel/types/lib/modifications/prependToMemberExpression.js", "../../../../../node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js", "../../../../../node_modules/@babel/types/lib/traverse/traverse.js", "../../../../../node_modules/@babel/types/lib/validators/isBinding.js", "../../../../../node_modules/@babel/types/lib/validators/isLet.js", "../../../../../node_modules/@babel/types/lib/validators/isBlockScoped.js", "../../../../../node_modules/@babel/types/lib/validators/isImmutable.js", "../../../../../node_modules/@babel/types/lib/validators/isNodesEquivalent.js", "../../../../../node_modules/@babel/types/lib/validators/isReferenced.js", "../../../../../node_modules/@babel/types/lib/validators/isScope.js", "../../../../../node_modules/@babel/types/lib/validators/isSpecifierDefault.js", "../../../../../node_modules/@babel/types/lib/validators/isValidES3Identifier.js", "../../../../../node_modules/@babel/types/lib/validators/isVar.js", "../../../../../node_modules/@babel/types/lib/ast-types/generated/index.js", "../../../../../node_modules/@babel/types/lib/index.js", "../../../../../node_modules/@babel/helper-module-imports/lib/import-builder.js", "../../../../../node_modules/@babel/helper-module-imports/lib/is-module.js", "../../../../../node_modules/@babel/helper-module-imports/lib/import-injector.js", "../../../../../node_modules/@babel/helper-module-imports/lib/index.js", "../../../../../node_modules/@babel/traverse/lib/path/lib/virtual-types.js", "../../../../../node_modules/@babel/traverse/lib/visitors.js", "../../../../../node_modules/@babel/traverse/lib/cache.js", "../../../../../node_modules/ms/index.js", "../../../../../node_modules/debug/src/common.js", "../../../../../node_modules/debug/src/browser.js", "../../../../../node_modules/@babel/traverse/lib/scope/binding.js", "../../../../../node_modules/@babel/helper-split-export-declaration/lib/index.js", "../../../../../node_modules/@babel/helper-environment-visitor/lib/index.js", "../../../../../node_modules/@babel/traverse/lib/scope/lib/renamer.js", "../../../../../node_modules/globals/index.js", "../../../../../node_modules/@babel/traverse/lib/scope/index.js", "../../../../../node_modules/@jridgewell/set-array/src/set-array.ts", "../../../../../node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts", "../../../../../node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/resolve.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/strip-filename.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/sourcemap-segment.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/sort.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/binary-search.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/by-source.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/any-map.ts", "../../../../../node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts", "../../../../../node_modules/@babel/generator/node_modules/@jridgewell/gen-mapping/src/sourcemap-segment.ts", "../../../../../node_modules/@babel/generator/node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts", "../../../../../node_modules/@babel/generator/lib/source-map.js", "../../../../../node_modules/@babel/generator/lib/buffer.js", "../../../../../node_modules/@babel/generator/lib/node/whitespace.js", "../../../../../node_modules/@babel/generator/lib/node/parentheses.js", "../../../../../node_modules/@babel/generator/lib/node/index.js", "../../../../../node_modules/@babel/generator/lib/generators/template-literals.js", "../../../../../node_modules/@babel/generator/lib/generators/expressions.js", "../../../../../node_modules/@babel/generator/lib/generators/statements.js", "../../../../../node_modules/@babel/generator/lib/generators/classes.js", "../../../../../node_modules/@babel/generator/lib/generators/methods.js", "../../../../../node_modules/@babel/generator/lib/generators/modules.js", "../../../../../node_modules/jsesc/jsesc.js", "../../../../../node_modules/@babel/generator/lib/generators/types.js", "../../../../../node_modules/@babel/generator/lib/generators/flow.js", "../../../../../node_modules/@babel/generator/lib/generators/base.js", "../../../../../node_modules/@babel/generator/lib/generators/jsx.js", "../../../../../node_modules/@babel/generator/lib/generators/typescript.js", "../../../../../node_modules/@babel/generator/lib/generators/index.js", "../../../../../node_modules/@babel/generator/lib/printer.js", "../../../../../node_modules/@babel/generator/lib/index.js", "../../../../../node_modules/@babel/traverse/lib/path/ancestry.js", "../../../../../node_modules/@babel/traverse/lib/path/inference/util.js", "../../../../../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js", "../../../../../node_modules/@babel/traverse/lib/path/inference/inferers.js", "../../../../../node_modules/@babel/traverse/lib/path/inference/index.js", "../../../../../node_modules/js-tokens/index.js", "../../../../../node_modules/escape-string-regexp/index.js", "../../../../../node_modules/color-name/index.js", "../../../../../node_modules/color-convert/conversions.js", "../../../../../node_modules/color-convert/route.js", "../../../../../node_modules/color-convert/index.js", "../../../../../node_modules/ansi-styles/index.js", "../../../../../node_modules/supports-color/browser.js", "../../../../../node_modules/chalk/templates.js", "../../../../../node_modules/chalk/index.js", "../../../../../node_modules/@babel/highlight/lib/index.js", "../../../../../node_modules/@babel/code-frame/lib/index.js", "../../../../../node_modules/@babel/parser/src/util/location.js", "../../../../../node_modules/@babel/parser/src/parse-error/credentials.js", "../../../../../node_modules/@babel/parser/src/parse-error/module-errors.js", "../../../../../node_modules/@babel/parser/src/parse-error/to-node-description.js", "../../../../../node_modules/@babel/parser/src/parse-error/standard-errors.js", "../../../../../node_modules/@babel/parser/src/parse-error/strict-mode-errors.js", "../../../../../node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.js", "../../../../../node_modules/@babel/parser/src/parse-error.js", "../../../../../node_modules/@babel/parser/src/plugins/estree.js", "../../../../../node_modules/@babel/parser/src/tokenizer/context.js", "../../../../../node_modules/@babel/parser/src/tokenizer/types.js", "../../../../../node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../../../node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../../../node_modules/@babel/parser/src/util/identifier.js", "../../../../../node_modules/@babel/parser/src/util/scopeflags.js", "../../../../../node_modules/@babel/parser/src/parser/base.js", "../../../../../node_modules/@babel/parser/src/parser/comments.js", "../../../../../node_modules/@babel/parser/src/util/whitespace.js", "../../../../../node_modules/@babel/parser/src/tokenizer/state.js", "../../../../../node_modules/@babel/parser/src/tokenizer/index.js", "../../../../../node_modules/@babel/parser/src/util/scope.js", "../../../../../node_modules/@babel/parser/src/plugins/flow/scope.js", "../../../../../node_modules/@babel/parser/src/util/class-scope.js", "../../../../../node_modules/@babel/parser/src/util/expression-scope.js", "../../../../../node_modules/@babel/parser/src/util/production-parameter.js", "../../../../../node_modules/@babel/parser/src/parser/util.js", "../../../../../node_modules/@babel/parser/src/parser/node.js", "../../../../../node_modules/@babel/parser/src/plugins/flow/index.js", "../../../../../node_modules/@babel/parser/src/plugins/jsx/xhtml.js", "../../../../../node_modules/@babel/parser/src/plugins/jsx/index.js", "../../../../../node_modules/@babel/parser/src/plugins/typescript/scope.js", "../../../../../node_modules/@babel/parser/src/plugins/typescript/index.js", "../../../../../node_modules/@babel/parser/src/plugins/placeholders.js", "../../../../../node_modules/@babel/parser/src/plugins/v8intrinsic.js", "../../../../../node_modules/@babel/parser/src/plugin-utils.js", "../../../../../node_modules/@babel/parser/src/options.js", "../../../../../node_modules/@babel/parser/src/parser/lval.js", "../../../../../node_modules/@babel/parser/src/parser/expression.js", "../../../../../node_modules/@babel/parser/src/parser/statement.js", "../../../../../node_modules/@babel/parser/src/parser/index.js", "../../../../../node_modules/@babel/parser/src/index.js", "../../../../../node_modules/@babel/helper-hoist-variables/lib/index.js", "../../../../../node_modules/@babel/traverse/lib/path/replacement.js", "../../../../../node_modules/@babel/traverse/lib/path/evaluation.js", "../../../../../node_modules/@babel/template/lib/formatters.js", "../../../../../node_modules/@babel/template/lib/options.js", "../../../../../node_modules/@babel/template/lib/parse.js", "../../../../../node_modules/@babel/template/lib/populate.js", "../../../../../node_modules/@babel/template/lib/string.js", "../../../../../node_modules/@babel/template/lib/literal.js", "../../../../../node_modules/@babel/template/lib/builder.js", "../../../../../node_modules/@babel/template/lib/index.js", "../../../../../node_modules/@babel/helper-function-name/lib/index.js", "../../../../../node_modules/@babel/traverse/lib/path/conversion.js", "../../../../../node_modules/@babel/traverse/lib/path/introspection.js", "../../../../../node_modules/@babel/traverse/lib/path/context.js", "../../../../../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js", "../../../../../node_modules/@babel/traverse/lib/path/removal.js", "../../../../../node_modules/@babel/traverse/lib/path/lib/hoister.js", "../../../../../node_modules/@babel/traverse/lib/path/modification.js", "../../../../../node_modules/@babel/traverse/lib/path/family.js", "../../../../../node_modules/@babel/traverse/lib/path/comments.js", "../../../../../node_modules/@babel/traverse/lib/path/index.js", "../../../../../node_modules/@babel/traverse/lib/context.js", "../../../../../node_modules/@babel/traverse/lib/traverse-node.js", "../../../../../node_modules/@babel/traverse/lib/hub.js", "../../../../../node_modules/@babel/traverse/lib/index.js", "browser-external:path", "browser-external:fs", "browser-external:os", "../../../../../node_modules/resolve/lib/homedir.js", "../../../../../node_modules/resolve/lib/caller.js", "../../../../../node_modules/path-parse/index.js", "../../../../../node_modules/resolve/lib/node-modules-paths.js", "../../../../../node_modules/resolve/lib/normalize-options.js", "../../../../../node_modules/function-bind/implementation.js", "../../../../../node_modules/function-bind/index.js", "../../../../../node_modules/has/src/index.js", "../../../../../node_modules/is-core-module/index.js", "../../../../../node_modules/resolve/lib/async.js", "../../../../../node_modules/resolve/lib/core.js", "../../../../../node_modules/resolve/lib/is-core.js", "../../../../../node_modules/resolve/lib/sync.js", "../../../../../node_modules/resolve/index.js", "browser-external:module", "../../../../../node_modules/resolve-from/index.js", "../../../../../node_modules/callsites/index.js", "../../../../../node_modules/parent-module/index.js", "../../../../../node_modules/import-fresh/index.js", "browser-external:util", "../../../../../node_modules/is-arrayish/index.js", "../../../../../node_modules/error-ex/index.js", "../../../../../node_modules/json-parse-even-better-errors/index.js", "../../../../../node_modules/lines-and-columns/build/index.js", "../../../../../node_modules/parse-json/index.js", "../../../../../node_modules/yaml/browser/dist/PlainValue-b8036b75.js", "../../../../../node_modules/yaml/browser/dist/parse-cst.js", "../../../../../node_modules/yaml/browser/dist/resolveSeq-492ab440.js", "../../../../../node_modules/yaml/browser/dist/warnings-df54cb69.js", "../../../../../node_modules/yaml/browser/dist/Schema-e94716c8.js", "../../../../../node_modules/yaml/browser/dist/index.js", "../../../../../node_modules/yaml/browser/index.js", "../../../../../node_modules/cosmiconfig/src/loaders.ts", "../../../../../node_modules/cosmiconfig/src/getPropertyByPath.ts", "../../../../../node_modules/cosmiconfig/src/ExplorerBase.ts", "../../../../../node_modules/cosmiconfig/src/readFile.ts", "../../../../../node_modules/cosmiconfig/src/cacheWrapper.ts", "../../../../../node_modules/path-type/index.js", "../../../../../node_modules/cosmiconfig/src/getDirectory.ts", "../../../../../node_modules/cosmiconfig/src/Explorer.ts", "../../../../../node_modules/cosmiconfig/src/ExplorerSync.ts", "../../../../../node_modules/cosmiconfig/dist/types.js", "../../../../../node_modules/cosmiconfig/src/index.ts", "../../../../../node_modules/babel-plugin-macros/dist/index.js", "../../../../../node_modules/babel-plugin-syntax-jsx/lib/index.js", "../../../../../node_modules/@babel/helper-annotate-as-pure/lib/index.js", "../../../../../node_modules/picomatch/lib/constants.js", "../../../../../node_modules/picomatch/lib/utils.js", "../../../../../node_modules/picomatch/lib/scan.js", "../../../../../node_modules/picomatch/lib/parse.js", "../../../../../node_modules/picomatch/lib/picomatch.js", "../../../../../node_modules/picomatch/index.js", "../../../../../node_modules/babel-plugin-styled-components/lib/utils/options.js", "../../../../../node_modules/babel-plugin-styled-components/lib/utils/detectors.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/pure.js", "../../../../../node_modules/lodash/_freeGlobal.js", "../../../../../node_modules/lodash/_root.js", "../../../../../node_modules/lodash/_Symbol.js", "../../../../../node_modules/lodash/_getRawTag.js", "../../../../../node_modules/lodash/_objectToString.js", "../../../../../node_modules/lodash/_baseGetTag.js", "../../../../../node_modules/lodash/isObject.js", "../../../../../node_modules/lodash/isFunction.js", "../../../../../node_modules/lodash/_coreJsData.js", "../../../../../node_modules/lodash/_isMasked.js", "../../../../../node_modules/lodash/_toSource.js", "../../../../../node_modules/lodash/_baseIsNative.js", "../../../../../node_modules/lodash/_getValue.js", "../../../../../node_modules/lodash/_getNative.js", "../../../../../node_modules/lodash/_nativeCreate.js", "../../../../../node_modules/lodash/_hashClear.js", "../../../../../node_modules/lodash/_hashDelete.js", "../../../../../node_modules/lodash/_hashGet.js", "../../../../../node_modules/lodash/_hashHas.js", "../../../../../node_modules/lodash/_hashSet.js", "../../../../../node_modules/lodash/_Hash.js", "../../../../../node_modules/lodash/_listCacheClear.js", "../../../../../node_modules/lodash/eq.js", "../../../../../node_modules/lodash/_assocIndexOf.js", "../../../../../node_modules/lodash/_listCacheDelete.js", "../../../../../node_modules/lodash/_listCacheGet.js", "../../../../../node_modules/lodash/_listCacheHas.js", "../../../../../node_modules/lodash/_listCacheSet.js", "../../../../../node_modules/lodash/_ListCache.js", "../../../../../node_modules/lodash/_Map.js", "../../../../../node_modules/lodash/_mapCacheClear.js", "../../../../../node_modules/lodash/_isKeyable.js", "../../../../../node_modules/lodash/_getMapData.js", "../../../../../node_modules/lodash/_mapCacheDelete.js", "../../../../../node_modules/lodash/_mapCacheGet.js", "../../../../../node_modules/lodash/_mapCacheHas.js", "../../../../../node_modules/lodash/_mapCacheSet.js", "../../../../../node_modules/lodash/_MapCache.js", "../../../../../node_modules/lodash/_setCacheAdd.js", "../../../../../node_modules/lodash/_setCacheHas.js", "../../../../../node_modules/lodash/_SetCache.js", "../../../../../node_modules/lodash/_baseFindIndex.js", "../../../../../node_modules/lodash/_baseIsNaN.js", "../../../../../node_modules/lodash/_strictIndexOf.js", "../../../../../node_modules/lodash/_baseIndexOf.js", "../../../../../node_modules/lodash/_arrayIncludes.js", "../../../../../node_modules/lodash/_arrayIncludesWith.js", "../../../../../node_modules/lodash/_arrayMap.js", "../../../../../node_modules/lodash/_baseUnary.js", "../../../../../node_modules/lodash/_cacheHas.js", "../../../../../node_modules/lodash/_baseDifference.js", "../../../../../node_modules/lodash/_arrayPush.js", "../../../../../node_modules/lodash/isObjectLike.js", "../../../../../node_modules/lodash/_baseIsArguments.js", "../../../../../node_modules/lodash/isArguments.js", "../../../../../node_modules/lodash/isArray.js", "../../../../../node_modules/lodash/_isFlattenable.js", "../../../../../node_modules/lodash/_baseFlatten.js", "../../../../../node_modules/lodash/identity.js", "../../../../../node_modules/lodash/_apply.js", "../../../../../node_modules/lodash/_overRest.js", "../../../../../node_modules/lodash/constant.js", "../../../../../node_modules/lodash/_defineProperty.js", "../../../../../node_modules/lodash/_baseSetToString.js", "../../../../../node_modules/lodash/_shortOut.js", "../../../../../node_modules/lodash/_setToString.js", "../../../../../node_modules/lodash/_baseRest.js", "../../../../../node_modules/lodash/isLength.js", "../../../../../node_modules/lodash/isArrayLike.js", "../../../../../node_modules/lodash/isArrayLikeObject.js", "../../../../../node_modules/lodash/difference.js", "../../../../../node_modules/babel-plugin-styled-components/lib/css/placeholderUtils.js", "../../../../../node_modules/babel-plugin-styled-components/lib/minify/index.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/minify.js", "../../../../../node_modules/babel-plugin-styled-components/lib/utils/getName.js", "../../../../../node_modules/babel-plugin-styled-components/lib/utils/prefixDigit.js", "../../../../../node_modules/babel-plugin-styled-components/lib/utils/hash.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/displayNameAndId.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/templateLiterals/transpile.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/templateLiterals/index.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/assignStyledRequired.js", "../../../../../node_modules/babel-plugin-styled-components/lib/visitors/transpileCssProp.js", "../../../../../node_modules/babel-plugin-styled-components/lib/index.js", "../../../../../node_modules/styled-components/src/macro/index.js", "dep:styled-components_macro"],
  "sourcesContent": ["export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"assert\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = shallowEqual;\n\nfunction shallowEqual(actual, expected) {\n  const keys = Object.keys(expected);\n\n  for (const key of keys) {\n    if (actual[key] !== expected[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAccessor = isAccessor;\nexports.isAnyTypeAnnotation = isAnyTypeAnnotation;\nexports.isArgumentPlaceholder = isArgumentPlaceholder;\nexports.isArrayExpression = isArrayExpression;\nexports.isArrayPattern = isArrayPattern;\nexports.isArrayTypeAnnotation = isArrayTypeAnnotation;\nexports.isArrowFunctionExpression = isArrowFunctionExpression;\nexports.isAssignmentExpression = isAssignmentExpression;\nexports.isAssignmentPattern = isAssignmentPattern;\nexports.isAwaitExpression = isAwaitExpression;\nexports.isBigIntLiteral = isBigIntLiteral;\nexports.isBinary = isBinary;\nexports.isBinaryExpression = isBinaryExpression;\nexports.isBindExpression = isBindExpression;\nexports.isBlock = isBlock;\nexports.isBlockParent = isBlockParent;\nexports.isBlockStatement = isBlockStatement;\nexports.isBooleanLiteral = isBooleanLiteral;\nexports.isBooleanLiteralTypeAnnotation = isBooleanLiteralTypeAnnotation;\nexports.isBooleanTypeAnnotation = isBooleanTypeAnnotation;\nexports.isBreakStatement = isBreakStatement;\nexports.isCallExpression = isCallExpression;\nexports.isCatchClause = isCatchClause;\nexports.isClass = isClass;\nexports.isClassAccessorProperty = isClassAccessorProperty;\nexports.isClassBody = isClassBody;\nexports.isClassDeclaration = isClassDeclaration;\nexports.isClassExpression = isClassExpression;\nexports.isClassImplements = isClassImplements;\nexports.isClassMethod = isClassMethod;\nexports.isClassPrivateMethod = isClassPrivateMethod;\nexports.isClassPrivateProperty = isClassPrivateProperty;\nexports.isClassProperty = isClassProperty;\nexports.isCompletionStatement = isCompletionStatement;\nexports.isConditional = isConditional;\nexports.isConditionalExpression = isConditionalExpression;\nexports.isContinueStatement = isContinueStatement;\nexports.isDebuggerStatement = isDebuggerStatement;\nexports.isDecimalLiteral = isDecimalLiteral;\nexports.isDeclaration = isDeclaration;\nexports.isDeclareClass = isDeclareClass;\nexports.isDeclareExportAllDeclaration = isDeclareExportAllDeclaration;\nexports.isDeclareExportDeclaration = isDeclareExportDeclaration;\nexports.isDeclareFunction = isDeclareFunction;\nexports.isDeclareInterface = isDeclareInterface;\nexports.isDeclareModule = isDeclareModule;\nexports.isDeclareModuleExports = isDeclareModuleExports;\nexports.isDeclareOpaqueType = isDeclareOpaqueType;\nexports.isDeclareTypeAlias = isDeclareTypeAlias;\nexports.isDeclareVariable = isDeclareVariable;\nexports.isDeclaredPredicate = isDeclaredPredicate;\nexports.isDecorator = isDecorator;\nexports.isDirective = isDirective;\nexports.isDirectiveLiteral = isDirectiveLiteral;\nexports.isDoExpression = isDoExpression;\nexports.isDoWhileStatement = isDoWhileStatement;\nexports.isEmptyStatement = isEmptyStatement;\nexports.isEmptyTypeAnnotation = isEmptyTypeAnnotation;\nexports.isEnumBody = isEnumBody;\nexports.isEnumBooleanBody = isEnumBooleanBody;\nexports.isEnumBooleanMember = isEnumBooleanMember;\nexports.isEnumDeclaration = isEnumDeclaration;\nexports.isEnumDefaultedMember = isEnumDefaultedMember;\nexports.isEnumMember = isEnumMember;\nexports.isEnumNumberBody = isEnumNumberBody;\nexports.isEnumNumberMember = isEnumNumberMember;\nexports.isEnumStringBody = isEnumStringBody;\nexports.isEnumStringMember = isEnumStringMember;\nexports.isEnumSymbolBody = isEnumSymbolBody;\nexports.isExistsTypeAnnotation = isExistsTypeAnnotation;\nexports.isExportAllDeclaration = isExportAllDeclaration;\nexports.isExportDeclaration = isExportDeclaration;\nexports.isExportDefaultDeclaration = isExportDefaultDeclaration;\nexports.isExportDefaultSpecifier = isExportDefaultSpecifier;\nexports.isExportNamedDeclaration = isExportNamedDeclaration;\nexports.isExportNamespaceSpecifier = isExportNamespaceSpecifier;\nexports.isExportSpecifier = isExportSpecifier;\nexports.isExpression = isExpression;\nexports.isExpressionStatement = isExpressionStatement;\nexports.isExpressionWrapper = isExpressionWrapper;\nexports.isFile = isFile;\nexports.isFlow = isFlow;\nexports.isFlowBaseAnnotation = isFlowBaseAnnotation;\nexports.isFlowDeclaration = isFlowDeclaration;\nexports.isFlowPredicate = isFlowPredicate;\nexports.isFlowType = isFlowType;\nexports.isFor = isFor;\nexports.isForInStatement = isForInStatement;\nexports.isForOfStatement = isForOfStatement;\nexports.isForStatement = isForStatement;\nexports.isForXStatement = isForXStatement;\nexports.isFunction = isFunction;\nexports.isFunctionDeclaration = isFunctionDeclaration;\nexports.isFunctionExpression = isFunctionExpression;\nexports.isFunctionParent = isFunctionParent;\nexports.isFunctionTypeAnnotation = isFunctionTypeAnnotation;\nexports.isFunctionTypeParam = isFunctionTypeParam;\nexports.isGenericTypeAnnotation = isGenericTypeAnnotation;\nexports.isIdentifier = isIdentifier;\nexports.isIfStatement = isIfStatement;\nexports.isImmutable = isImmutable;\nexports.isImport = isImport;\nexports.isImportAttribute = isImportAttribute;\nexports.isImportDeclaration = isImportDeclaration;\nexports.isImportDefaultSpecifier = isImportDefaultSpecifier;\nexports.isImportNamespaceSpecifier = isImportNamespaceSpecifier;\nexports.isImportSpecifier = isImportSpecifier;\nexports.isIndexedAccessType = isIndexedAccessType;\nexports.isInferredPredicate = isInferredPredicate;\nexports.isInterfaceDeclaration = isInterfaceDeclaration;\nexports.isInterfaceExtends = isInterfaceExtends;\nexports.isInterfaceTypeAnnotation = isInterfaceTypeAnnotation;\nexports.isInterpreterDirective = isInterpreterDirective;\nexports.isIntersectionTypeAnnotation = isIntersectionTypeAnnotation;\nexports.isJSX = isJSX;\nexports.isJSXAttribute = isJSXAttribute;\nexports.isJSXClosingElement = isJSXClosingElement;\nexports.isJSXClosingFragment = isJSXClosingFragment;\nexports.isJSXElement = isJSXElement;\nexports.isJSXEmptyExpression = isJSXEmptyExpression;\nexports.isJSXExpressionContainer = isJSXExpressionContainer;\nexports.isJSXFragment = isJSXFragment;\nexports.isJSXIdentifier = isJSXIdentifier;\nexports.isJSXMemberExpression = isJSXMemberExpression;\nexports.isJSXNamespacedName = isJSXNamespacedName;\nexports.isJSXOpeningElement = isJSXOpeningElement;\nexports.isJSXOpeningFragment = isJSXOpeningFragment;\nexports.isJSXSpreadAttribute = isJSXSpreadAttribute;\nexports.isJSXSpreadChild = isJSXSpreadChild;\nexports.isJSXText = isJSXText;\nexports.isLVal = isLVal;\nexports.isLabeledStatement = isLabeledStatement;\nexports.isLiteral = isLiteral;\nexports.isLogicalExpression = isLogicalExpression;\nexports.isLoop = isLoop;\nexports.isMemberExpression = isMemberExpression;\nexports.isMetaProperty = isMetaProperty;\nexports.isMethod = isMethod;\nexports.isMiscellaneous = isMiscellaneous;\nexports.isMixedTypeAnnotation = isMixedTypeAnnotation;\nexports.isModuleDeclaration = isModuleDeclaration;\nexports.isModuleExpression = isModuleExpression;\nexports.isModuleSpecifier = isModuleSpecifier;\nexports.isNewExpression = isNewExpression;\nexports.isNoop = isNoop;\nexports.isNullLiteral = isNullLiteral;\nexports.isNullLiteralTypeAnnotation = isNullLiteralTypeAnnotation;\nexports.isNullableTypeAnnotation = isNullableTypeAnnotation;\nexports.isNumberLiteral = isNumberLiteral;\nexports.isNumberLiteralTypeAnnotation = isNumberLiteralTypeAnnotation;\nexports.isNumberTypeAnnotation = isNumberTypeAnnotation;\nexports.isNumericLiteral = isNumericLiteral;\nexports.isObjectExpression = isObjectExpression;\nexports.isObjectMember = isObjectMember;\nexports.isObjectMethod = isObjectMethod;\nexports.isObjectPattern = isObjectPattern;\nexports.isObjectProperty = isObjectProperty;\nexports.isObjectTypeAnnotation = isObjectTypeAnnotation;\nexports.isObjectTypeCallProperty = isObjectTypeCallProperty;\nexports.isObjectTypeIndexer = isObjectTypeIndexer;\nexports.isObjectTypeInternalSlot = isObjectTypeInternalSlot;\nexports.isObjectTypeProperty = isObjectTypeProperty;\nexports.isObjectTypeSpreadProperty = isObjectTypeSpreadProperty;\nexports.isOpaqueType = isOpaqueType;\nexports.isOptionalCallExpression = isOptionalCallExpression;\nexports.isOptionalIndexedAccessType = isOptionalIndexedAccessType;\nexports.isOptionalMemberExpression = isOptionalMemberExpression;\nexports.isParenthesizedExpression = isParenthesizedExpression;\nexports.isPattern = isPattern;\nexports.isPatternLike = isPatternLike;\nexports.isPipelineBareFunction = isPipelineBareFunction;\nexports.isPipelinePrimaryTopicReference = isPipelinePrimaryTopicReference;\nexports.isPipelineTopicExpression = isPipelineTopicExpression;\nexports.isPlaceholder = isPlaceholder;\nexports.isPrivate = isPrivate;\nexports.isPrivateName = isPrivateName;\nexports.isProgram = isProgram;\nexports.isProperty = isProperty;\nexports.isPureish = isPureish;\nexports.isQualifiedTypeIdentifier = isQualifiedTypeIdentifier;\nexports.isRecordExpression = isRecordExpression;\nexports.isRegExpLiteral = isRegExpLiteral;\nexports.isRegexLiteral = isRegexLiteral;\nexports.isRestElement = isRestElement;\nexports.isRestProperty = isRestProperty;\nexports.isReturnStatement = isReturnStatement;\nexports.isScopable = isScopable;\nexports.isSequenceExpression = isSequenceExpression;\nexports.isSpreadElement = isSpreadElement;\nexports.isSpreadProperty = isSpreadProperty;\nexports.isStandardized = isStandardized;\nexports.isStatement = isStatement;\nexports.isStaticBlock = isStaticBlock;\nexports.isStringLiteral = isStringLiteral;\nexports.isStringLiteralTypeAnnotation = isStringLiteralTypeAnnotation;\nexports.isStringTypeAnnotation = isStringTypeAnnotation;\nexports.isSuper = isSuper;\nexports.isSwitchCase = isSwitchCase;\nexports.isSwitchStatement = isSwitchStatement;\nexports.isSymbolTypeAnnotation = isSymbolTypeAnnotation;\nexports.isTSAnyKeyword = isTSAnyKeyword;\nexports.isTSArrayType = isTSArrayType;\nexports.isTSAsExpression = isTSAsExpression;\nexports.isTSBaseType = isTSBaseType;\nexports.isTSBigIntKeyword = isTSBigIntKeyword;\nexports.isTSBooleanKeyword = isTSBooleanKeyword;\nexports.isTSCallSignatureDeclaration = isTSCallSignatureDeclaration;\nexports.isTSConditionalType = isTSConditionalType;\nexports.isTSConstructSignatureDeclaration = isTSConstructSignatureDeclaration;\nexports.isTSConstructorType = isTSConstructorType;\nexports.isTSDeclareFunction = isTSDeclareFunction;\nexports.isTSDeclareMethod = isTSDeclareMethod;\nexports.isTSEntityName = isTSEntityName;\nexports.isTSEnumDeclaration = isTSEnumDeclaration;\nexports.isTSEnumMember = isTSEnumMember;\nexports.isTSExportAssignment = isTSExportAssignment;\nexports.isTSExpressionWithTypeArguments = isTSExpressionWithTypeArguments;\nexports.isTSExternalModuleReference = isTSExternalModuleReference;\nexports.isTSFunctionType = isTSFunctionType;\nexports.isTSImportEqualsDeclaration = isTSImportEqualsDeclaration;\nexports.isTSImportType = isTSImportType;\nexports.isTSIndexSignature = isTSIndexSignature;\nexports.isTSIndexedAccessType = isTSIndexedAccessType;\nexports.isTSInferType = isTSInferType;\nexports.isTSInstantiationExpression = isTSInstantiationExpression;\nexports.isTSInterfaceBody = isTSInterfaceBody;\nexports.isTSInterfaceDeclaration = isTSInterfaceDeclaration;\nexports.isTSIntersectionType = isTSIntersectionType;\nexports.isTSIntrinsicKeyword = isTSIntrinsicKeyword;\nexports.isTSLiteralType = isTSLiteralType;\nexports.isTSMappedType = isTSMappedType;\nexports.isTSMethodSignature = isTSMethodSignature;\nexports.isTSModuleBlock = isTSModuleBlock;\nexports.isTSModuleDeclaration = isTSModuleDeclaration;\nexports.isTSNamedTupleMember = isTSNamedTupleMember;\nexports.isTSNamespaceExportDeclaration = isTSNamespaceExportDeclaration;\nexports.isTSNeverKeyword = isTSNeverKeyword;\nexports.isTSNonNullExpression = isTSNonNullExpression;\nexports.isTSNullKeyword = isTSNullKeyword;\nexports.isTSNumberKeyword = isTSNumberKeyword;\nexports.isTSObjectKeyword = isTSObjectKeyword;\nexports.isTSOptionalType = isTSOptionalType;\nexports.isTSParameterProperty = isTSParameterProperty;\nexports.isTSParenthesizedType = isTSParenthesizedType;\nexports.isTSPropertySignature = isTSPropertySignature;\nexports.isTSQualifiedName = isTSQualifiedName;\nexports.isTSRestType = isTSRestType;\nexports.isTSStringKeyword = isTSStringKeyword;\nexports.isTSSymbolKeyword = isTSSymbolKeyword;\nexports.isTSThisType = isTSThisType;\nexports.isTSTupleType = isTSTupleType;\nexports.isTSType = isTSType;\nexports.isTSTypeAliasDeclaration = isTSTypeAliasDeclaration;\nexports.isTSTypeAnnotation = isTSTypeAnnotation;\nexports.isTSTypeAssertion = isTSTypeAssertion;\nexports.isTSTypeElement = isTSTypeElement;\nexports.isTSTypeLiteral = isTSTypeLiteral;\nexports.isTSTypeOperator = isTSTypeOperator;\nexports.isTSTypeParameter = isTSTypeParameter;\nexports.isTSTypeParameterDeclaration = isTSTypeParameterDeclaration;\nexports.isTSTypeParameterInstantiation = isTSTypeParameterInstantiation;\nexports.isTSTypePredicate = isTSTypePredicate;\nexports.isTSTypeQuery = isTSTypeQuery;\nexports.isTSTypeReference = isTSTypeReference;\nexports.isTSUndefinedKeyword = isTSUndefinedKeyword;\nexports.isTSUnionType = isTSUnionType;\nexports.isTSUnknownKeyword = isTSUnknownKeyword;\nexports.isTSVoidKeyword = isTSVoidKeyword;\nexports.isTaggedTemplateExpression = isTaggedTemplateExpression;\nexports.isTemplateElement = isTemplateElement;\nexports.isTemplateLiteral = isTemplateLiteral;\nexports.isTerminatorless = isTerminatorless;\nexports.isThisExpression = isThisExpression;\nexports.isThisTypeAnnotation = isThisTypeAnnotation;\nexports.isThrowStatement = isThrowStatement;\nexports.isTopicReference = isTopicReference;\nexports.isTryStatement = isTryStatement;\nexports.isTupleExpression = isTupleExpression;\nexports.isTupleTypeAnnotation = isTupleTypeAnnotation;\nexports.isTypeAlias = isTypeAlias;\nexports.isTypeAnnotation = isTypeAnnotation;\nexports.isTypeCastExpression = isTypeCastExpression;\nexports.isTypeParameter = isTypeParameter;\nexports.isTypeParameterDeclaration = isTypeParameterDeclaration;\nexports.isTypeParameterInstantiation = isTypeParameterInstantiation;\nexports.isTypeScript = isTypeScript;\nexports.isTypeofTypeAnnotation = isTypeofTypeAnnotation;\nexports.isUnaryExpression = isUnaryExpression;\nexports.isUnaryLike = isUnaryLike;\nexports.isUnionTypeAnnotation = isUnionTypeAnnotation;\nexports.isUpdateExpression = isUpdateExpression;\nexports.isUserWhitespacable = isUserWhitespacable;\nexports.isV8IntrinsicIdentifier = isV8IntrinsicIdentifier;\nexports.isVariableDeclaration = isVariableDeclaration;\nexports.isVariableDeclarator = isVariableDeclarator;\nexports.isVariance = isVariance;\nexports.isVoidTypeAnnotation = isVoidTypeAnnotation;\nexports.isWhile = isWhile;\nexports.isWhileStatement = isWhileStatement;\nexports.isWithStatement = isWithStatement;\nexports.isYieldExpression = isYieldExpression;\n\nvar _shallowEqual = require(\"../../utils/shallowEqual\");\n\nfunction isArrayExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAssignmentExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AssignmentExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBinaryExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BinaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterpreterDirective(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterpreterDirective\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDirective(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Directive\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDirectiveLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DirectiveLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlockStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BlockStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBreakStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BreakStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCallExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"CallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCatchClause(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"CatchClause\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isConditionalExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ConditionalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isContinueStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ContinueStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDebuggerStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DebuggerStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDoWhileStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DoWhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEmptyStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EmptyStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpressionStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExpressionStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFile(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"File\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForInStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForInStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Identifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIfStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLabeledStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"LabeledStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumericLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumericLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRegExpLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RegExpLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLogicalExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"LogicalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNewExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NewExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isProgram(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Program\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRestElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RestElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isReturnStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ReturnStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSequenceExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SequenceExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isParenthesizedExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ParenthesizedExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSwitchCase(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SwitchCase\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSwitchStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SwitchStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThisExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThisExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThrowStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThrowStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTryStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TryStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnaryExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UnaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUpdateExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UpdateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VariableDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableDeclarator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VariableDeclarator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWhileStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"WhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWithStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"WithStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAssignmentPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AssignmentPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrayPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrowFunctionExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrowFunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportAllDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDefaultDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportDefaultDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportNamedDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportNamedDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForOfStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForOfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportDefaultSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportNamespaceSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMetaProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MetaProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSpreadElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SpreadElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSuper(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Super\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTaggedTemplateExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TaggedTemplateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTemplateElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TemplateElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTemplateLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TemplateLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isYieldExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"YieldExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAwaitExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AwaitExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImport(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Import\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBigIntLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BigIntLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportNamespaceSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalCallExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalCallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassAccessorProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassAccessorProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassPrivateProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassPrivateProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassPrivateMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassPrivateMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPrivateName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PrivateName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStaticBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StaticBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAnyTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AnyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrayTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassImplements(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassImplements\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareClass(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareClass\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareInterface(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareInterface\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareModule(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareModule\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareModuleExports(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareModuleExports\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareTypeAlias(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareTypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareOpaqueType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareOpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareVariable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareVariable\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareExportAllDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclaredPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclaredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExistsTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExistsTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionTypeParam(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionTypeParam\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isGenericTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"GenericTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInferredPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InferredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceExtends(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceExtends\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIntersectionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IntersectionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMixedTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MixedTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEmptyTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EmptyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullableTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullableTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeInternalSlot(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeInternalSlot\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeCallProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeCallProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeIndexer(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeIndexer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeSpreadProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeSpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOpaqueType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isQualifiedTypeIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"QualifiedTypeIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSymbolTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SymbolTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThisTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThisTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTupleTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TupleTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeofTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeofTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeAlias(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeCastExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeCastExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameter(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameterDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameterInstantiation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UnionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariance(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Variance\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVoidTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VoidTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBooleanBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumBooleanBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumNumberBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumNumberBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumStringBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumStringBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumSymbolBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumSymbolBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBooleanMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumBooleanMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumNumberMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumNumberMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumStringMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumStringMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumDefaultedMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumDefaultedMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXClosingElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXClosingElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXEmptyExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXEmptyExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXExpressionContainer(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXExpressionContainer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXSpreadChild(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXSpreadChild\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXNamespacedName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXNamespacedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXOpeningElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXOpeningElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXSpreadAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXSpreadAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXText(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXText\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXOpeningFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXOpeningFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXClosingFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXClosingFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNoop(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Noop\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPlaceholder(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Placeholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isV8IntrinsicIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"V8IntrinsicIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArgumentPlaceholder(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArgumentPlaceholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBindExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BindExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDecorator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Decorator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDoExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DoExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDefaultSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRecordExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RecordExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTupleExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TupleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDecimalLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DecimalLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ModuleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTopicReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelineTopicExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelineTopicExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelineBareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelineBareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelinePrimaryTopicReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelinePrimaryTopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSParameterProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSParameterProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSDeclareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSDeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSDeclareMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSDeclareMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSQualifiedName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSQualifiedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSCallSignatureDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSCallSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConstructSignatureDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConstructSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSPropertySignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSPropertySignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSMethodSignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSMethodSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIndexSignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIndexSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSAnyKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSAnyKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBooleanKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSBooleanKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBigIntKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSBigIntKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIntrinsicKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIntrinsicKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNeverKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNeverKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNullKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNullKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNumberKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNumberKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSObjectKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSObjectKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSStringKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSStringKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSSymbolKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSSymbolKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUndefinedKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUndefinedKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUnknownKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUnknownKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSVoidKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSVoidKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSThisType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSThisType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSFunctionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSFunctionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConstructorType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConstructorType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypePredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypePredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeQuery(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeQuery\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSArrayType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSArrayType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTupleType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTupleType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSOptionalType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSOptionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSRestType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSRestType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNamedTupleMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNamedTupleMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUnionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUnionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIntersectionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIntersectionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConditionalType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConditionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInferType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInferType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSParenthesizedType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSParenthesizedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeOperator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeOperator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSMappedType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSMappedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSLiteralType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSLiteralType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExpressionWithTypeArguments(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExpressionWithTypeArguments\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInterfaceDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInterfaceBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInterfaceBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAliasDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAliasDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInstantiationExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInstantiationExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSAsExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSAsExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAssertion(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAssertion\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEnumDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSEnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEnumMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSEnumMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSModuleDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSModuleDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSModuleBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSModuleBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSImportType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSImportType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSImportEqualsDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSImportEqualsDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExternalModuleReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExternalModuleReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNonNullExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNonNullExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExportAssignment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExportAssignment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNamespaceExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNamespaceExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameterInstantiation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameterDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameter(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStandardized(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ArrayExpression\" === nodeType || \"AssignmentExpression\" === nodeType || \"BinaryExpression\" === nodeType || \"InterpreterDirective\" === nodeType || \"Directive\" === nodeType || \"DirectiveLiteral\" === nodeType || \"BlockStatement\" === nodeType || \"BreakStatement\" === nodeType || \"CallExpression\" === nodeType || \"CatchClause\" === nodeType || \"ConditionalExpression\" === nodeType || \"ContinueStatement\" === nodeType || \"DebuggerStatement\" === nodeType || \"DoWhileStatement\" === nodeType || \"EmptyStatement\" === nodeType || \"ExpressionStatement\" === nodeType || \"File\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Identifier\" === nodeType || \"IfStatement\" === nodeType || \"LabeledStatement\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"LogicalExpression\" === nodeType || \"MemberExpression\" === nodeType || \"NewExpression\" === nodeType || \"Program\" === nodeType || \"ObjectExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType || \"RestElement\" === nodeType || \"ReturnStatement\" === nodeType || \"SequenceExpression\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"SwitchCase\" === nodeType || \"SwitchStatement\" === nodeType || \"ThisExpression\" === nodeType || \"ThrowStatement\" === nodeType || \"TryStatement\" === nodeType || \"UnaryExpression\" === nodeType || \"UpdateExpression\" === nodeType || \"VariableDeclaration\" === nodeType || \"VariableDeclarator\" === nodeType || \"WhileStatement\" === nodeType || \"WithStatement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassBody\" === nodeType || \"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ExportSpecifier\" === nodeType || \"ForOfStatement\" === nodeType || \"ImportDeclaration\" === nodeType || \"ImportDefaultSpecifier\" === nodeType || \"ImportNamespaceSpecifier\" === nodeType || \"ImportSpecifier\" === nodeType || \"MetaProperty\" === nodeType || \"ClassMethod\" === nodeType || \"ObjectPattern\" === nodeType || \"SpreadElement\" === nodeType || \"Super\" === nodeType || \"TaggedTemplateExpression\" === nodeType || \"TemplateElement\" === nodeType || \"TemplateLiteral\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType || \"Import\" === nodeType || \"BigIntLiteral\" === nodeType || \"ExportNamespaceSpecifier\" === nodeType || \"OptionalMemberExpression\" === nodeType || \"OptionalCallExpression\" === nodeType || \"ClassProperty\" === nodeType || \"ClassAccessorProperty\" === nodeType || \"ClassPrivateProperty\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"PrivateName\" === nodeType || \"StaticBlock\" === nodeType || nodeType === \"Placeholder\" && (\"Identifier\" === node.expectedNode || \"StringLiteral\" === node.expectedNode || \"BlockStatement\" === node.expectedNode || \"ClassBody\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ArrayExpression\" === nodeType || \"AssignmentExpression\" === nodeType || \"BinaryExpression\" === nodeType || \"CallExpression\" === nodeType || \"ConditionalExpression\" === nodeType || \"FunctionExpression\" === nodeType || \"Identifier\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"LogicalExpression\" === nodeType || \"MemberExpression\" === nodeType || \"NewExpression\" === nodeType || \"ObjectExpression\" === nodeType || \"SequenceExpression\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"ThisExpression\" === nodeType || \"UnaryExpression\" === nodeType || \"UpdateExpression\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassExpression\" === nodeType || \"MetaProperty\" === nodeType || \"Super\" === nodeType || \"TaggedTemplateExpression\" === nodeType || \"TemplateLiteral\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType || \"Import\" === nodeType || \"BigIntLiteral\" === nodeType || \"OptionalMemberExpression\" === nodeType || \"OptionalCallExpression\" === nodeType || \"TypeCastExpression\" === nodeType || \"JSXElement\" === nodeType || \"JSXFragment\" === nodeType || \"BindExpression\" === nodeType || \"DoExpression\" === nodeType || \"RecordExpression\" === nodeType || \"TupleExpression\" === nodeType || \"DecimalLiteral\" === nodeType || \"ModuleExpression\" === nodeType || \"TopicReference\" === nodeType || \"PipelineTopicExpression\" === nodeType || \"PipelineBareFunction\" === nodeType || \"PipelinePrimaryTopicReference\" === nodeType || \"TSInstantiationExpression\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Expression\" === node.expectedNode || \"Identifier\" === node.expectedNode || \"StringLiteral\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBinary(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BinaryExpression\" === nodeType || \"LogicalExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isScopable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"CatchClause\" === nodeType || \"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Program\" === nodeType || \"ObjectMethod\" === nodeType || \"SwitchStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType || \"ForOfStatement\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlockParent(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"CatchClause\" === nodeType || \"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Program\" === nodeType || \"ObjectMethod\" === nodeType || \"SwitchStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ForOfStatement\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"Program\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"DebuggerStatement\" === nodeType || \"DoWhileStatement\" === nodeType || \"EmptyStatement\" === nodeType || \"ExpressionStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"IfStatement\" === nodeType || \"LabeledStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"SwitchStatement\" === nodeType || \"ThrowStatement\" === nodeType || \"TryStatement\" === nodeType || \"VariableDeclaration\" === nodeType || \"WhileStatement\" === nodeType || \"WithStatement\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ForOfStatement\" === nodeType || \"ImportDeclaration\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType || \"EnumDeclaration\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSModuleDeclaration\" === nodeType || \"TSImportEqualsDeclaration\" === nodeType || \"TSExportAssignment\" === nodeType || \"TSNamespaceExportDeclaration\" === nodeType || nodeType === \"Placeholder\" && (\"Statement\" === node.expectedNode || \"Declaration\" === node.expectedNode || \"BlockStatement\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTerminatorless(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"ThrowStatement\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCompletionStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"ThrowStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isConditional(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ConditionalExpression\" === nodeType || \"IfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLoop(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWhile(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DoWhileStatement\" === nodeType || \"WhileStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpressionWrapper(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExpressionStatement\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"TypeCastExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFor(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForXStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ForInStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionParent(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPureish(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"BigIntLiteral\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"VariableDeclaration\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ImportDeclaration\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType || \"EnumDeclaration\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSModuleDeclaration\" === nodeType || nodeType === \"Placeholder\" && \"Declaration\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPatternLike(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"RestElement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Pattern\" === node.expectedNode || \"Identifier\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLVal(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"MemberExpression\" === nodeType || \"RestElement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || \"TSParameterProperty\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Pattern\" === node.expectedNode || \"Identifier\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEntityName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"TSQualifiedName\" === nodeType || nodeType === \"Placeholder\" && \"Identifier\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"TemplateLiteral\" === nodeType || \"BigIntLiteral\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImmutable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"BigIntLiteral\" === nodeType || \"JSXAttribute\" === nodeType || \"JSXClosingElement\" === nodeType || \"JSXElement\" === nodeType || \"JSXExpressionContainer\" === nodeType || \"JSXSpreadChild\" === nodeType || \"JSXOpeningElement\" === nodeType || \"JSXText\" === nodeType || \"JSXFragment\" === nodeType || \"JSXOpeningFragment\" === nodeType || \"JSXClosingFragment\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUserWhitespacable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType || \"ObjectTypeInternalSlot\" === nodeType || \"ObjectTypeCallProperty\" === nodeType || \"ObjectTypeIndexer\" === nodeType || \"ObjectTypeProperty\" === nodeType || \"ObjectTypeSpreadProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectProperty\" === nodeType || \"ClassProperty\" === nodeType || \"ClassAccessorProperty\" === nodeType || \"ClassPrivateProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnaryLike(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"UnaryExpression\" === nodeType || \"SpreadElement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || nodeType === \"Placeholder\" && \"Pattern\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClass(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ImportDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportSpecifier\" === nodeType || \"ImportDefaultSpecifier\" === nodeType || \"ImportNamespaceSpecifier\" === nodeType || \"ImportSpecifier\" === nodeType || \"ExportNamespaceSpecifier\" === nodeType || \"ExportDefaultSpecifier\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAccessor(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassAccessorProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPrivate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassPrivateProperty\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"PrivateName\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlow(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"ArrayTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"BooleanLiteralTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"ClassImplements\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"DeclaredPredicate\" === nodeType || \"ExistsTypeAnnotation\" === nodeType || \"FunctionTypeAnnotation\" === nodeType || \"FunctionTypeParam\" === nodeType || \"GenericTypeAnnotation\" === nodeType || \"InferredPredicate\" === nodeType || \"InterfaceExtends\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"InterfaceTypeAnnotation\" === nodeType || \"IntersectionTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NullableTypeAnnotation\" === nodeType || \"NumberLiteralTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"ObjectTypeAnnotation\" === nodeType || \"ObjectTypeInternalSlot\" === nodeType || \"ObjectTypeCallProperty\" === nodeType || \"ObjectTypeIndexer\" === nodeType || \"ObjectTypeProperty\" === nodeType || \"ObjectTypeSpreadProperty\" === nodeType || \"OpaqueType\" === nodeType || \"QualifiedTypeIdentifier\" === nodeType || \"StringLiteralTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"TupleTypeAnnotation\" === nodeType || \"TypeofTypeAnnotation\" === nodeType || \"TypeAlias\" === nodeType || \"TypeAnnotation\" === nodeType || \"TypeCastExpression\" === nodeType || \"TypeParameter\" === nodeType || \"TypeParameterDeclaration\" === nodeType || \"TypeParameterInstantiation\" === nodeType || \"UnionTypeAnnotation\" === nodeType || \"Variance\" === nodeType || \"VoidTypeAnnotation\" === nodeType || \"EnumDeclaration\" === nodeType || \"EnumBooleanBody\" === nodeType || \"EnumNumberBody\" === nodeType || \"EnumStringBody\" === nodeType || \"EnumSymbolBody\" === nodeType || \"EnumBooleanMember\" === nodeType || \"EnumNumberMember\" === nodeType || \"EnumStringMember\" === nodeType || \"EnumDefaultedMember\" === nodeType || \"IndexedAccessType\" === nodeType || \"OptionalIndexedAccessType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"ArrayTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"BooleanLiteralTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"ExistsTypeAnnotation\" === nodeType || \"FunctionTypeAnnotation\" === nodeType || \"GenericTypeAnnotation\" === nodeType || \"InterfaceTypeAnnotation\" === nodeType || \"IntersectionTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NullableTypeAnnotation\" === nodeType || \"NumberLiteralTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"ObjectTypeAnnotation\" === nodeType || \"StringLiteralTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"TupleTypeAnnotation\" === nodeType || \"TypeofTypeAnnotation\" === nodeType || \"UnionTypeAnnotation\" === nodeType || \"VoidTypeAnnotation\" === nodeType || \"IndexedAccessType\" === nodeType || \"OptionalIndexedAccessType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowBaseAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"VoidTypeAnnotation\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DeclaredPredicate\" === nodeType || \"InferredPredicate\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"EnumBooleanBody\" === nodeType || \"EnumNumberBody\" === nodeType || \"EnumStringBody\" === nodeType || \"EnumSymbolBody\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"EnumBooleanMember\" === nodeType || \"EnumNumberMember\" === nodeType || \"EnumStringMember\" === nodeType || \"EnumDefaultedMember\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSX(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"JSXAttribute\" === nodeType || \"JSXClosingElement\" === nodeType || \"JSXElement\" === nodeType || \"JSXEmptyExpression\" === nodeType || \"JSXExpressionContainer\" === nodeType || \"JSXSpreadChild\" === nodeType || \"JSXIdentifier\" === nodeType || \"JSXMemberExpression\" === nodeType || \"JSXNamespacedName\" === nodeType || \"JSXOpeningElement\" === nodeType || \"JSXSpreadAttribute\" === nodeType || \"JSXText\" === nodeType || \"JSXFragment\" === nodeType || \"JSXOpeningFragment\" === nodeType || \"JSXClosingFragment\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMiscellaneous(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Noop\" === nodeType || \"Placeholder\" === nodeType || \"V8IntrinsicIdentifier\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeScript(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSParameterProperty\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSDeclareMethod\" === nodeType || \"TSQualifiedName\" === nodeType || \"TSCallSignatureDeclaration\" === nodeType || \"TSConstructSignatureDeclaration\" === nodeType || \"TSPropertySignature\" === nodeType || \"TSMethodSignature\" === nodeType || \"TSIndexSignature\" === nodeType || \"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSFunctionType\" === nodeType || \"TSConstructorType\" === nodeType || \"TSTypeReference\" === nodeType || \"TSTypePredicate\" === nodeType || \"TSTypeQuery\" === nodeType || \"TSTypeLiteral\" === nodeType || \"TSArrayType\" === nodeType || \"TSTupleType\" === nodeType || \"TSOptionalType\" === nodeType || \"TSRestType\" === nodeType || \"TSNamedTupleMember\" === nodeType || \"TSUnionType\" === nodeType || \"TSIntersectionType\" === nodeType || \"TSConditionalType\" === nodeType || \"TSInferType\" === nodeType || \"TSParenthesizedType\" === nodeType || \"TSTypeOperator\" === nodeType || \"TSIndexedAccessType\" === nodeType || \"TSMappedType\" === nodeType || \"TSLiteralType\" === nodeType || \"TSExpressionWithTypeArguments\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSInterfaceBody\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSInstantiationExpression\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSEnumMember\" === nodeType || \"TSModuleDeclaration\" === nodeType || \"TSModuleBlock\" === nodeType || \"TSImportType\" === nodeType || \"TSImportEqualsDeclaration\" === nodeType || \"TSExternalModuleReference\" === nodeType || \"TSNonNullExpression\" === nodeType || \"TSExportAssignment\" === nodeType || \"TSNamespaceExportDeclaration\" === nodeType || \"TSTypeAnnotation\" === nodeType || \"TSTypeParameterInstantiation\" === nodeType || \"TSTypeParameterDeclaration\" === nodeType || \"TSTypeParameter\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSCallSignatureDeclaration\" === nodeType || \"TSConstructSignatureDeclaration\" === nodeType || \"TSPropertySignature\" === nodeType || \"TSMethodSignature\" === nodeType || \"TSIndexSignature\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSFunctionType\" === nodeType || \"TSConstructorType\" === nodeType || \"TSTypeReference\" === nodeType || \"TSTypePredicate\" === nodeType || \"TSTypeQuery\" === nodeType || \"TSTypeLiteral\" === nodeType || \"TSArrayType\" === nodeType || \"TSTupleType\" === nodeType || \"TSOptionalType\" === nodeType || \"TSRestType\" === nodeType || \"TSUnionType\" === nodeType || \"TSIntersectionType\" === nodeType || \"TSConditionalType\" === nodeType || \"TSInferType\" === nodeType || \"TSParenthesizedType\" === nodeType || \"TSTypeOperator\" === nodeType || \"TSIndexedAccessType\" === nodeType || \"TSMappedType\" === nodeType || \"TSLiteralType\" === nodeType || \"TSExpressionWithTypeArguments\" === nodeType || \"TSImportType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBaseType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSLiteralType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RegexLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RestProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matchesPattern;\n\nvar _generated = require(\"./generated\");\n\nfunction matchesPattern(member, match, allowPartial) {\n  if (!(0, _generated.isMemberExpression)(member)) return false;\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n  let node;\n\n  for (node = member; (0, _generated.isMemberExpression)(node); node = node.object) {\n    nodes.push(node.property);\n  }\n\n  nodes.push(node);\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n\n    if ((0, _generated.isIdentifier)(node)) {\n      value = node.name;\n    } else if ((0, _generated.isStringLiteral)(node)) {\n      value = node.value;\n    } else if ((0, _generated.isThisExpression)(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildMatchMemberExpression;\n\nvar _matchesPattern = require(\"./matchesPattern\");\n\nfunction buildMatchMemberExpression(match, allowPartial) {\n  const parts = match.split(\".\");\n  return member => (0, _matchesPattern.default)(member, parts, allowPartial);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _buildMatchMemberExpression = require(\"../buildMatchMemberExpression\");\n\nconst isReactComponent = (0, _buildMatchMemberExpression.default)(\"React.Component\");\nvar _default = isReactComponent;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCompatTag;\n\nfunction isCompatTag(tagName) {\n  return !!tagName && /^[a-z]/.test(tagName);\n}", "'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isType;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isType(nodeType, targetType) {\n  if (nodeType === targetType) return true;\n  if (_definitions.ALIAS_KEYS[targetType]) return false;\n  const aliases = _definitions.FLIPPED_ALIAS_KEYS[targetType];\n\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPlaceholderType;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isPlaceholderType(placeholderType, targetType) {\n  if (placeholderType === targetType) return true;\n  const aliases = _definitions.PLACEHOLDERS_ALIAS[placeholderType];\n\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = is;\n\nvar _shallowEqual = require(\"../utils/shallowEqual\");\n\nvar _isType = require(\"./isType\");\n\nvar _isPlaceholderType = require(\"./isPlaceholderType\");\n\nvar _definitions = require(\"../definitions\");\n\nfunction is(type, node, opts) {\n  if (!node) return false;\n  const matches = (0, _isType.default)(node.type, type);\n\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in _definitions.FLIPPED_ALIAS_KEYS) {\n      return (0, _isPlaceholderType.default)(node.expectedNode, type);\n    }\n\n    return false;\n  }\n\n  if (typeof opts === \"undefined\") {\n    return true;\n  } else {\n    return (0, _shallowEqual.default)(node, opts);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nexports.isIdentifierStart = isIdentifierStart;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nfunction isIdentifierName(name) {\n  let isFirst = true;\n\n  for (let i = 0; i < name.length; i++) {\n    let cp = name.charCodeAt(i);\n\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    if (isFirst) {\n      isFirst = false;\n\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n\n  return !isFirst;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isKeyword = isKeyword;\nexports.isReservedWord = isReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords.has(word);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\n\nvar _identifier = require(\"./identifier\");\n\nvar _keyword = require(\"./keyword\");", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidIdentifier;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction isValidIdentifier(name, reserved = true) {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    if ((0, _helperValidatorIdentifier.isKeyword)(name) || (0, _helperValidatorIdentifier.isStrictReservedWord)(name, true)) {\n      return false;\n    }\n  }\n\n  return (0, _helperValidatorIdentifier.isIdentifierName)(name);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPDATE_OPERATORS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.STATEMENT_OR_BLOCK_KEYS = exports.NUMBER_UNARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.NOT_LOCAL_BINDING = exports.LOGICAL_OPERATORS = exports.INHERIT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.EQUALITY_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.COMMENT_KEYS = exports.BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.BLOCK_SCOPED_SYMBOL = exports.BINARY_OPERATORS = exports.ASSIGNMENT_OPERATORS = void 0;\nconst STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexports.STATEMENT_OR_BLOCK_KEYS = STATEMENT_OR_BLOCK_KEYS;\nconst FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexports.FLATTENABLE_KEYS = FLATTENABLE_KEYS;\nconst FOR_INIT_KEYS = [\"left\", \"init\"];\nexports.FOR_INIT_KEYS = FOR_INIT_KEYS;\nconst COMMENT_KEYS = [\"leadingComments\", \"trailingComments\", \"innerComments\"];\nexports.COMMENT_KEYS = COMMENT_KEYS;\nconst LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexports.LOGICAL_OPERATORS = LOGICAL_OPERATORS;\nconst UPDATE_OPERATORS = [\"++\", \"--\"];\nexports.UPDATE_OPERATORS = UPDATE_OPERATORS;\nconst BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexports.BOOLEAN_NUMBER_BINARY_OPERATORS = BOOLEAN_NUMBER_BINARY_OPERATORS;\nconst EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexports.EQUALITY_BINARY_OPERATORS = EQUALITY_BINARY_OPERATORS;\nconst COMPARISON_BINARY_OPERATORS = [...EQUALITY_BINARY_OPERATORS, \"in\", \"instanceof\"];\nexports.COMPARISON_BINARY_OPERATORS = COMPARISON_BINARY_OPERATORS;\nconst BOOLEAN_BINARY_OPERATORS = [...COMPARISON_BINARY_OPERATORS, ...BOOLEAN_NUMBER_BINARY_OPERATORS];\nexports.BOOLEAN_BINARY_OPERATORS = BOOLEAN_BINARY_OPERATORS;\nconst NUMBER_BINARY_OPERATORS = [\"-\", \"/\", \"%\", \"*\", \"**\", \"&\", \"|\", \">>\", \">>>\", \"<<\", \"^\"];\nexports.NUMBER_BINARY_OPERATORS = NUMBER_BINARY_OPERATORS;\nconst BINARY_OPERATORS = [\"+\", ...NUMBER_BINARY_OPERATORS, ...BOOLEAN_BINARY_OPERATORS, \"|>\"];\nexports.BINARY_OPERATORS = BINARY_OPERATORS;\nconst ASSIGNMENT_OPERATORS = [\"=\", \"+=\", ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"), ...LOGICAL_OPERATORS.map(op => op + \"=\")];\nexports.ASSIGNMENT_OPERATORS = ASSIGNMENT_OPERATORS;\nconst BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexports.BOOLEAN_UNARY_OPERATORS = BOOLEAN_UNARY_OPERATORS;\nconst NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexports.NUMBER_UNARY_OPERATORS = NUMBER_UNARY_OPERATORS;\nconst STRING_UNARY_OPERATORS = [\"typeof\"];\nexports.STRING_UNARY_OPERATORS = STRING_UNARY_OPERATORS;\nconst UNARY_OPERATORS = [\"void\", \"throw\", ...BOOLEAN_UNARY_OPERATORS, ...NUMBER_UNARY_OPERATORS, ...STRING_UNARY_OPERATORS];\nexports.UNARY_OPERATORS = UNARY_OPERATORS;\nconst INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"]\n};\nexports.INHERIT_KEYS = INHERIT_KEYS;\nconst BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexports.BLOCK_SCOPED_SYMBOL = BLOCK_SCOPED_SYMBOL;\nconst NOT_LOCAL_BINDING = Symbol.for(\"should not be considered a local binding\");\nexports.NOT_LOCAL_BINDING = NOT_LOCAL_BINDING;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VISITOR_KEYS = exports.NODE_PARENT_VALIDATIONS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.ALIAS_KEYS = void 0;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.assertEach = assertEach;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertNodeType = assertNodeType;\nexports.assertOneOf = assertOneOf;\nexports.assertOptionalChainStart = assertOptionalChainStart;\nexports.assertShape = assertShape;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports.default = defineType;\nexports.defineAliasedType = defineAliasedType;\nexports.typeIs = typeIs;\nexports.validate = validate;\nexports.validateArrayOfType = validateArrayOfType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.validateType = validateType;\n\nvar _is = require(\"../validators/is\");\n\nvar _validate = require(\"../validators/validate\");\n\nconst VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nconst ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nconst FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nconst NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nconst BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nconst DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\nconst NODE_PARENT_VALIDATIONS = {};\nexports.NODE_PARENT_VALIDATIONS = NODE_PARENT_VALIDATIONS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType(...typeName);\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      if (process.env.BABEL_TYPES_8_BREAKING) (0, _validate.validateChild)(node, subkey, v);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf(...values) {\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType(...types) {\n  function validate(node, key, val) {\n    for (const type of types) {\n      if ((0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType(...types) {\n  function validate(node, key, val) {\n    for (const type of types) {\n      if (getType(val) === type || (0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction assertShape(shape) {\n  function validate(node, key, val) {\n    const errors = [];\n\n    for (const property of Object.keys(shape)) {\n      try {\n        (0, _validate.validateField)(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n\n        throw error;\n      }\n    }\n\n    if (errors.length) {\n      throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\\n${errors.join(\"\\n\")}`);\n    }\n  }\n\n  validate.shapeOf = shape;\n  return validate;\n}\n\nfunction assertOptionalChainStart() {\n  function validate(node) {\n    var _current;\n\n    let current = node;\n\n    while (node) {\n      const {\n        type\n      } = current;\n\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(`Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${(_current = current) == null ? void 0 : _current.type}`);\n  }\n\n  return validate;\n}\n\nfunction chain(...fns) {\n  function validate(...args) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n\n  validate.chainOf = fns;\n\n  if (fns.length >= 2 && \"type\" in fns[0] && fns[0].type === \"array\" && !(\"each\" in fns[1])) {\n    throw new Error(`An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`);\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = [\"aliases\", \"builder\", \"deprecatedAlias\", \"fields\", \"inherits\", \"visitor\", \"validate\"];\nconst validFieldKeys = [\"default\", \"optional\", \"validate\"];\n\nfunction defineAliasedType(...aliases) {\n  return (type, opts = {}) => {\n    let defined = opts.aliases;\n\n    if (!defined) {\n      var _store$opts$inherits$, _defined;\n\n      if (opts.inherits) defined = (_store$opts$inherits$ = store[opts.inherits].aliases) == null ? void 0 : _store$opts$inherits$.slice();\n      (_defined = defined) != null ? _defined : defined = [];\n      opts.aliases = defined;\n    }\n\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    return defineType(type, opts);\n  };\n}\n\nfunction defineType(type, opts = {}) {\n  const inherits = opts.inherits && store[opts.inherits] || {};\n  let fields = opts.fields;\n\n  if (!fields) {\n    fields = {};\n\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n\n        if (Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\") {\n          throw new Error(\"field defaults can only be primitives or empty arrays currently\");\n        }\n\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          validate: field.validate\n        };\n      }\n    }\n  }\n\n  const visitor = opts.visitor || inherits.visitor || [];\n  const aliases = opts.aliases || inherits.aliases || [];\n  const builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (validTypeOpts.indexOf(k) === -1) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (validFieldKeys.indexOf(k) === -1) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n\nconst store = {};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patternLikeCommon = exports.functionTypeAnnotationCommon = exports.functionDeclarationCommon = exports.functionCommon = exports.classMethodOrPropertyCommon = exports.classMethodOrDeclareMethodCommon = void 0;\n\nvar _is = require(\"../validators/is\");\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _constants = require(\"../constants\");\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Standardized\");\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)(\"null\", \"Expression\", \"SpreadElement\"))),\n      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertValueType)(\"string\");\n        }\n\n        const identifier = (0, _utils.assertOneOf)(..._constants.ASSIGNMENT_OPERATORS);\n        const pattern = (0, _utils.assertOneOf)(\"=\");\n        return function (node, key, val) {\n          const validator = (0, _is.default)(\"Pattern\", node.left) ? pattern : identifier;\n          validator(node, key, val);\n        };\n      }()\n    },\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"LVal\") : (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.BINARY_OPERATORS)\n    },\n    left: {\n      validate: function () {\n        const expression = (0, _utils.assertNodeType)(\"Expression\");\n        const inOp = (0, _utils.assertNodeType)(\"Expression\", \"PrivateName\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.operator === \"in\" ? inOp : expression;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"PrivateName\"]\n        });\n        return validator;\n      }()\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"]\n});\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"DirectiveLiteral\")\n    }\n  }\n});\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"]\n});\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\ndefineType(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: Object.assign({\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"V8IntrinsicIdentifier\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\", \"ArgumentPlaceholder\")))\n    }\n  }, !process.env.BABEL_TYPES_8_BREAKING ? {\n    optional: {\n      validate: (0, _utils.assertOneOf)(true, false),\n      optional: true\n    }\n  } : {}, {\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\"]\n});\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    alternate: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\", \"Conditional\"]\n});\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"]\n});\ndefineType(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"]\n});\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"]\n});\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"]\n});\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    },\n    comments: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? Object.assign(() => {}, {\n        each: {\n          oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"]\n        }\n      }) : (0, _utils.assertEach)((0, _utils.assertNodeType)(\"CommentBlock\", \"CommentLine\")),\n      optional: true\n    },\n    tokens: {\n      validate: (0, _utils.assertEach)(Object.assign(() => {}, {\n        type: \"any\"\n      })),\n      optional: true\n    }\n  }\n});\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"VariableDeclaration\", \"LVal\") : (0, _utils.assertNodeType)(\"VariableDeclaration\", \"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: (0, _utils.assertNodeType)(\"VariableDeclaration\", \"Expression\"),\n      optional: true\n    },\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    update: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\nconst functionCommon = () => ({\n  params: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\")))\n  },\n  generator: {\n    default: false\n  },\n  async: {\n    default: false\n  }\n});\n\nexports.functionCommon = functionCommon;\n\nconst functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  typeParameters: {\n    validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true\n  }\n});\n\nexports.functionTypeAnnotationCommon = functionTypeAnnotationCommon;\n\nconst functionDeclarationCommon = () => Object.assign({}, functionCommon(), {\n  declare: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  id: {\n    validate: (0, _utils.assertNodeType)(\"Identifier\"),\n    optional: true\n  }\n});\n\nexports.functionDeclarationCommon = functionDeclarationCommon;\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: Object.assign({}, functionDeclarationCommon(), functionTypeAnnotationCommon(), {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  }),\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Statement\", \"Pureish\", \"Declaration\"],\n  validate: function () {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};\n    const identifier = (0, _utils.assertNodeType)(\"Identifier\");\n    return function (parent, key, node) {\n      if (!(0, _is.default)(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  }()\n});\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  })\n});\n\nconst patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  decorators: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n    optional: true\n  }\n});\n\nexports.patternLikeCommon = patternLikeCommon;\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\"],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    name: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (!(0, _isValidIdentifier.default)(val, false)) {\n          throw new TypeError(`\"${val}\" is not a valid identifier name`);\n        }\n      }, {\n        type: \"string\"\n      }))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  }),\n\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    const match = /\\.(\\w+)$/.exec(key);\n    if (!match) return;\n    const [, parentKey] = match;\n    const nonComp = {\n      computed: false\n    };\n\n    if (parentKey === \"property\") {\n      if ((0, _is.default)(\"MemberExpression\", parent, nonComp)) return;\n      if ((0, _is.default)(\"OptionalMemberExpression\", parent, nonComp)) return;\n    } else if (parentKey === \"key\") {\n      if ((0, _is.default)(\"Property\", parent, nonComp)) return;\n      if ((0, _is.default)(\"Method\", parent, nonComp)) return;\n    } else if (parentKey === \"exported\") {\n      if ((0, _is.default)(\"ExportSpecifier\", parent)) return;\n    } else if (parentKey === \"imported\") {\n      if ((0, _is.default)(\"ImportSpecifier\", parent, {\n        imported: node\n      })) return;\n    } else if (parentKey === \"meta\") {\n      if ((0, _is.default)(\"MetaProperty\", parent, {\n        meta: node\n      })) return;\n    }\n\n    if (((0, _helperValidatorIdentifier.isKeyword)(node.name) || (0, _helperValidatorIdentifier.isReservedWord)(node.name, false)) && node.name !== \"this\") {\n      throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n    }\n  }\n\n});\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    },\n    alternate: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"number\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    flags: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n        const invalid = /[^gimsuy]/.exec(val);\n\n        if (invalid) {\n          throw new TypeError(`\"${invalid[0]}\" is not a valid RegExp flag`);\n        }\n      }, {\n        type: \"string\"\n      })),\n      default: \"\"\n    }\n  }\n});\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.LOGICAL_OPERATORS)\n    },\n    left: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"MemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"optional\"] : [])],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: Object.assign({\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n\n        const validator = function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      }()\n    },\n    computed: {\n      default: false\n    }\n  }, !process.env.BABEL_TYPES_8_BREAKING ? {\n    optional: {\n      validate: (0, _utils.assertOneOf)(true, false),\n      optional: true\n    }\n  } : {})\n});\ndefineType(\"NewExpression\", {\n  inherits: \"CallExpression\"\n});\ndefineType(\"Program\", {\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceFile: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    sourceType: {\n      validate: (0, _utils.assertOneOf)(\"script\", \"module\"),\n      default: \"script\"\n    },\n    interpreter: {\n      validate: (0, _utils.assertNodeType)(\"InterpreterDirective\"),\n      default: null,\n      optional: true\n    },\n    directives: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"]\n});\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectMethod\", \"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    kind: Object.assign({\n      validate: (0, _utils.assertOneOf)(\"method\", \"get\", \"set\")\n    }, !process.env.BABEL_TYPES_8_BREAKING ? {\n      default: \"method\"\n    } : {}),\n    computed: {\n      default: false\n    },\n    key: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n\n        const validator = function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\"];\n        return validator;\n      }()\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }),\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"UserWhitespacable\", \"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"ObjectMember\"]\n});\ndefineType(\"ObjectProperty\", {\n  builder: [\"key\", \"value\", \"computed\", \"shorthand\", ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"decorators\"] : [])],\n  fields: {\n    computed: {\n      default: false\n    },\n    key: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"DecimalLiteral\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"DecimalLiteral\", \"PrivateName\"]\n        });\n        return validator;\n      }()\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"PatternLike\")\n    },\n    shorthand: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.computed) {\n          throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\");\n        }\n      }, {\n        type: \"boolean\"\n      }), function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && !(0, _is.default)(\"Identifier\", node.key)) {\n          throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\");\n        }\n      }),\n      default: false\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate: function () {\n    const pattern = (0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"TSAsExpression\", \"TSNonNullExpression\", \"TSTypeAssertion\");\n    const expression = (0, _utils.assertNodeType)(\"Expression\");\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n      const validator = (0, _is.default)(\"ObjectPattern\", parent) ? pattern : expression;\n      validator(node, \"value\", node.value);\n    };\n  }()\n});\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: Object.assign({}, patternLikeCommon(), {\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"LVal\") : (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\", \"MemberExpression\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  }),\n\n  validate(parent, key) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n    if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n    const [, listKey, index] = match;\n\n    if (parent[listKey].length > +index + 1) {\n      throw new TypeError(`RestElement must be last element of ${listKey}`);\n    }\n  }\n\n});\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    consequent: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  }\n});\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    cases: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"SwitchCase\")))\n    }\n  }\n});\ndefineType(\"ThisExpression\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"BlockStatement\"), Object.assign(function (node) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (!node.handler && !node.finalizer) {\n          throw new TypeError(\"TryStatement expects either a handler or finalizer, or both\");\n        }\n      }, {\n        oneOfNodeTypes: [\"BlockStatement\"]\n      }))\n    },\n    handler: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"CatchClause\")\n    },\n    finalizer: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true\n    },\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.UNARY_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"]\n});\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false\n    },\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"Expression\") : (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\")\n    },\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.UPDATE_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"var\", \"let\", \"const\")\n    },\n    declarations: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"VariableDeclarator\")))\n    }\n  },\n\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    if (!(0, _is.default)(\"ForXStatement\", parent, {\n      left: node\n    })) return;\n\n    if (node.declarations.length !== 1) {\n      throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`);\n    }\n  }\n\n});\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertNodeType)(\"LVal\");\n        }\n\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\");\n        const without = (0, _utils.assertNodeType)(\"Identifier\");\n        return function (node, key, val) {\n          const validator = node.init ? normal : without;\n          validator(node, key, val);\n        };\n      }()\n    },\n    definite: {\n      optional: true,\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    init: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\"],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    left: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"ObjectPattern\", \"ArrayPattern\", \"MemberExpression\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  })\n});\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)(\"null\", \"PatternLike\")))\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    expression: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\", \"Expression\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ClassMethod\", \"ClassPrivateMethod\", \"ClassProperty\", \"ClassPrivateProperty\", \"ClassAccessorProperty\", \"TSDeclareMethod\", \"TSIndexSignature\", \"StaticBlock\")))\n    }\n  }\n});\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\"id\", \"body\", \"superClass\", \"mixins\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    superTypeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    },\n    implements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSExpressionWithTypeArguments\", \"ClassImplements\"))),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    mixins: {\n      validate: (0, _utils.assertNodeType)(\"InterfaceExtends\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    superTypeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    },\n    implements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSExpressionWithTypeArguments\", \"ClassImplements\"))),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    mixins: {\n      validate: (0, _utils.assertNodeType)(\"InterfaceExtends\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    abstract: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  },\n  validate: function () {\n    const identifier = (0, _utils.assertNodeType)(\"Identifier\");\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      if (!(0, _is.default)(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  }()\n});\ndefineType(\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\")),\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    }\n  }\n});\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: (0, _utils.assertNodeType)(\"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"value\"))\n  }\n});\ndefineType(\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"Declaration\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.specifiers.length) {\n          throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\");\n        }\n      }, {\n        oneOfNodeTypes: [\"Declaration\"]\n      }), function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.source) {\n          throw new TypeError(\"Cannot export a declaration from a source\");\n        }\n      })\n    },\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    },\n    specifiers: {\n      default: [],\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)(function () {\n        const sourced = (0, _utils.assertNodeType)(\"ExportSpecifier\", \"ExportDefaultSpecifier\", \"ExportNamespaceSpecifier\");\n        const sourceless = (0, _utils.assertNodeType)(\"ExportSpecifier\");\n        if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;\n        return function (node, key, val) {\n          const validator = node.source ? sourced : sourceless;\n          validator(node, key, val);\n        };\n      }()))\n    },\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\"),\n      optional: true\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    exportKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertNodeType)(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = (0, _utils.assertNodeType)(\"VariableDeclaration\");\n        const lval = (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\");\n        return function (node, key, val) {\n          if ((0, _is.default)(\"VariableDeclaration\", val)) {\n            declaration(node, key, val);\n          } else {\n            lval(node, key, val);\n          }\n        };\n      }()\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    },\n    await: {\n      default: false\n    }\n  }\n});\ndefineType(\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    },\n    specifiers: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\n    },\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    },\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"typeof\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    imported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"typeof\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"Identifier\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n        let property;\n\n        switch (val.name) {\n          case \"function\":\n            property = \"sent\";\n            break;\n\n          case \"new\":\n            property = \"target\";\n            break;\n\n          case \"import\":\n            property = \"meta\";\n            break;\n        }\n\n        if (!(0, _is.default)(\"Identifier\", node.property, {\n          name: property\n        })) {\n          throw new TypeError(\"Unrecognised MetaProperty\");\n        }\n      }, {\n        oneOfNodeTypes: [\"Identifier\"]\n      }))\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\nconst classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  accessibility: {\n    validate: (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\"),\n    optional: true\n  },\n  static: {\n    default: false\n  },\n  override: {\n    default: false\n  },\n  computed: {\n    default: false\n  },\n  optional: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  key: {\n    validate: (0, _utils.chain)(function () {\n      const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\");\n      const computed = (0, _utils.assertNodeType)(\"Expression\");\n      return function (node, key, val) {\n        const validator = node.computed ? computed : normal;\n        validator(node, key, val);\n      };\n    }(), (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"Expression\"))\n  }\n});\n\nexports.classMethodOrPropertyCommon = classMethodOrPropertyCommon;\n\nconst classMethodOrDeclareMethodCommon = () => Object.assign({}, functionCommon(), classMethodOrPropertyCommon(), {\n  params: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\", \"TSParameterProperty\")))\n  },\n  kind: {\n    validate: (0, _utils.assertOneOf)(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\"\n  },\n  access: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\")),\n    optional: true\n  },\n  decorators: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n    optional: true\n  }\n});\n\nexports.classMethodOrDeclareMethodCommon = classMethodOrDeclareMethodCommon;\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\", \"generator\", \"async\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  fields: Object.assign({}, classMethodOrDeclareMethodCommon(), functionTypeAnnotationCommon(), {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\ndefineType(\"ObjectPattern\", {\n  visitor: [\"properties\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"RestElement\", \"ObjectProperty\")))\n    }\n  })\n});\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"Super\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\", \"typeParameters\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    quasi: {\n      validate: (0, _utils.assertNodeType)(\"TemplateLiteral\")\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertShape)({\n        raw: {\n          validate: (0, _utils.assertValueType)(\"string\")\n        },\n        cooked: {\n          validate: (0, _utils.assertValueType)(\"string\"),\n          optional: true\n        }\n      })\n    },\n    tail: {\n      default: false\n    }\n  }\n});\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TemplateElement\")))\n    },\n    expressions: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"TSType\")), function (node, key, val) {\n        if (node.quasis.length !== val.length + 1) {\n          throw new TypeError(`Number of ${node.type} quasis should be exactly one more than the number of expressions.\\nExpected ${val.length + 1} quasis but got ${node.quasis.length}`);\n        }\n      })\n    }\n  }\n});\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && !node.argument) {\n          throw new TypeError(\"Property delegate of YieldExpression cannot be true if there is no argument\");\n        }\n      }, {\n        type: \"boolean\"\n      })),\n      default: false\n    },\n    argument: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"Import\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"Identifier\"]\n        });\n        return validator;\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)(\"boolean\") : (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), (0, _utils.assertOptionalChainStart)())\n    }\n  }\n});\ndefineType(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\", \"ArgumentPlaceholder\")))\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)(\"boolean\") : (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), (0, _utils.assertOptionalChainStart)())\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, classMethodOrPropertyCommon(), {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: Object.assign({}, classMethodOrPropertyCommon(), {\n    key: {\n      validate: (0, _utils.chain)(function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }(), (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"Expression\", \"PrivateName\"))\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\", \"typeAnnotation\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    static: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, classMethodOrDeclareMethodCommon(), functionTypeAnnotationCommon(), {\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"get\", \"set\", \"method\"),\n      default: \"method\"\n    },\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"]\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Flow\");\n\nconst defineInterfaceishType = name => {\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\"id\", \"typeParameters\", \"extends\", \"mixins\", \"implements\", \"body\"],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: (0, _utils.validateType)(\"Identifier\"),\n      typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n      extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      mixins: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      implements: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ClassImplements\")),\n      body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n    }\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"DeclareClass\");\ndefineType(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    predicate: (0, _utils.validateOptionalType)(\"DeclaredPredicate\")\n  }\n});\ndefineInterfaceishType(\"DeclareInterface\");\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)(\"BlockStatement\"),\n    kind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"CommonJS\", \"ES\"))\n  }\n});\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateOptionalType)(\"FlowType\")\n  }\n});\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: (0, _utils.validateOptionalType)(\"Flow\"),\n    specifiers: (0, _utils.validateOptional)((0, _utils.arrayOfType)([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"])),\n    source: (0, _utils.validateOptionalType)(\"StringLiteral\"),\n    default: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: (0, _utils.validateType)(\"StringLiteral\"),\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: (0, _utils.validateType)(\"Flow\")\n  }\n});\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"]\n});\ndefineType(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FunctionTypeParam\")),\n    rest: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    this: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    returnType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: (0, _utils.validateOptionalType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"]\n});\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"InterfaceDeclaration\");\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n    body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n  }\n});\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"number\"))\n  }\n});\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\", \"exact\"],\n  fields: {\n    properties: (0, _utils.validate)((0, _utils.arrayOfType)([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"])),\n    indexers: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeIndexer\"),\n      optional: true,\n      default: []\n    },\n    callProperties: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeCallProperty\"),\n      optional: true,\n      default: []\n    },\n    internalSlots: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeInternalSlot\"),\n      optional: true,\n      default: []\n    },\n    exact: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    inexact: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateOptionalType)(\"Identifier\"),\n    key: (0, _utils.validateType)(\"FlowType\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"init\", \"get\", \"set\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    proto: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\"),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    qualification: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"])\n  }\n});\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"string\"))\n  }\n});\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    bound: (0, _utils.validateOptionalType)(\"TypeAnnotation\"),\n    default: (0, _utils.validateOptionalType)(\"FlowType\"),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"TypeParameter\"))\n  }\n});\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"minus\", \"plus\"))\n  }\n});\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    body: (0, _utils.validateType)([\"EnumBooleanBody\", \"EnumNumberBody\", \"EnumStringBody\", \"EnumSymbolBody\"])\n  }\n});\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumBooleanMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumNumberMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)([\"EnumStringMember\", \"EnumDefaultedMember\"]),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"EnumDefaultedMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"BooleanLiteral\")\n  }\n});\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"NumericLiteral\")\n  }\n});\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"JSX\");\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    }\n  }\n});\ndefineType(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: Object.assign({\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }, {\n    selfClosing: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"JSXEmptyExpression\", {});\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    },\n    selfClosing: {\n      default: false\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"]\n});\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"]\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PLACEHOLDERS_FLIPPED_ALIAS = exports.PLACEHOLDERS_ALIAS = exports.PLACEHOLDERS = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst PLACEHOLDERS = [\"Identifier\", \"StringLiteral\", \"Expression\", \"Statement\", \"Declaration\", \"BlockStatement\", \"ClassBody\", \"Pattern\"];\nexports.PLACEHOLDERS = PLACEHOLDERS;\nconst PLACEHOLDERS_ALIAS = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"]\n};\nexports.PLACEHOLDERS_ALIAS = PLACEHOLDERS_ALIAS;\n\nfor (const type of PLACEHOLDERS) {\n  const alias = _utils.ALIAS_KEYS[type];\n  if (alias != null && alias.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nconst PLACEHOLDERS_FLIPPED_ALIAS = {};\nexports.PLACEHOLDERS_FLIPPED_ALIAS = PLACEHOLDERS_FLIPPED_ALIAS;\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nvar _placeholders = require(\"./placeholders\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Miscellaneous\");\n{\n  defineType(\"Noop\", {\n    visitor: []\n  });\n}\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    expectedNode: {\n      validate: (0, _utils.assertOneOf)(..._placeholders.PLACEHOLDERS)\n    }\n  }\n});\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    async: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"TopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nvar _core = require(\"./core\");\n\nvar _is = require(\"../validators/is\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"TypeScript\");\nconst bool = (0, _utils.assertValueType)(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: (0, _utils.assertNodeType)(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  typeParameters: {\n    validate: (0, _utils.assertNodeType)(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true\n  }\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"],\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\"),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    parameter: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"AssignmentPattern\")\n    },\n    override: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: Object.assign({}, (0, _core.functionDeclarationCommon)(), tSFunctionTypeAnnotationCommon())\n});\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: Object.assign({}, (0, _core.classMethodOrDeclareMethodCommon)(), tSFunctionTypeAnnotationCommon())\n});\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: (0, _utils.validateType)(\"TSEntityName\"),\n    right: (0, _utils.validateType)(\"Identifier\")\n  }\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n  [\"parameters\"]: (0, _utils.validateArrayOfType)([\"Identifier\", \"RestElement\"]),\n  [\"typeAnnotation\"]: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\")\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"typeParameters\", \"parameters\", \"typeAnnotation\"],\n  fields: signatureDeclarationCommon()\n};\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\"TSConstructSignatureDeclaration\", callConstructSignatureDeclaration);\n\nconst namedTypeElementCommon = () => ({\n  key: (0, _utils.validateType)(\"Expression\"),\n  computed: {\n    default: false\n  },\n  optional: (0, _utils.validateOptional)(bool)\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\", \"initializer\"],\n  fields: Object.assign({}, namedTypeElementCommon(), {\n    readonly: (0, _utils.validateOptional)(bool),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\"),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\"),\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"get\", \"set\")\n    }\n  })\n});\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeParameters\", \"parameters\", \"typeAnnotation\"],\n  fields: Object.assign({}, signatureDeclarationCommon(), namedTypeElementCommon(), {\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"method\", \"get\", \"set\")\n    }\n  })\n});\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: (0, _utils.validateOptional)(bool),\n    static: (0, _utils.validateOptional)(bool),\n    parameters: (0, _utils.validateArrayOfType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\")\n  }\n});\nconst tsKeywordTypes = [\"TSAnyKeyword\", \"TSBooleanKeyword\", \"TSBigIntKeyword\", \"TSIntrinsicKeyword\", \"TSNeverKeyword\", \"TSNullKeyword\", \"TSNumberKeyword\", \"TSObjectKeyword\", \"TSStringKeyword\", \"TSSymbolKeyword\", \"TSUndefinedKeyword\", \"TSUnknownKeyword\", \"TSVoidKeyword\"];\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {}\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {}\n});\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameters\", \"parameters\", \"typeAnnotation\"]\n};\ndefineType(\"TSFunctionType\", Object.assign({}, fnOrCtrBase, {\n  fields: signatureDeclarationCommon()\n}));\ndefineType(\"TSConstructorType\", Object.assign({}, fnOrCtrBase, {\n  fields: Object.assign({}, signatureDeclarationCommon(), {\n    abstract: (0, _utils.validateOptional)(bool)\n  })\n}));\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeName\", \"typeParameters\"],\n  fields: {\n    typeName: (0, _utils.validateType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: (0, _utils.validateType)([\"Identifier\", \"TSThisType\"]),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\"),\n    asserts: (0, _utils.validateOptional)(bool)\n  }\n});\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\"exprName\", \"typeParameters\"],\n  fields: {\n    exprName: (0, _utils.validateType)([\"TSEntityName\", \"TSImportType\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"TSTypeElement\")\n  }\n});\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: (0, _utils.validateArrayOfType)([\"TSType\", \"TSNamedTupleMember\"])\n  }\n});\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: (0, _utils.validateType)(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false\n    },\n    elementType: (0, _utils.validateType)(\"TSType\")\n  }\n});\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: (0, _utils.validateArrayOfType)(\"TSType\")\n  }\n};\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: (0, _utils.validateType)(\"TSType\"),\n    extendsType: (0, _utils.validateType)(\"TSType\"),\n    trueType: (0, _utils.validateType)(\"TSType\"),\n    falseType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: (0, _utils.validateType)(\"TSTypeParameter\")\n  }\n});\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"TSType\"),\n    indexType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    readonly: (0, _utils.validateOptional)((0, _utils.assertOneOf)(true, false, \"+\", \"-\")),\n    typeParameter: (0, _utils.validateType)(\"TSTypeParameter\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertOneOf)(true, false, \"+\", \"-\")),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSType\"),\n    nameType: (0, _utils.validateOptionalType)(\"TSType\")\n  }\n});\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: function () {\n        const unaryExpression = (0, _utils.assertNodeType)(\"NumericLiteral\", \"BigIntLiteral\");\n        const unaryOperator = (0, _utils.assertOneOf)(\"-\");\n        const literal = (0, _utils.assertNodeType)(\"NumericLiteral\", \"StringLiteral\", \"BooleanLiteral\", \"BigIntLiteral\");\n\n        function validator(parent, key, node) {\n          if ((0, _is.default)(\"UnaryExpression\", node)) {\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\"NumericLiteral\", \"StringLiteral\", \"BooleanLiteral\", \"BigIntLiteral\", \"UnaryExpression\"];\n        return validator;\n      }()\n    }\n  }\n});\ndefineType(\"TSExpressionWithTypeArguments\", {\n  aliases: [\"TSType\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSInterfaceDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"TSExpressionWithTypeArguments\")),\n    body: (0, _utils.validateType)(\"TSInterfaceBody\")\n  }\n});\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: (0, _utils.validateArrayOfType)(\"TSTypeElement\")\n  }\n});\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSAsExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\"),\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSEnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"members\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    const: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    members: (0, _utils.validateArrayOfType)(\"TSEnumMember\"),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\")\n  }\n});\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\")\n  }\n});\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    global: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)([\"TSModuleBlock\", \"TSModuleDeclaration\"])\n  }\n});\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: (0, _utils.validateArrayOfType)(\"Statement\")\n  }\n});\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"argument\", \"qualifier\", \"typeParameters\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"StringLiteral\"),\n    qualifier: (0, _utils.validateOptionalType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    isExport: (0, _utils.validate)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    moduleReference: (0, _utils.validateType)([\"TSEntityName\", \"TSExternalModuleReference\"]),\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TSType\")\n    }\n  }\n});\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSType\")))\n    }\n  }\n});\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSTypeParameter\")))\n    }\n  }\n});\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    in: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    out: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    constraint: {\n      validate: (0, _utils.assertNodeType)(\"TSType\"),\n      optional: true\n    },\n    default: {\n      validate: (0, _utils.assertNodeType)(\"TSType\"),\n      optional: true\n    }\n  }\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ALIAS_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.ALIAS_KEYS;\n  }\n});\nObject.defineProperty(exports, \"BUILDER_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.BUILDER_KEYS;\n  }\n});\nObject.defineProperty(exports, \"DEPRECATED_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.DEPRECATED_KEYS;\n  }\n});\nObject.defineProperty(exports, \"FLIPPED_ALIAS_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.FLIPPED_ALIAS_KEYS;\n  }\n});\nObject.defineProperty(exports, \"NODE_FIELDS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.NODE_FIELDS;\n  }\n});\nObject.defineProperty(exports, \"NODE_PARENT_VALIDATIONS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.NODE_PARENT_VALIDATIONS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS_ALIAS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS_ALIAS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS_FLIPPED_ALIAS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS_FLIPPED_ALIAS;\n  }\n});\nexports.TYPES = void 0;\nObject.defineProperty(exports, \"VISITOR_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.VISITOR_KEYS;\n  }\n});\n\nvar _toFastProperties = require(\"to-fast-properties\");\n\nrequire(\"./core\");\n\nrequire(\"./flow\");\n\nrequire(\"./jsx\");\n\nrequire(\"./misc\");\n\nrequire(\"./experimental\");\n\nrequire(\"./typescript\");\n\nvar _utils = require(\"./utils\");\n\nvar _placeholders = require(\"./placeholders\");\n\n_toFastProperties(_utils.VISITOR_KEYS);\n\n_toFastProperties(_utils.ALIAS_KEYS);\n\n_toFastProperties(_utils.FLIPPED_ALIAS_KEYS);\n\n_toFastProperties(_utils.NODE_FIELDS);\n\n_toFastProperties(_utils.BUILDER_KEYS);\n\n_toFastProperties(_utils.DEPRECATED_KEYS);\n\n_toFastProperties(_placeholders.PLACEHOLDERS_ALIAS);\n\n_toFastProperties(_placeholders.PLACEHOLDERS_FLIPPED_ALIAS);\n\nconst TYPES = [].concat(Object.keys(_utils.VISITOR_KEYS), Object.keys(_utils.FLIPPED_ALIAS_KEYS), Object.keys(_utils.DEPRECATED_KEYS));\nexports.TYPES = TYPES;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validate;\nexports.validateChild = validateChild;\nexports.validateField = validateField;\n\nvar _definitions = require(\"../definitions\");\n\nfunction validate(node, key, val) {\n  if (!node) return;\n  const fields = _definitions.NODE_FIELDS[node.type];\n  if (!fields) return;\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nfunction validateField(node, key, val, field) {\n  if (!(field != null && field.validate)) return;\n  if (field.optional && val == null) return;\n  field.validate(node, key, val);\n}\n\nfunction validateChild(node, key, val) {\n  if (val == null) return;\n  const validate = _definitions.NODE_PARENT_VALIDATIONS[val.type];\n  if (!validate) return;\n  validate(node, key, val);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateNode;\n\nvar _validate = require(\"../validators/validate\");\n\nvar _ = require(\"..\");\n\nfunction validateNode(node) {\n  const keys = _.BUILDER_KEYS[node.type];\n\n  for (const key of keys) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports.import = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports.super = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInstantiationExpression = exports.tsInstantiationExpression = tsInstantiationExpression;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _validateNode = require(\"../validateNode\");\n\nfunction arrayExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"ArrayExpression\",\n    elements\n  });\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction binaryExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction interpreterDirective(value) {\n  return (0, _validateNode.default)({\n    type: \"InterpreterDirective\",\n    value\n  });\n}\n\nfunction directive(value) {\n  return (0, _validateNode.default)({\n    type: \"Directive\",\n    value\n  });\n}\n\nfunction directiveLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DirectiveLiteral\",\n    value\n  });\n}\n\nfunction blockStatement(body, directives = []) {\n  return (0, _validateNode.default)({\n    type: \"BlockStatement\",\n    body,\n    directives\n  });\n}\n\nfunction breakStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"BreakStatement\",\n    label\n  });\n}\n\nfunction callExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction catchClause(param = null, body) {\n  return (0, _validateNode.default)({\n    type: \"CatchClause\",\n    param,\n    body\n  });\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return (0, _validateNode.default)({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction continueStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"ContinueStatement\",\n    label\n  });\n}\n\nfunction debuggerStatement() {\n  return {\n    type: \"DebuggerStatement\"\n  };\n}\n\nfunction doWhileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"DoWhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction emptyStatement() {\n  return {\n    type: \"EmptyStatement\"\n  };\n}\n\nfunction expressionStatement(expression) {\n  return (0, _validateNode.default)({\n    type: \"ExpressionStatement\",\n    expression\n  });\n}\n\nfunction file(program, comments = null, tokens = null) {\n  return (0, _validateNode.default)({\n    type: \"File\",\n    program,\n    comments,\n    tokens\n  });\n}\n\nfunction forInStatement(left, right, body) {\n  return (0, _validateNode.default)({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body\n  });\n}\n\nfunction forStatement(init = null, test = null, update = null, body) {\n  return (0, _validateNode.default)({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body\n  });\n}\n\nfunction functionDeclaration(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction functionExpression(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction identifier(name) {\n  return (0, _validateNode.default)({\n    type: \"Identifier\",\n    name\n  });\n}\n\nfunction ifStatement(test, consequent, alternate = null) {\n  return (0, _validateNode.default)({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction labeledStatement(label, body) {\n  return (0, _validateNode.default)({\n    type: \"LabeledStatement\",\n    label,\n    body\n  });\n}\n\nfunction stringLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteral\",\n    value\n  });\n}\n\nfunction numericLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"NumericLiteral\",\n    value\n  });\n}\n\nfunction nullLiteral() {\n  return {\n    type: \"NullLiteral\"\n  };\n}\n\nfunction booleanLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteral\",\n    value\n  });\n}\n\nfunction regExpLiteral(pattern, flags = \"\") {\n  return (0, _validateNode.default)({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags\n  });\n}\n\nfunction logicalExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction memberExpression(object, property, computed = false, optional = null) {\n  return (0, _validateNode.default)({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction newExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction program(body, directives = [], sourceType = \"script\", interpreter = null) {\n  return (0, _validateNode.default)({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n    sourceFile: null\n  });\n}\n\nfunction objectExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectExpression\",\n    properties\n  });\n}\n\nfunction objectMethod(kind = \"method\", key, params, body, computed = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async\n  });\n}\n\nfunction objectProperty(key, value, computed = false, shorthand = false, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators\n  });\n}\n\nfunction restElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"RestElement\",\n    argument\n  });\n}\n\nfunction returnStatement(argument = null) {\n  return (0, _validateNode.default)({\n    type: \"ReturnStatement\",\n    argument\n  });\n}\n\nfunction sequenceExpression(expressions) {\n  return (0, _validateNode.default)({\n    type: \"SequenceExpression\",\n    expressions\n  });\n}\n\nfunction parenthesizedExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"ParenthesizedExpression\",\n    expression\n  });\n}\n\nfunction switchCase(test = null, consequent) {\n  return (0, _validateNode.default)({\n    type: \"SwitchCase\",\n    test,\n    consequent\n  });\n}\n\nfunction switchStatement(discriminant, cases) {\n  return (0, _validateNode.default)({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases\n  });\n}\n\nfunction thisExpression() {\n  return {\n    type: \"ThisExpression\"\n  };\n}\n\nfunction throwStatement(argument) {\n  return (0, _validateNode.default)({\n    type: \"ThrowStatement\",\n    argument\n  });\n}\n\nfunction tryStatement(block, handler = null, finalizer = null) {\n  return (0, _validateNode.default)({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer\n  });\n}\n\nfunction unaryExpression(operator, argument, prefix = true) {\n  return (0, _validateNode.default)({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction updateExpression(operator, argument, prefix = false) {\n  return (0, _validateNode.default)({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations\n  });\n}\n\nfunction variableDeclarator(id, init = null) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclarator\",\n    id,\n    init\n  });\n}\n\nfunction whileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"WhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction withStatement(object, body) {\n  return (0, _validateNode.default)({\n    type: \"WithStatement\",\n    object,\n    body\n  });\n}\n\nfunction assignmentPattern(left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentPattern\",\n    left,\n    right\n  });\n}\n\nfunction arrayPattern(elements) {\n  return (0, _validateNode.default)({\n    type: \"ArrayPattern\",\n    elements\n  });\n}\n\nfunction arrowFunctionExpression(params, body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null\n  });\n}\n\nfunction classBody(body) {\n  return (0, _validateNode.default)({\n    type: \"ClassBody\",\n    body\n  });\n}\n\nfunction classExpression(id = null, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction classDeclaration(id, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction exportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"ExportAllDeclaration\",\n    source\n  });\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultDeclaration\",\n    declaration\n  });\n}\n\nfunction exportNamedDeclaration(declaration = null, specifiers = [], source = null) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction exportSpecifier(local, exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportSpecifier\",\n    local,\n    exported\n  });\n}\n\nfunction forOfStatement(left, right, body, _await = false) {\n  return (0, _validateNode.default)({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await\n  });\n}\n\nfunction importDeclaration(specifiers, source) {\n  return (0, _validateNode.default)({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source\n  });\n}\n\nfunction importDefaultSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportDefaultSpecifier\",\n    local\n  });\n}\n\nfunction importNamespaceSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportNamespaceSpecifier\",\n    local\n  });\n}\n\nfunction importSpecifier(local, imported) {\n  return (0, _validateNode.default)({\n    type: \"ImportSpecifier\",\n    local,\n    imported\n  });\n}\n\nfunction metaProperty(meta, property) {\n  return (0, _validateNode.default)({\n    type: \"MetaProperty\",\n    meta,\n    property\n  });\n}\n\nfunction classMethod(kind = \"method\", key, params, body, computed = false, _static = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async\n  });\n}\n\nfunction objectPattern(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectPattern\",\n    properties\n  });\n}\n\nfunction spreadElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"SpreadElement\",\n    argument\n  });\n}\n\nfunction _super() {\n  return {\n    type: \"Super\"\n  };\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return (0, _validateNode.default)({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi\n  });\n}\n\nfunction templateElement(value, tail = false) {\n  return (0, _validateNode.default)({\n    type: \"TemplateElement\",\n    value,\n    tail\n  });\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return (0, _validateNode.default)({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions\n  });\n}\n\nfunction yieldExpression(argument = null, delegate = false) {\n  return (0, _validateNode.default)({\n    type: \"YieldExpression\",\n    argument,\n    delegate\n  });\n}\n\nfunction awaitExpression(argument) {\n  return (0, _validateNode.default)({\n    type: \"AwaitExpression\",\n    argument\n  });\n}\n\nfunction _import() {\n  return {\n    type: \"Import\"\n  };\n}\n\nfunction bigIntLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BigIntLiteral\",\n    value\n  });\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamespaceSpecifier\",\n    exported\n  });\n}\n\nfunction optionalMemberExpression(object, property, computed = false, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional\n  });\n}\n\nfunction classProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classAccessorProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classPrivateProperty(key, value = null, decorators = null, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static\n  });\n}\n\nfunction classPrivateMethod(kind = \"method\", key, params, body, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static\n  });\n}\n\nfunction privateName(id) {\n  return (0, _validateNode.default)({\n    type: \"PrivateName\",\n    id\n  });\n}\n\nfunction staticBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"StaticBlock\",\n    body\n  });\n}\n\nfunction anyTypeAnnotation() {\n  return {\n    type: \"AnyTypeAnnotation\"\n  };\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return (0, _validateNode.default)({\n    type: \"ArrayTypeAnnotation\",\n    elementType\n  });\n}\n\nfunction booleanTypeAnnotation() {\n  return {\n    type: \"BooleanTypeAnnotation\"\n  };\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return {\n    type: \"NullLiteralTypeAnnotation\"\n  };\n}\n\nfunction classImplements(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassImplements\",\n    id,\n    typeParameters\n  });\n}\n\nfunction declareClass(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareFunction(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareFunction\",\n    id\n  });\n}\n\nfunction declareInterface(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareModule(id, body, kind = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind\n  });\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModuleExports\",\n    typeAnnotation\n  });\n}\n\nfunction declareTypeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction declareOpaqueType(id, typeParameters = null, supertype = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype\n  });\n}\n\nfunction declareVariable(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareVariable\",\n    id\n  });\n}\n\nfunction declareExportDeclaration(declaration = null, specifiers = null, source = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction declareExportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportAllDeclaration\",\n    source\n  });\n}\n\nfunction declaredPredicate(value) {\n  return (0, _validateNode.default)({\n    type: \"DeclaredPredicate\",\n    value\n  });\n}\n\nfunction existsTypeAnnotation() {\n  return {\n    type: \"ExistsTypeAnnotation\"\n  };\n}\n\nfunction functionTypeAnnotation(typeParameters = null, params, rest = null, returnType) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType\n  });\n}\n\nfunction functionTypeParam(name = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation\n  });\n}\n\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters\n  });\n}\n\nfunction inferredPredicate() {\n  return {\n    type: \"InferredPredicate\"\n  };\n}\n\nfunction interfaceExtends(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters\n  });\n}\n\nfunction interfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction interfaceTypeAnnotation(_extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body\n  });\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"IntersectionTypeAnnotation\",\n    types\n  });\n}\n\nfunction mixedTypeAnnotation() {\n  return {\n    type: \"MixedTypeAnnotation\"\n  };\n}\n\nfunction emptyTypeAnnotation() {\n  return {\n    type: \"EmptyTypeAnnotation\"\n  };\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"NumberLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction numberTypeAnnotation() {\n  return {\n    type: \"NumberTypeAnnotation\"\n  };\n}\n\nfunction objectTypeAnnotation(properties, indexers = [], callProperties = [], internalSlots = [], exact = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact\n  });\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method\n  });\n}\n\nfunction objectTypeCallProperty(value) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null\n  });\n}\n\nfunction objectTypeIndexer(id = null, key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null\n  });\n}\n\nfunction objectTypeProperty(key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null\n  });\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeSpreadProperty\",\n    argument\n  });\n}\n\nfunction opaqueType(id, typeParameters = null, supertype = null, impltype) {\n  return (0, _validateNode.default)({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype\n  });\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return (0, _validateNode.default)({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification\n  });\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction stringTypeAnnotation() {\n  return {\n    type: \"StringTypeAnnotation\"\n  };\n}\n\nfunction symbolTypeAnnotation() {\n  return {\n    type: \"SymbolTypeAnnotation\"\n  };\n}\n\nfunction thisTypeAnnotation() {\n  return {\n    type: \"ThisTypeAnnotation\"\n  };\n}\n\nfunction tupleTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"TupleTypeAnnotation\",\n    types\n  });\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return (0, _validateNode.default)({\n    type: \"TypeofTypeAnnotation\",\n    argument\n  });\n}\n\nfunction typeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction typeParameter(bound = null, _default = null, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null\n  });\n}\n\nfunction typeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction typeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction unionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"UnionTypeAnnotation\",\n    types\n  });\n}\n\nfunction variance(kind) {\n  return (0, _validateNode.default)({\n    type: \"Variance\",\n    kind\n  });\n}\n\nfunction voidTypeAnnotation() {\n  return {\n    type: \"VoidTypeAnnotation\"\n  };\n}\n\nfunction enumDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"EnumDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction enumBooleanBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumNumberBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumStringBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumSymbolBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumBooleanMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null\n  });\n}\n\nfunction enumNumberMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberMember\",\n    id,\n    init\n  });\n}\n\nfunction enumStringMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringMember\",\n    id,\n    init\n  });\n}\n\nfunction enumDefaultedMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumDefaultedMember\",\n    id\n  });\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null\n  });\n}\n\nfunction jsxAttribute(name, value = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXAttribute\",\n    name,\n    value\n  });\n}\n\nfunction jsxClosingElement(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXClosingElement\",\n    name\n  });\n}\n\nfunction jsxElement(openingElement, closingElement = null, children, selfClosing = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing\n  });\n}\n\nfunction jsxEmptyExpression() {\n  return {\n    type: \"JSXEmptyExpression\"\n  };\n}\n\nfunction jsxExpressionContainer(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXExpressionContainer\",\n    expression\n  });\n}\n\nfunction jsxSpreadChild(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadChild\",\n    expression\n  });\n}\n\nfunction jsxIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXIdentifier\",\n    name\n  });\n}\n\nfunction jsxMemberExpression(object, property) {\n  return (0, _validateNode.default)({\n    type: \"JSXMemberExpression\",\n    object,\n    property\n  });\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return (0, _validateNode.default)({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name\n  });\n}\n\nfunction jsxOpeningElement(name, attributes, selfClosing = false) {\n  return (0, _validateNode.default)({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing\n  });\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadAttribute\",\n    argument\n  });\n}\n\nfunction jsxText(value) {\n  return (0, _validateNode.default)({\n    type: \"JSXText\",\n    value\n  });\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return (0, _validateNode.default)({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children\n  });\n}\n\nfunction jsxOpeningFragment() {\n  return {\n    type: \"JSXOpeningFragment\"\n  };\n}\n\nfunction jsxClosingFragment() {\n  return {\n    type: \"JSXClosingFragment\"\n  };\n}\n\nfunction noop() {\n  return {\n    type: \"Noop\"\n  };\n}\n\nfunction placeholder(expectedNode, name) {\n  return (0, _validateNode.default)({\n    type: \"Placeholder\",\n    expectedNode,\n    name\n  });\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"V8IntrinsicIdentifier\",\n    name\n  });\n}\n\nfunction argumentPlaceholder() {\n  return {\n    type: \"ArgumentPlaceholder\"\n  };\n}\n\nfunction bindExpression(object, callee) {\n  return (0, _validateNode.default)({\n    type: \"BindExpression\",\n    object,\n    callee\n  });\n}\n\nfunction importAttribute(key, value) {\n  return (0, _validateNode.default)({\n    type: \"ImportAttribute\",\n    key,\n    value\n  });\n}\n\nfunction decorator(expression) {\n  return (0, _validateNode.default)({\n    type: \"Decorator\",\n    expression\n  });\n}\n\nfunction doExpression(body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"DoExpression\",\n    body,\n    async\n  });\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultSpecifier\",\n    exported\n  });\n}\n\nfunction recordExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"RecordExpression\",\n    properties\n  });\n}\n\nfunction tupleExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"TupleExpression\",\n    elements\n  });\n}\n\nfunction decimalLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DecimalLiteral\",\n    value\n  });\n}\n\nfunction moduleExpression(body) {\n  return (0, _validateNode.default)({\n    type: \"ModuleExpression\",\n    body\n  });\n}\n\nfunction topicReference() {\n  return {\n    type: \"TopicReference\"\n  };\n}\n\nfunction pipelineTopicExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"PipelineTopicExpression\",\n    expression\n  });\n}\n\nfunction pipelineBareFunction(callee) {\n  return (0, _validateNode.default)({\n    type: \"PipelineBareFunction\",\n    callee\n  });\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return {\n    type: \"PipelinePrimaryTopicReference\"\n  };\n}\n\nfunction tsParameterProperty(parameter) {\n  return (0, _validateNode.default)({\n    type: \"TSParameterProperty\",\n    parameter\n  });\n}\n\nfunction tsDeclareFunction(id = null, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsDeclareMethod(decorators = null, key, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsQualifiedName(left, right) {\n  return (0, _validateNode.default)({\n    type: \"TSQualifiedName\",\n    left,\n    right\n  });\n}\n\nfunction tsCallSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsPropertySignature(key, typeAnnotation = null, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    initializer,\n    kind: null\n  });\n}\n\nfunction tsMethodSignature(key, typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null\n  });\n}\n\nfunction tsIndexSignature(parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsAnyKeyword() {\n  return {\n    type: \"TSAnyKeyword\"\n  };\n}\n\nfunction tsBooleanKeyword() {\n  return {\n    type: \"TSBooleanKeyword\"\n  };\n}\n\nfunction tsBigIntKeyword() {\n  return {\n    type: \"TSBigIntKeyword\"\n  };\n}\n\nfunction tsIntrinsicKeyword() {\n  return {\n    type: \"TSIntrinsicKeyword\"\n  };\n}\n\nfunction tsNeverKeyword() {\n  return {\n    type: \"TSNeverKeyword\"\n  };\n}\n\nfunction tsNullKeyword() {\n  return {\n    type: \"TSNullKeyword\"\n  };\n}\n\nfunction tsNumberKeyword() {\n  return {\n    type: \"TSNumberKeyword\"\n  };\n}\n\nfunction tsObjectKeyword() {\n  return {\n    type: \"TSObjectKeyword\"\n  };\n}\n\nfunction tsStringKeyword() {\n  return {\n    type: \"TSStringKeyword\"\n  };\n}\n\nfunction tsSymbolKeyword() {\n  return {\n    type: \"TSSymbolKeyword\"\n  };\n}\n\nfunction tsUndefinedKeyword() {\n  return {\n    type: \"TSUndefinedKeyword\"\n  };\n}\n\nfunction tsUnknownKeyword() {\n  return {\n    type: \"TSUnknownKeyword\"\n  };\n}\n\nfunction tsVoidKeyword() {\n  return {\n    type: \"TSVoidKeyword\"\n  };\n}\n\nfunction tsThisType() {\n  return {\n    type: \"TSThisType\"\n  };\n}\n\nfunction tsFunctionType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructorType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeReference(typeName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters\n  });\n}\n\nfunction tsTypePredicate(parameterName, typeAnnotation = null, asserts = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts\n  });\n}\n\nfunction tsTypeQuery(exprName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters\n  });\n}\n\nfunction tsTypeLiteral(members) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeLiteral\",\n    members\n  });\n}\n\nfunction tsArrayType(elementType) {\n  return (0, _validateNode.default)({\n    type: \"TSArrayType\",\n    elementType\n  });\n}\n\nfunction tsTupleType(elementTypes) {\n  return (0, _validateNode.default)({\n    type: \"TSTupleType\",\n    elementTypes\n  });\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSOptionalType\",\n    typeAnnotation\n  });\n}\n\nfunction tsRestType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSRestType\",\n    typeAnnotation\n  });\n}\n\nfunction tsNamedTupleMember(label, elementType, optional = false) {\n  return (0, _validateNode.default)({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional\n  });\n}\n\nfunction tsUnionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSUnionType\",\n    types\n  });\n}\n\nfunction tsIntersectionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSIntersectionType\",\n    types\n  });\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return (0, _validateNode.default)({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType\n  });\n}\n\nfunction tsInferType(typeParameter) {\n  return (0, _validateNode.default)({\n    type: \"TSInferType\",\n    typeParameter\n  });\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSParenthesizedType\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null\n  });\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction tsMappedType(typeParameter, typeAnnotation = null, nameType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType\n  });\n}\n\nfunction tsLiteralType(literal) {\n  return (0, _validateNode.default)({\n    type: \"TSLiteralType\",\n    literal\n  });\n}\n\nfunction tsExpressionWithTypeArguments(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsInterfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction tsInterfaceBody(body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceBody\",\n    body\n  });\n}\n\nfunction tsTypeAliasDeclaration(id, typeParameters = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation\n  });\n}\n\nfunction tsInstantiationExpression(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression\n  });\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumDeclaration\",\n    id,\n    members\n  });\n}\n\nfunction tsEnumMember(id, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumMember\",\n    id,\n    initializer\n  });\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction tsModuleBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleBlock\",\n    body\n  });\n}\n\nfunction tsImportType(argument, qualifier = null, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters\n  });\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return (0, _validateNode.default)({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null\n  });\n}\n\nfunction tsExternalModuleReference(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExternalModuleReference\",\n    expression\n  });\n}\n\nfunction tsNonNullExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSNonNullExpression\",\n    expression\n  });\n}\n\nfunction tsExportAssignment(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExportAssignment\",\n    expression\n  });\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return (0, _validateNode.default)({\n    type: \"TSNamespaceExportDeclaration\",\n    id\n  });\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction tsTypeParameter(constraint = null, _default = null, name) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name\n  });\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return numericLiteral(value);\n}\n\nfunction RegexLiteral(pattern, flags = \"\") {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return regExpLiteral(pattern, flags);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return restElement(argument);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return spreadElement(argument);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cleanJSXElementLiteralChild;\n\nvar _generated = require(\"../../builders/generated\");\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push((0, _generated.stringLiteral)(str));\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildChildren;\n\nvar _generated = require(\"../../validators/generated\");\n\nvar _cleanJSXElementLiteralChild = require(\"../../utils/react/cleanJSXElementLiteralChild\");\n\nfunction buildChildren(node) {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child = node.children[i];\n\n    if ((0, _generated.isJSXText)(child)) {\n      (0, _cleanJSXElementLiteralChild.default)(child, elements);\n      continue;\n    }\n\n    if ((0, _generated.isJSXExpressionContainer)(child)) child = child.expression;\n    if ((0, _generated.isJSXEmptyExpression)(child)) continue;\n    elements.push(child);\n  }\n\n  return elements;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNode;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNode(node) {\n  return !!(node && _definitions.VISITOR_KEYS[node.type]);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = require(\"../validators/isNode\");\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertAccessor = assertAccessor;\nexports.assertAnyTypeAnnotation = assertAnyTypeAnnotation;\nexports.assertArgumentPlaceholder = assertArgumentPlaceholder;\nexports.assertArrayExpression = assertArrayExpression;\nexports.assertArrayPattern = assertArrayPattern;\nexports.assertArrayTypeAnnotation = assertArrayTypeAnnotation;\nexports.assertArrowFunctionExpression = assertArrowFunctionExpression;\nexports.assertAssignmentExpression = assertAssignmentExpression;\nexports.assertAssignmentPattern = assertAssignmentPattern;\nexports.assertAwaitExpression = assertAwaitExpression;\nexports.assertBigIntLiteral = assertBigIntLiteral;\nexports.assertBinary = assertBinary;\nexports.assertBinaryExpression = assertBinaryExpression;\nexports.assertBindExpression = assertBindExpression;\nexports.assertBlock = assertBlock;\nexports.assertBlockParent = assertBlockParent;\nexports.assertBlockStatement = assertBlockStatement;\nexports.assertBooleanLiteral = assertBooleanLiteral;\nexports.assertBooleanLiteralTypeAnnotation = assertBooleanLiteralTypeAnnotation;\nexports.assertBooleanTypeAnnotation = assertBooleanTypeAnnotation;\nexports.assertBreakStatement = assertBreakStatement;\nexports.assertCallExpression = assertCallExpression;\nexports.assertCatchClause = assertCatchClause;\nexports.assertClass = assertClass;\nexports.assertClassAccessorProperty = assertClassAccessorProperty;\nexports.assertClassBody = assertClassBody;\nexports.assertClassDeclaration = assertClassDeclaration;\nexports.assertClassExpression = assertClassExpression;\nexports.assertClassImplements = assertClassImplements;\nexports.assertClassMethod = assertClassMethod;\nexports.assertClassPrivateMethod = assertClassPrivateMethod;\nexports.assertClassPrivateProperty = assertClassPrivateProperty;\nexports.assertClassProperty = assertClassProperty;\nexports.assertCompletionStatement = assertCompletionStatement;\nexports.assertConditional = assertConditional;\nexports.assertConditionalExpression = assertConditionalExpression;\nexports.assertContinueStatement = assertContinueStatement;\nexports.assertDebuggerStatement = assertDebuggerStatement;\nexports.assertDecimalLiteral = assertDecimalLiteral;\nexports.assertDeclaration = assertDeclaration;\nexports.assertDeclareClass = assertDeclareClass;\nexports.assertDeclareExportAllDeclaration = assertDeclareExportAllDeclaration;\nexports.assertDeclareExportDeclaration = assertDeclareExportDeclaration;\nexports.assertDeclareFunction = assertDeclareFunction;\nexports.assertDeclareInterface = assertDeclareInterface;\nexports.assertDeclareModule = assertDeclareModule;\nexports.assertDeclareModuleExports = assertDeclareModuleExports;\nexports.assertDeclareOpaqueType = assertDeclareOpaqueType;\nexports.assertDeclareTypeAlias = assertDeclareTypeAlias;\nexports.assertDeclareVariable = assertDeclareVariable;\nexports.assertDeclaredPredicate = assertDeclaredPredicate;\nexports.assertDecorator = assertDecorator;\nexports.assertDirective = assertDirective;\nexports.assertDirectiveLiteral = assertDirectiveLiteral;\nexports.assertDoExpression = assertDoExpression;\nexports.assertDoWhileStatement = assertDoWhileStatement;\nexports.assertEmptyStatement = assertEmptyStatement;\nexports.assertEmptyTypeAnnotation = assertEmptyTypeAnnotation;\nexports.assertEnumBody = assertEnumBody;\nexports.assertEnumBooleanBody = assertEnumBooleanBody;\nexports.assertEnumBooleanMember = assertEnumBooleanMember;\nexports.assertEnumDeclaration = assertEnumDeclaration;\nexports.assertEnumDefaultedMember = assertEnumDefaultedMember;\nexports.assertEnumMember = assertEnumMember;\nexports.assertEnumNumberBody = assertEnumNumberBody;\nexports.assertEnumNumberMember = assertEnumNumberMember;\nexports.assertEnumStringBody = assertEnumStringBody;\nexports.assertEnumStringMember = assertEnumStringMember;\nexports.assertEnumSymbolBody = assertEnumSymbolBody;\nexports.assertExistsTypeAnnotation = assertExistsTypeAnnotation;\nexports.assertExportAllDeclaration = assertExportAllDeclaration;\nexports.assertExportDeclaration = assertExportDeclaration;\nexports.assertExportDefaultDeclaration = assertExportDefaultDeclaration;\nexports.assertExportDefaultSpecifier = assertExportDefaultSpecifier;\nexports.assertExportNamedDeclaration = assertExportNamedDeclaration;\nexports.assertExportNamespaceSpecifier = assertExportNamespaceSpecifier;\nexports.assertExportSpecifier = assertExportSpecifier;\nexports.assertExpression = assertExpression;\nexports.assertExpressionStatement = assertExpressionStatement;\nexports.assertExpressionWrapper = assertExpressionWrapper;\nexports.assertFile = assertFile;\nexports.assertFlow = assertFlow;\nexports.assertFlowBaseAnnotation = assertFlowBaseAnnotation;\nexports.assertFlowDeclaration = assertFlowDeclaration;\nexports.assertFlowPredicate = assertFlowPredicate;\nexports.assertFlowType = assertFlowType;\nexports.assertFor = assertFor;\nexports.assertForInStatement = assertForInStatement;\nexports.assertForOfStatement = assertForOfStatement;\nexports.assertForStatement = assertForStatement;\nexports.assertForXStatement = assertForXStatement;\nexports.assertFunction = assertFunction;\nexports.assertFunctionDeclaration = assertFunctionDeclaration;\nexports.assertFunctionExpression = assertFunctionExpression;\nexports.assertFunctionParent = assertFunctionParent;\nexports.assertFunctionTypeAnnotation = assertFunctionTypeAnnotation;\nexports.assertFunctionTypeParam = assertFunctionTypeParam;\nexports.assertGenericTypeAnnotation = assertGenericTypeAnnotation;\nexports.assertIdentifier = assertIdentifier;\nexports.assertIfStatement = assertIfStatement;\nexports.assertImmutable = assertImmutable;\nexports.assertImport = assertImport;\nexports.assertImportAttribute = assertImportAttribute;\nexports.assertImportDeclaration = assertImportDeclaration;\nexports.assertImportDefaultSpecifier = assertImportDefaultSpecifier;\nexports.assertImportNamespaceSpecifier = assertImportNamespaceSpecifier;\nexports.assertImportSpecifier = assertImportSpecifier;\nexports.assertIndexedAccessType = assertIndexedAccessType;\nexports.assertInferredPredicate = assertInferredPredicate;\nexports.assertInterfaceDeclaration = assertInterfaceDeclaration;\nexports.assertInterfaceExtends = assertInterfaceExtends;\nexports.assertInterfaceTypeAnnotation = assertInterfaceTypeAnnotation;\nexports.assertInterpreterDirective = assertInterpreterDirective;\nexports.assertIntersectionTypeAnnotation = assertIntersectionTypeAnnotation;\nexports.assertJSX = assertJSX;\nexports.assertJSXAttribute = assertJSXAttribute;\nexports.assertJSXClosingElement = assertJSXClosingElement;\nexports.assertJSXClosingFragment = assertJSXClosingFragment;\nexports.assertJSXElement = assertJSXElement;\nexports.assertJSXEmptyExpression = assertJSXEmptyExpression;\nexports.assertJSXExpressionContainer = assertJSXExpressionContainer;\nexports.assertJSXFragment = assertJSXFragment;\nexports.assertJSXIdentifier = assertJSXIdentifier;\nexports.assertJSXMemberExpression = assertJSXMemberExpression;\nexports.assertJSXNamespacedName = assertJSXNamespacedName;\nexports.assertJSXOpeningElement = assertJSXOpeningElement;\nexports.assertJSXOpeningFragment = assertJSXOpeningFragment;\nexports.assertJSXSpreadAttribute = assertJSXSpreadAttribute;\nexports.assertJSXSpreadChild = assertJSXSpreadChild;\nexports.assertJSXText = assertJSXText;\nexports.assertLVal = assertLVal;\nexports.assertLabeledStatement = assertLabeledStatement;\nexports.assertLiteral = assertLiteral;\nexports.assertLogicalExpression = assertLogicalExpression;\nexports.assertLoop = assertLoop;\nexports.assertMemberExpression = assertMemberExpression;\nexports.assertMetaProperty = assertMetaProperty;\nexports.assertMethod = assertMethod;\nexports.assertMiscellaneous = assertMiscellaneous;\nexports.assertMixedTypeAnnotation = assertMixedTypeAnnotation;\nexports.assertModuleDeclaration = assertModuleDeclaration;\nexports.assertModuleExpression = assertModuleExpression;\nexports.assertModuleSpecifier = assertModuleSpecifier;\nexports.assertNewExpression = assertNewExpression;\nexports.assertNoop = assertNoop;\nexports.assertNullLiteral = assertNullLiteral;\nexports.assertNullLiteralTypeAnnotation = assertNullLiteralTypeAnnotation;\nexports.assertNullableTypeAnnotation = assertNullableTypeAnnotation;\nexports.assertNumberLiteral = assertNumberLiteral;\nexports.assertNumberLiteralTypeAnnotation = assertNumberLiteralTypeAnnotation;\nexports.assertNumberTypeAnnotation = assertNumberTypeAnnotation;\nexports.assertNumericLiteral = assertNumericLiteral;\nexports.assertObjectExpression = assertObjectExpression;\nexports.assertObjectMember = assertObjectMember;\nexports.assertObjectMethod = assertObjectMethod;\nexports.assertObjectPattern = assertObjectPattern;\nexports.assertObjectProperty = assertObjectProperty;\nexports.assertObjectTypeAnnotation = assertObjectTypeAnnotation;\nexports.assertObjectTypeCallProperty = assertObjectTypeCallProperty;\nexports.assertObjectTypeIndexer = assertObjectTypeIndexer;\nexports.assertObjectTypeInternalSlot = assertObjectTypeInternalSlot;\nexports.assertObjectTypeProperty = assertObjectTypeProperty;\nexports.assertObjectTypeSpreadProperty = assertObjectTypeSpreadProperty;\nexports.assertOpaqueType = assertOpaqueType;\nexports.assertOptionalCallExpression = assertOptionalCallExpression;\nexports.assertOptionalIndexedAccessType = assertOptionalIndexedAccessType;\nexports.assertOptionalMemberExpression = assertOptionalMemberExpression;\nexports.assertParenthesizedExpression = assertParenthesizedExpression;\nexports.assertPattern = assertPattern;\nexports.assertPatternLike = assertPatternLike;\nexports.assertPipelineBareFunction = assertPipelineBareFunction;\nexports.assertPipelinePrimaryTopicReference = assertPipelinePrimaryTopicReference;\nexports.assertPipelineTopicExpression = assertPipelineTopicExpression;\nexports.assertPlaceholder = assertPlaceholder;\nexports.assertPrivate = assertPrivate;\nexports.assertPrivateName = assertPrivateName;\nexports.assertProgram = assertProgram;\nexports.assertProperty = assertProperty;\nexports.assertPureish = assertPureish;\nexports.assertQualifiedTypeIdentifier = assertQualifiedTypeIdentifier;\nexports.assertRecordExpression = assertRecordExpression;\nexports.assertRegExpLiteral = assertRegExpLiteral;\nexports.assertRegexLiteral = assertRegexLiteral;\nexports.assertRestElement = assertRestElement;\nexports.assertRestProperty = assertRestProperty;\nexports.assertReturnStatement = assertReturnStatement;\nexports.assertScopable = assertScopable;\nexports.assertSequenceExpression = assertSequenceExpression;\nexports.assertSpreadElement = assertSpreadElement;\nexports.assertSpreadProperty = assertSpreadProperty;\nexports.assertStandardized = assertStandardized;\nexports.assertStatement = assertStatement;\nexports.assertStaticBlock = assertStaticBlock;\nexports.assertStringLiteral = assertStringLiteral;\nexports.assertStringLiteralTypeAnnotation = assertStringLiteralTypeAnnotation;\nexports.assertStringTypeAnnotation = assertStringTypeAnnotation;\nexports.assertSuper = assertSuper;\nexports.assertSwitchCase = assertSwitchCase;\nexports.assertSwitchStatement = assertSwitchStatement;\nexports.assertSymbolTypeAnnotation = assertSymbolTypeAnnotation;\nexports.assertTSAnyKeyword = assertTSAnyKeyword;\nexports.assertTSArrayType = assertTSArrayType;\nexports.assertTSAsExpression = assertTSAsExpression;\nexports.assertTSBaseType = assertTSBaseType;\nexports.assertTSBigIntKeyword = assertTSBigIntKeyword;\nexports.assertTSBooleanKeyword = assertTSBooleanKeyword;\nexports.assertTSCallSignatureDeclaration = assertTSCallSignatureDeclaration;\nexports.assertTSConditionalType = assertTSConditionalType;\nexports.assertTSConstructSignatureDeclaration = assertTSConstructSignatureDeclaration;\nexports.assertTSConstructorType = assertTSConstructorType;\nexports.assertTSDeclareFunction = assertTSDeclareFunction;\nexports.assertTSDeclareMethod = assertTSDeclareMethod;\nexports.assertTSEntityName = assertTSEntityName;\nexports.assertTSEnumDeclaration = assertTSEnumDeclaration;\nexports.assertTSEnumMember = assertTSEnumMember;\nexports.assertTSExportAssignment = assertTSExportAssignment;\nexports.assertTSExpressionWithTypeArguments = assertTSExpressionWithTypeArguments;\nexports.assertTSExternalModuleReference = assertTSExternalModuleReference;\nexports.assertTSFunctionType = assertTSFunctionType;\nexports.assertTSImportEqualsDeclaration = assertTSImportEqualsDeclaration;\nexports.assertTSImportType = assertTSImportType;\nexports.assertTSIndexSignature = assertTSIndexSignature;\nexports.assertTSIndexedAccessType = assertTSIndexedAccessType;\nexports.assertTSInferType = assertTSInferType;\nexports.assertTSInstantiationExpression = assertTSInstantiationExpression;\nexports.assertTSInterfaceBody = assertTSInterfaceBody;\nexports.assertTSInterfaceDeclaration = assertTSInterfaceDeclaration;\nexports.assertTSIntersectionType = assertTSIntersectionType;\nexports.assertTSIntrinsicKeyword = assertTSIntrinsicKeyword;\nexports.assertTSLiteralType = assertTSLiteralType;\nexports.assertTSMappedType = assertTSMappedType;\nexports.assertTSMethodSignature = assertTSMethodSignature;\nexports.assertTSModuleBlock = assertTSModuleBlock;\nexports.assertTSModuleDeclaration = assertTSModuleDeclaration;\nexports.assertTSNamedTupleMember = assertTSNamedTupleMember;\nexports.assertTSNamespaceExportDeclaration = assertTSNamespaceExportDeclaration;\nexports.assertTSNeverKeyword = assertTSNeverKeyword;\nexports.assertTSNonNullExpression = assertTSNonNullExpression;\nexports.assertTSNullKeyword = assertTSNullKeyword;\nexports.assertTSNumberKeyword = assertTSNumberKeyword;\nexports.assertTSObjectKeyword = assertTSObjectKeyword;\nexports.assertTSOptionalType = assertTSOptionalType;\nexports.assertTSParameterProperty = assertTSParameterProperty;\nexports.assertTSParenthesizedType = assertTSParenthesizedType;\nexports.assertTSPropertySignature = assertTSPropertySignature;\nexports.assertTSQualifiedName = assertTSQualifiedName;\nexports.assertTSRestType = assertTSRestType;\nexports.assertTSStringKeyword = assertTSStringKeyword;\nexports.assertTSSymbolKeyword = assertTSSymbolKeyword;\nexports.assertTSThisType = assertTSThisType;\nexports.assertTSTupleType = assertTSTupleType;\nexports.assertTSType = assertTSType;\nexports.assertTSTypeAliasDeclaration = assertTSTypeAliasDeclaration;\nexports.assertTSTypeAnnotation = assertTSTypeAnnotation;\nexports.assertTSTypeAssertion = assertTSTypeAssertion;\nexports.assertTSTypeElement = assertTSTypeElement;\nexports.assertTSTypeLiteral = assertTSTypeLiteral;\nexports.assertTSTypeOperator = assertTSTypeOperator;\nexports.assertTSTypeParameter = assertTSTypeParameter;\nexports.assertTSTypeParameterDeclaration = assertTSTypeParameterDeclaration;\nexports.assertTSTypeParameterInstantiation = assertTSTypeParameterInstantiation;\nexports.assertTSTypePredicate = assertTSTypePredicate;\nexports.assertTSTypeQuery = assertTSTypeQuery;\nexports.assertTSTypeReference = assertTSTypeReference;\nexports.assertTSUndefinedKeyword = assertTSUndefinedKeyword;\nexports.assertTSUnionType = assertTSUnionType;\nexports.assertTSUnknownKeyword = assertTSUnknownKeyword;\nexports.assertTSVoidKeyword = assertTSVoidKeyword;\nexports.assertTaggedTemplateExpression = assertTaggedTemplateExpression;\nexports.assertTemplateElement = assertTemplateElement;\nexports.assertTemplateLiteral = assertTemplateLiteral;\nexports.assertTerminatorless = assertTerminatorless;\nexports.assertThisExpression = assertThisExpression;\nexports.assertThisTypeAnnotation = assertThisTypeAnnotation;\nexports.assertThrowStatement = assertThrowStatement;\nexports.assertTopicReference = assertTopicReference;\nexports.assertTryStatement = assertTryStatement;\nexports.assertTupleExpression = assertTupleExpression;\nexports.assertTupleTypeAnnotation = assertTupleTypeAnnotation;\nexports.assertTypeAlias = assertTypeAlias;\nexports.assertTypeAnnotation = assertTypeAnnotation;\nexports.assertTypeCastExpression = assertTypeCastExpression;\nexports.assertTypeParameter = assertTypeParameter;\nexports.assertTypeParameterDeclaration = assertTypeParameterDeclaration;\nexports.assertTypeParameterInstantiation = assertTypeParameterInstantiation;\nexports.assertTypeScript = assertTypeScript;\nexports.assertTypeofTypeAnnotation = assertTypeofTypeAnnotation;\nexports.assertUnaryExpression = assertUnaryExpression;\nexports.assertUnaryLike = assertUnaryLike;\nexports.assertUnionTypeAnnotation = assertUnionTypeAnnotation;\nexports.assertUpdateExpression = assertUpdateExpression;\nexports.assertUserWhitespacable = assertUserWhitespacable;\nexports.assertV8IntrinsicIdentifier = assertV8IntrinsicIdentifier;\nexports.assertVariableDeclaration = assertVariableDeclaration;\nexports.assertVariableDeclarator = assertVariableDeclarator;\nexports.assertVariance = assertVariance;\nexports.assertVoidTypeAnnotation = assertVoidTypeAnnotation;\nexports.assertWhile = assertWhile;\nexports.assertWhileStatement = assertWhileStatement;\nexports.assertWithStatement = assertWithStatement;\nexports.assertYieldExpression = assertYieldExpression;\n\nvar _is = require(\"../../validators/is\");\n\nfunction assert(type, node, opts) {\n  if (!(0, _is.default)(type, node, opts)) {\n    throw new Error(`Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` + `but instead got \"${node.type}\".`);\n  }\n}\n\nfunction assertArrayExpression(node, opts) {\n  assert(\"ArrayExpression\", node, opts);\n}\n\nfunction assertAssignmentExpression(node, opts) {\n  assert(\"AssignmentExpression\", node, opts);\n}\n\nfunction assertBinaryExpression(node, opts) {\n  assert(\"BinaryExpression\", node, opts);\n}\n\nfunction assertInterpreterDirective(node, opts) {\n  assert(\"InterpreterDirective\", node, opts);\n}\n\nfunction assertDirective(node, opts) {\n  assert(\"Directive\", node, opts);\n}\n\nfunction assertDirectiveLiteral(node, opts) {\n  assert(\"DirectiveLiteral\", node, opts);\n}\n\nfunction assertBlockStatement(node, opts) {\n  assert(\"BlockStatement\", node, opts);\n}\n\nfunction assertBreakStatement(node, opts) {\n  assert(\"BreakStatement\", node, opts);\n}\n\nfunction assertCallExpression(node, opts) {\n  assert(\"CallExpression\", node, opts);\n}\n\nfunction assertCatchClause(node, opts) {\n  assert(\"CatchClause\", node, opts);\n}\n\nfunction assertConditionalExpression(node, opts) {\n  assert(\"ConditionalExpression\", node, opts);\n}\n\nfunction assertContinueStatement(node, opts) {\n  assert(\"ContinueStatement\", node, opts);\n}\n\nfunction assertDebuggerStatement(node, opts) {\n  assert(\"DebuggerStatement\", node, opts);\n}\n\nfunction assertDoWhileStatement(node, opts) {\n  assert(\"DoWhileStatement\", node, opts);\n}\n\nfunction assertEmptyStatement(node, opts) {\n  assert(\"EmptyStatement\", node, opts);\n}\n\nfunction assertExpressionStatement(node, opts) {\n  assert(\"ExpressionStatement\", node, opts);\n}\n\nfunction assertFile(node, opts) {\n  assert(\"File\", node, opts);\n}\n\nfunction assertForInStatement(node, opts) {\n  assert(\"ForInStatement\", node, opts);\n}\n\nfunction assertForStatement(node, opts) {\n  assert(\"ForStatement\", node, opts);\n}\n\nfunction assertFunctionDeclaration(node, opts) {\n  assert(\"FunctionDeclaration\", node, opts);\n}\n\nfunction assertFunctionExpression(node, opts) {\n  assert(\"FunctionExpression\", node, opts);\n}\n\nfunction assertIdentifier(node, opts) {\n  assert(\"Identifier\", node, opts);\n}\n\nfunction assertIfStatement(node, opts) {\n  assert(\"IfStatement\", node, opts);\n}\n\nfunction assertLabeledStatement(node, opts) {\n  assert(\"LabeledStatement\", node, opts);\n}\n\nfunction assertStringLiteral(node, opts) {\n  assert(\"StringLiteral\", node, opts);\n}\n\nfunction assertNumericLiteral(node, opts) {\n  assert(\"NumericLiteral\", node, opts);\n}\n\nfunction assertNullLiteral(node, opts) {\n  assert(\"NullLiteral\", node, opts);\n}\n\nfunction assertBooleanLiteral(node, opts) {\n  assert(\"BooleanLiteral\", node, opts);\n}\n\nfunction assertRegExpLiteral(node, opts) {\n  assert(\"RegExpLiteral\", node, opts);\n}\n\nfunction assertLogicalExpression(node, opts) {\n  assert(\"LogicalExpression\", node, opts);\n}\n\nfunction assertMemberExpression(node, opts) {\n  assert(\"MemberExpression\", node, opts);\n}\n\nfunction assertNewExpression(node, opts) {\n  assert(\"NewExpression\", node, opts);\n}\n\nfunction assertProgram(node, opts) {\n  assert(\"Program\", node, opts);\n}\n\nfunction assertObjectExpression(node, opts) {\n  assert(\"ObjectExpression\", node, opts);\n}\n\nfunction assertObjectMethod(node, opts) {\n  assert(\"ObjectMethod\", node, opts);\n}\n\nfunction assertObjectProperty(node, opts) {\n  assert(\"ObjectProperty\", node, opts);\n}\n\nfunction assertRestElement(node, opts) {\n  assert(\"RestElement\", node, opts);\n}\n\nfunction assertReturnStatement(node, opts) {\n  assert(\"ReturnStatement\", node, opts);\n}\n\nfunction assertSequenceExpression(node, opts) {\n  assert(\"SequenceExpression\", node, opts);\n}\n\nfunction assertParenthesizedExpression(node, opts) {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\n\nfunction assertSwitchCase(node, opts) {\n  assert(\"SwitchCase\", node, opts);\n}\n\nfunction assertSwitchStatement(node, opts) {\n  assert(\"SwitchStatement\", node, opts);\n}\n\nfunction assertThisExpression(node, opts) {\n  assert(\"ThisExpression\", node, opts);\n}\n\nfunction assertThrowStatement(node, opts) {\n  assert(\"ThrowStatement\", node, opts);\n}\n\nfunction assertTryStatement(node, opts) {\n  assert(\"TryStatement\", node, opts);\n}\n\nfunction assertUnaryExpression(node, opts) {\n  assert(\"UnaryExpression\", node, opts);\n}\n\nfunction assertUpdateExpression(node, opts) {\n  assert(\"UpdateExpression\", node, opts);\n}\n\nfunction assertVariableDeclaration(node, opts) {\n  assert(\"VariableDeclaration\", node, opts);\n}\n\nfunction assertVariableDeclarator(node, opts) {\n  assert(\"VariableDeclarator\", node, opts);\n}\n\nfunction assertWhileStatement(node, opts) {\n  assert(\"WhileStatement\", node, opts);\n}\n\nfunction assertWithStatement(node, opts) {\n  assert(\"WithStatement\", node, opts);\n}\n\nfunction assertAssignmentPattern(node, opts) {\n  assert(\"AssignmentPattern\", node, opts);\n}\n\nfunction assertArrayPattern(node, opts) {\n  assert(\"ArrayPattern\", node, opts);\n}\n\nfunction assertArrowFunctionExpression(node, opts) {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\n\nfunction assertClassBody(node, opts) {\n  assert(\"ClassBody\", node, opts);\n}\n\nfunction assertClassExpression(node, opts) {\n  assert(\"ClassExpression\", node, opts);\n}\n\nfunction assertClassDeclaration(node, opts) {\n  assert(\"ClassDeclaration\", node, opts);\n}\n\nfunction assertExportAllDeclaration(node, opts) {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\n\nfunction assertExportDefaultDeclaration(node, opts) {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\n\nfunction assertExportNamedDeclaration(node, opts) {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\n\nfunction assertExportSpecifier(node, opts) {\n  assert(\"ExportSpecifier\", node, opts);\n}\n\nfunction assertForOfStatement(node, opts) {\n  assert(\"ForOfStatement\", node, opts);\n}\n\nfunction assertImportDeclaration(node, opts) {\n  assert(\"ImportDeclaration\", node, opts);\n}\n\nfunction assertImportDefaultSpecifier(node, opts) {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\n\nfunction assertImportNamespaceSpecifier(node, opts) {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertImportSpecifier(node, opts) {\n  assert(\"ImportSpecifier\", node, opts);\n}\n\nfunction assertMetaProperty(node, opts) {\n  assert(\"MetaProperty\", node, opts);\n}\n\nfunction assertClassMethod(node, opts) {\n  assert(\"ClassMethod\", node, opts);\n}\n\nfunction assertObjectPattern(node, opts) {\n  assert(\"ObjectPattern\", node, opts);\n}\n\nfunction assertSpreadElement(node, opts) {\n  assert(\"SpreadElement\", node, opts);\n}\n\nfunction assertSuper(node, opts) {\n  assert(\"Super\", node, opts);\n}\n\nfunction assertTaggedTemplateExpression(node, opts) {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\n\nfunction assertTemplateElement(node, opts) {\n  assert(\"TemplateElement\", node, opts);\n}\n\nfunction assertTemplateLiteral(node, opts) {\n  assert(\"TemplateLiteral\", node, opts);\n}\n\nfunction assertYieldExpression(node, opts) {\n  assert(\"YieldExpression\", node, opts);\n}\n\nfunction assertAwaitExpression(node, opts) {\n  assert(\"AwaitExpression\", node, opts);\n}\n\nfunction assertImport(node, opts) {\n  assert(\"Import\", node, opts);\n}\n\nfunction assertBigIntLiteral(node, opts) {\n  assert(\"BigIntLiteral\", node, opts);\n}\n\nfunction assertExportNamespaceSpecifier(node, opts) {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertOptionalMemberExpression(node, opts) {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\n\nfunction assertOptionalCallExpression(node, opts) {\n  assert(\"OptionalCallExpression\", node, opts);\n}\n\nfunction assertClassProperty(node, opts) {\n  assert(\"ClassProperty\", node, opts);\n}\n\nfunction assertClassAccessorProperty(node, opts) {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\n\nfunction assertClassPrivateProperty(node, opts) {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\n\nfunction assertClassPrivateMethod(node, opts) {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\n\nfunction assertPrivateName(node, opts) {\n  assert(\"PrivateName\", node, opts);\n}\n\nfunction assertStaticBlock(node, opts) {\n  assert(\"StaticBlock\", node, opts);\n}\n\nfunction assertAnyTypeAnnotation(node, opts) {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\n\nfunction assertArrayTypeAnnotation(node, opts) {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanTypeAnnotation(node, opts) {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanLiteralTypeAnnotation(node, opts) {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNullLiteralTypeAnnotation(node, opts) {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertClassImplements(node, opts) {\n  assert(\"ClassImplements\", node, opts);\n}\n\nfunction assertDeclareClass(node, opts) {\n  assert(\"DeclareClass\", node, opts);\n}\n\nfunction assertDeclareFunction(node, opts) {\n  assert(\"DeclareFunction\", node, opts);\n}\n\nfunction assertDeclareInterface(node, opts) {\n  assert(\"DeclareInterface\", node, opts);\n}\n\nfunction assertDeclareModule(node, opts) {\n  assert(\"DeclareModule\", node, opts);\n}\n\nfunction assertDeclareModuleExports(node, opts) {\n  assert(\"DeclareModuleExports\", node, opts);\n}\n\nfunction assertDeclareTypeAlias(node, opts) {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\n\nfunction assertDeclareOpaqueType(node, opts) {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\n\nfunction assertDeclareVariable(node, opts) {\n  assert(\"DeclareVariable\", node, opts);\n}\n\nfunction assertDeclareExportDeclaration(node, opts) {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\n\nfunction assertDeclareExportAllDeclaration(node, opts) {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\n\nfunction assertDeclaredPredicate(node, opts) {\n  assert(\"DeclaredPredicate\", node, opts);\n}\n\nfunction assertExistsTypeAnnotation(node, opts) {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeAnnotation(node, opts) {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeParam(node, opts) {\n  assert(\"FunctionTypeParam\", node, opts);\n}\n\nfunction assertGenericTypeAnnotation(node, opts) {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\n\nfunction assertInferredPredicate(node, opts) {\n  assert(\"InferredPredicate\", node, opts);\n}\n\nfunction assertInterfaceExtends(node, opts) {\n  assert(\"InterfaceExtends\", node, opts);\n}\n\nfunction assertInterfaceDeclaration(node, opts) {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\n\nfunction assertInterfaceTypeAnnotation(node, opts) {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\n\nfunction assertIntersectionTypeAnnotation(node, opts) {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\n\nfunction assertMixedTypeAnnotation(node, opts) {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\n\nfunction assertEmptyTypeAnnotation(node, opts) {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\n\nfunction assertNullableTypeAnnotation(node, opts) {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberLiteralTypeAnnotation(node, opts) {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberTypeAnnotation(node, opts) {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeAnnotation(node, opts) {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeInternalSlot(node, opts) {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\n\nfunction assertObjectTypeCallProperty(node, opts) {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\n\nfunction assertObjectTypeIndexer(node, opts) {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\n\nfunction assertObjectTypeProperty(node, opts) {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\n\nfunction assertObjectTypeSpreadProperty(node, opts) {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\n\nfunction assertOpaqueType(node, opts) {\n  assert(\"OpaqueType\", node, opts);\n}\n\nfunction assertQualifiedTypeIdentifier(node, opts) {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\n\nfunction assertStringLiteralTypeAnnotation(node, opts) {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertStringTypeAnnotation(node, opts) {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\n\nfunction assertSymbolTypeAnnotation(node, opts) {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\n\nfunction assertThisTypeAnnotation(node, opts) {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\n\nfunction assertTupleTypeAnnotation(node, opts) {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeofTypeAnnotation(node, opts) {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeAlias(node, opts) {\n  assert(\"TypeAlias\", node, opts);\n}\n\nfunction assertTypeAnnotation(node, opts) {\n  assert(\"TypeAnnotation\", node, opts);\n}\n\nfunction assertTypeCastExpression(node, opts) {\n  assert(\"TypeCastExpression\", node, opts);\n}\n\nfunction assertTypeParameter(node, opts) {\n  assert(\"TypeParameter\", node, opts);\n}\n\nfunction assertTypeParameterDeclaration(node, opts) {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTypeParameterInstantiation(node, opts) {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\n\nfunction assertUnionTypeAnnotation(node, opts) {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\n\nfunction assertVariance(node, opts) {\n  assert(\"Variance\", node, opts);\n}\n\nfunction assertVoidTypeAnnotation(node, opts) {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\n\nfunction assertEnumDeclaration(node, opts) {\n  assert(\"EnumDeclaration\", node, opts);\n}\n\nfunction assertEnumBooleanBody(node, opts) {\n  assert(\"EnumBooleanBody\", node, opts);\n}\n\nfunction assertEnumNumberBody(node, opts) {\n  assert(\"EnumNumberBody\", node, opts);\n}\n\nfunction assertEnumStringBody(node, opts) {\n  assert(\"EnumStringBody\", node, opts);\n}\n\nfunction assertEnumSymbolBody(node, opts) {\n  assert(\"EnumSymbolBody\", node, opts);\n}\n\nfunction assertEnumBooleanMember(node, opts) {\n  assert(\"EnumBooleanMember\", node, opts);\n}\n\nfunction assertEnumNumberMember(node, opts) {\n  assert(\"EnumNumberMember\", node, opts);\n}\n\nfunction assertEnumStringMember(node, opts) {\n  assert(\"EnumStringMember\", node, opts);\n}\n\nfunction assertEnumDefaultedMember(node, opts) {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\n\nfunction assertIndexedAccessType(node, opts) {\n  assert(\"IndexedAccessType\", node, opts);\n}\n\nfunction assertOptionalIndexedAccessType(node, opts) {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\n\nfunction assertJSXAttribute(node, opts) {\n  assert(\"JSXAttribute\", node, opts);\n}\n\nfunction assertJSXClosingElement(node, opts) {\n  assert(\"JSXClosingElement\", node, opts);\n}\n\nfunction assertJSXElement(node, opts) {\n  assert(\"JSXElement\", node, opts);\n}\n\nfunction assertJSXEmptyExpression(node, opts) {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\n\nfunction assertJSXExpressionContainer(node, opts) {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\n\nfunction assertJSXSpreadChild(node, opts) {\n  assert(\"JSXSpreadChild\", node, opts);\n}\n\nfunction assertJSXIdentifier(node, opts) {\n  assert(\"JSXIdentifier\", node, opts);\n}\n\nfunction assertJSXMemberExpression(node, opts) {\n  assert(\"JSXMemberExpression\", node, opts);\n}\n\nfunction assertJSXNamespacedName(node, opts) {\n  assert(\"JSXNamespacedName\", node, opts);\n}\n\nfunction assertJSXOpeningElement(node, opts) {\n  assert(\"JSXOpeningElement\", node, opts);\n}\n\nfunction assertJSXSpreadAttribute(node, opts) {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\n\nfunction assertJSXText(node, opts) {\n  assert(\"JSXText\", node, opts);\n}\n\nfunction assertJSXFragment(node, opts) {\n  assert(\"JSXFragment\", node, opts);\n}\n\nfunction assertJSXOpeningFragment(node, opts) {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\n\nfunction assertJSXClosingFragment(node, opts) {\n  assert(\"JSXClosingFragment\", node, opts);\n}\n\nfunction assertNoop(node, opts) {\n  assert(\"Noop\", node, opts);\n}\n\nfunction assertPlaceholder(node, opts) {\n  assert(\"Placeholder\", node, opts);\n}\n\nfunction assertV8IntrinsicIdentifier(node, opts) {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\n\nfunction assertArgumentPlaceholder(node, opts) {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\n\nfunction assertBindExpression(node, opts) {\n  assert(\"BindExpression\", node, opts);\n}\n\nfunction assertImportAttribute(node, opts) {\n  assert(\"ImportAttribute\", node, opts);\n}\n\nfunction assertDecorator(node, opts) {\n  assert(\"Decorator\", node, opts);\n}\n\nfunction assertDoExpression(node, opts) {\n  assert(\"DoExpression\", node, opts);\n}\n\nfunction assertExportDefaultSpecifier(node, opts) {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\n\nfunction assertRecordExpression(node, opts) {\n  assert(\"RecordExpression\", node, opts);\n}\n\nfunction assertTupleExpression(node, opts) {\n  assert(\"TupleExpression\", node, opts);\n}\n\nfunction assertDecimalLiteral(node, opts) {\n  assert(\"DecimalLiteral\", node, opts);\n}\n\nfunction assertModuleExpression(node, opts) {\n  assert(\"ModuleExpression\", node, opts);\n}\n\nfunction assertTopicReference(node, opts) {\n  assert(\"TopicReference\", node, opts);\n}\n\nfunction assertPipelineTopicExpression(node, opts) {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\n\nfunction assertPipelineBareFunction(node, opts) {\n  assert(\"PipelineBareFunction\", node, opts);\n}\n\nfunction assertPipelinePrimaryTopicReference(node, opts) {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\n\nfunction assertTSParameterProperty(node, opts) {\n  assert(\"TSParameterProperty\", node, opts);\n}\n\nfunction assertTSDeclareFunction(node, opts) {\n  assert(\"TSDeclareFunction\", node, opts);\n}\n\nfunction assertTSDeclareMethod(node, opts) {\n  assert(\"TSDeclareMethod\", node, opts);\n}\n\nfunction assertTSQualifiedName(node, opts) {\n  assert(\"TSQualifiedName\", node, opts);\n}\n\nfunction assertTSCallSignatureDeclaration(node, opts) {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSConstructSignatureDeclaration(node, opts) {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSPropertySignature(node, opts) {\n  assert(\"TSPropertySignature\", node, opts);\n}\n\nfunction assertTSMethodSignature(node, opts) {\n  assert(\"TSMethodSignature\", node, opts);\n}\n\nfunction assertTSIndexSignature(node, opts) {\n  assert(\"TSIndexSignature\", node, opts);\n}\n\nfunction assertTSAnyKeyword(node, opts) {\n  assert(\"TSAnyKeyword\", node, opts);\n}\n\nfunction assertTSBooleanKeyword(node, opts) {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\n\nfunction assertTSBigIntKeyword(node, opts) {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\n\nfunction assertTSIntrinsicKeyword(node, opts) {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\n\nfunction assertTSNeverKeyword(node, opts) {\n  assert(\"TSNeverKeyword\", node, opts);\n}\n\nfunction assertTSNullKeyword(node, opts) {\n  assert(\"TSNullKeyword\", node, opts);\n}\n\nfunction assertTSNumberKeyword(node, opts) {\n  assert(\"TSNumberKeyword\", node, opts);\n}\n\nfunction assertTSObjectKeyword(node, opts) {\n  assert(\"TSObjectKeyword\", node, opts);\n}\n\nfunction assertTSStringKeyword(node, opts) {\n  assert(\"TSStringKeyword\", node, opts);\n}\n\nfunction assertTSSymbolKeyword(node, opts) {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\n\nfunction assertTSUndefinedKeyword(node, opts) {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\n\nfunction assertTSUnknownKeyword(node, opts) {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\n\nfunction assertTSVoidKeyword(node, opts) {\n  assert(\"TSVoidKeyword\", node, opts);\n}\n\nfunction assertTSThisType(node, opts) {\n  assert(\"TSThisType\", node, opts);\n}\n\nfunction assertTSFunctionType(node, opts) {\n  assert(\"TSFunctionType\", node, opts);\n}\n\nfunction assertTSConstructorType(node, opts) {\n  assert(\"TSConstructorType\", node, opts);\n}\n\nfunction assertTSTypeReference(node, opts) {\n  assert(\"TSTypeReference\", node, opts);\n}\n\nfunction assertTSTypePredicate(node, opts) {\n  assert(\"TSTypePredicate\", node, opts);\n}\n\nfunction assertTSTypeQuery(node, opts) {\n  assert(\"TSTypeQuery\", node, opts);\n}\n\nfunction assertTSTypeLiteral(node, opts) {\n  assert(\"TSTypeLiteral\", node, opts);\n}\n\nfunction assertTSArrayType(node, opts) {\n  assert(\"TSArrayType\", node, opts);\n}\n\nfunction assertTSTupleType(node, opts) {\n  assert(\"TSTupleType\", node, opts);\n}\n\nfunction assertTSOptionalType(node, opts) {\n  assert(\"TSOptionalType\", node, opts);\n}\n\nfunction assertTSRestType(node, opts) {\n  assert(\"TSRestType\", node, opts);\n}\n\nfunction assertTSNamedTupleMember(node, opts) {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\n\nfunction assertTSUnionType(node, opts) {\n  assert(\"TSUnionType\", node, opts);\n}\n\nfunction assertTSIntersectionType(node, opts) {\n  assert(\"TSIntersectionType\", node, opts);\n}\n\nfunction assertTSConditionalType(node, opts) {\n  assert(\"TSConditionalType\", node, opts);\n}\n\nfunction assertTSInferType(node, opts) {\n  assert(\"TSInferType\", node, opts);\n}\n\nfunction assertTSParenthesizedType(node, opts) {\n  assert(\"TSParenthesizedType\", node, opts);\n}\n\nfunction assertTSTypeOperator(node, opts) {\n  assert(\"TSTypeOperator\", node, opts);\n}\n\nfunction assertTSIndexedAccessType(node, opts) {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\n\nfunction assertTSMappedType(node, opts) {\n  assert(\"TSMappedType\", node, opts);\n}\n\nfunction assertTSLiteralType(node, opts) {\n  assert(\"TSLiteralType\", node, opts);\n}\n\nfunction assertTSExpressionWithTypeArguments(node, opts) {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\n\nfunction assertTSInterfaceDeclaration(node, opts) {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\n\nfunction assertTSInterfaceBody(node, opts) {\n  assert(\"TSInterfaceBody\", node, opts);\n}\n\nfunction assertTSTypeAliasDeclaration(node, opts) {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\n\nfunction assertTSInstantiationExpression(node, opts) {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\n\nfunction assertTSAsExpression(node, opts) {\n  assert(\"TSAsExpression\", node, opts);\n}\n\nfunction assertTSTypeAssertion(node, opts) {\n  assert(\"TSTypeAssertion\", node, opts);\n}\n\nfunction assertTSEnumDeclaration(node, opts) {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\n\nfunction assertTSEnumMember(node, opts) {\n  assert(\"TSEnumMember\", node, opts);\n}\n\nfunction assertTSModuleDeclaration(node, opts) {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\n\nfunction assertTSModuleBlock(node, opts) {\n  assert(\"TSModuleBlock\", node, opts);\n}\n\nfunction assertTSImportType(node, opts) {\n  assert(\"TSImportType\", node, opts);\n}\n\nfunction assertTSImportEqualsDeclaration(node, opts) {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\n\nfunction assertTSExternalModuleReference(node, opts) {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\n\nfunction assertTSNonNullExpression(node, opts) {\n  assert(\"TSNonNullExpression\", node, opts);\n}\n\nfunction assertTSExportAssignment(node, opts) {\n  assert(\"TSExportAssignment\", node, opts);\n}\n\nfunction assertTSNamespaceExportDeclaration(node, opts) {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\n\nfunction assertTSTypeAnnotation(node, opts) {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\n\nfunction assertTSTypeParameterInstantiation(node, opts) {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\n\nfunction assertTSTypeParameterDeclaration(node, opts) {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTSTypeParameter(node, opts) {\n  assert(\"TSTypeParameter\", node, opts);\n}\n\nfunction assertStandardized(node, opts) {\n  assert(\"Standardized\", node, opts);\n}\n\nfunction assertExpression(node, opts) {\n  assert(\"Expression\", node, opts);\n}\n\nfunction assertBinary(node, opts) {\n  assert(\"Binary\", node, opts);\n}\n\nfunction assertScopable(node, opts) {\n  assert(\"Scopable\", node, opts);\n}\n\nfunction assertBlockParent(node, opts) {\n  assert(\"BlockParent\", node, opts);\n}\n\nfunction assertBlock(node, opts) {\n  assert(\"Block\", node, opts);\n}\n\nfunction assertStatement(node, opts) {\n  assert(\"Statement\", node, opts);\n}\n\nfunction assertTerminatorless(node, opts) {\n  assert(\"Terminatorless\", node, opts);\n}\n\nfunction assertCompletionStatement(node, opts) {\n  assert(\"CompletionStatement\", node, opts);\n}\n\nfunction assertConditional(node, opts) {\n  assert(\"Conditional\", node, opts);\n}\n\nfunction assertLoop(node, opts) {\n  assert(\"Loop\", node, opts);\n}\n\nfunction assertWhile(node, opts) {\n  assert(\"While\", node, opts);\n}\n\nfunction assertExpressionWrapper(node, opts) {\n  assert(\"ExpressionWrapper\", node, opts);\n}\n\nfunction assertFor(node, opts) {\n  assert(\"For\", node, opts);\n}\n\nfunction assertForXStatement(node, opts) {\n  assert(\"ForXStatement\", node, opts);\n}\n\nfunction assertFunction(node, opts) {\n  assert(\"Function\", node, opts);\n}\n\nfunction assertFunctionParent(node, opts) {\n  assert(\"FunctionParent\", node, opts);\n}\n\nfunction assertPureish(node, opts) {\n  assert(\"Pureish\", node, opts);\n}\n\nfunction assertDeclaration(node, opts) {\n  assert(\"Declaration\", node, opts);\n}\n\nfunction assertPatternLike(node, opts) {\n  assert(\"PatternLike\", node, opts);\n}\n\nfunction assertLVal(node, opts) {\n  assert(\"LVal\", node, opts);\n}\n\nfunction assertTSEntityName(node, opts) {\n  assert(\"TSEntityName\", node, opts);\n}\n\nfunction assertLiteral(node, opts) {\n  assert(\"Literal\", node, opts);\n}\n\nfunction assertImmutable(node, opts) {\n  assert(\"Immutable\", node, opts);\n}\n\nfunction assertUserWhitespacable(node, opts) {\n  assert(\"UserWhitespacable\", node, opts);\n}\n\nfunction assertMethod(node, opts) {\n  assert(\"Method\", node, opts);\n}\n\nfunction assertObjectMember(node, opts) {\n  assert(\"ObjectMember\", node, opts);\n}\n\nfunction assertProperty(node, opts) {\n  assert(\"Property\", node, opts);\n}\n\nfunction assertUnaryLike(node, opts) {\n  assert(\"UnaryLike\", node, opts);\n}\n\nfunction assertPattern(node, opts) {\n  assert(\"Pattern\", node, opts);\n}\n\nfunction assertClass(node, opts) {\n  assert(\"Class\", node, opts);\n}\n\nfunction assertModuleDeclaration(node, opts) {\n  assert(\"ModuleDeclaration\", node, opts);\n}\n\nfunction assertExportDeclaration(node, opts) {\n  assert(\"ExportDeclaration\", node, opts);\n}\n\nfunction assertModuleSpecifier(node, opts) {\n  assert(\"ModuleSpecifier\", node, opts);\n}\n\nfunction assertAccessor(node, opts) {\n  assert(\"Accessor\", node, opts);\n}\n\nfunction assertPrivate(node, opts) {\n  assert(\"Private\", node, opts);\n}\n\nfunction assertFlow(node, opts) {\n  assert(\"Flow\", node, opts);\n}\n\nfunction assertFlowType(node, opts) {\n  assert(\"FlowType\", node, opts);\n}\n\nfunction assertFlowBaseAnnotation(node, opts) {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\n\nfunction assertFlowDeclaration(node, opts) {\n  assert(\"FlowDeclaration\", node, opts);\n}\n\nfunction assertFlowPredicate(node, opts) {\n  assert(\"FlowPredicate\", node, opts);\n}\n\nfunction assertEnumBody(node, opts) {\n  assert(\"EnumBody\", node, opts);\n}\n\nfunction assertEnumMember(node, opts) {\n  assert(\"EnumMember\", node, opts);\n}\n\nfunction assertJSX(node, opts) {\n  assert(\"JSX\", node, opts);\n}\n\nfunction assertMiscellaneous(node, opts) {\n  assert(\"Miscellaneous\", node, opts);\n}\n\nfunction assertTypeScript(node, opts) {\n  assert(\"TypeScript\", node, opts);\n}\n\nfunction assertTSTypeElement(node, opts) {\n  assert(\"TSTypeElement\", node, opts);\n}\n\nfunction assertTSType(node, opts) {\n  assert(\"TSType\", node, opts);\n}\n\nfunction assertTSBaseType(node, opts) {\n  assert(\"TSBaseType\", node, opts);\n}\n\nfunction assertNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\n\nfunction assertRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\n\nfunction assertRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  assert(\"RestProperty\", node, opts);\n}\n\nfunction assertSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../generated\");\n\nvar _default = createTypeAnnotationBasedOnTypeof;\nexports.default = _default;\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  switch (type) {\n    case \"string\":\n      return (0, _generated.stringTypeAnnotation)();\n\n    case \"number\":\n      return (0, _generated.numberTypeAnnotation)();\n\n    case \"undefined\":\n      return (0, _generated.voidTypeAnnotation)();\n\n    case \"boolean\":\n      return (0, _generated.booleanTypeAnnotation)();\n\n    case \"function\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Function\"));\n\n    case \"object\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Object\"));\n\n    case \"symbol\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Symbol\"));\n\n    case \"bigint\":\n      return (0, _generated.anyTypeAnnotation)();\n  }\n\n  throw new Error(\"Invalid typeof value: \" + type);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isAnyTypeAnnotation)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isFlowBaseAnnotation)(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if ((0, _generated.isUnionTypeAnnotation)(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes = nodes.concat(node.types);\n        typeGroups.add(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isGenericTypeAnnotation)(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createFlowUnionType;\n\nvar _generated = require(\"../generated\");\n\nvar _removeTypeDuplicates = require(\"../../modifications/flow/removeTypeDuplicates\");\n\nfunction createFlowUnionType(types) {\n  const flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.unionTypeAnnotation)(flattened);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isTSAnyKeyword)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isTSBaseType)(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if ((0, _generated.isTSUnionType)(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isTSTypeReference)(node) && node.typeParameters) {\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTSUnionType;\n\nvar _generated = require(\"../generated\");\n\nvar _removeTypeDuplicates = require(\"../../modifications/typescript/removeTypeDuplicates\");\n\nvar _index = require(\"../../validators/generated/index\");\n\nfunction createTSUnionType(typeAnnotations) {\n  const types = typeAnnotations.map(type => {\n    return (0, _index.isTSTypeAnnotation)(type) ? type.typeAnnotation : type;\n  });\n  const flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.tsUnionType)(flattened);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnyTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.anyTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ArgumentPlaceholder\", {\n  enumerable: true,\n  get: function () {\n    return _index.argumentPlaceholder;\n  }\n});\nObject.defineProperty(exports, \"ArrayExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayExpression;\n  }\n});\nObject.defineProperty(exports, \"ArrayPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayPattern;\n  }\n});\nObject.defineProperty(exports, \"ArrayTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ArrowFunctionExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrowFunctionExpression;\n  }\n});\nObject.defineProperty(exports, \"AssignmentExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.assignmentExpression;\n  }\n});\nObject.defineProperty(exports, \"AssignmentPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.assignmentPattern;\n  }\n});\nObject.defineProperty(exports, \"AwaitExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.awaitExpression;\n  }\n});\nObject.defineProperty(exports, \"BigIntLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.bigIntLiteral;\n  }\n});\nObject.defineProperty(exports, \"BinaryExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.binaryExpression;\n  }\n});\nObject.defineProperty(exports, \"BindExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.bindExpression;\n  }\n});\nObject.defineProperty(exports, \"BlockStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.blockStatement;\n  }\n});\nObject.defineProperty(exports, \"BooleanLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanLiteral;\n  }\n});\nObject.defineProperty(exports, \"BooleanLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"BooleanTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"BreakStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.breakStatement;\n  }\n});\nObject.defineProperty(exports, \"CallExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.callExpression;\n  }\n});\nObject.defineProperty(exports, \"CatchClause\", {\n  enumerable: true,\n  get: function () {\n    return _index.catchClause;\n  }\n});\nObject.defineProperty(exports, \"ClassAccessorProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classAccessorProperty;\n  }\n});\nObject.defineProperty(exports, \"ClassBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.classBody;\n  }\n});\nObject.defineProperty(exports, \"ClassDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.classDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ClassExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.classExpression;\n  }\n});\nObject.defineProperty(exports, \"ClassImplements\", {\n  enumerable: true,\n  get: function () {\n    return _index.classImplements;\n  }\n});\nObject.defineProperty(exports, \"ClassMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.classMethod;\n  }\n});\nObject.defineProperty(exports, \"ClassPrivateMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.classPrivateMethod;\n  }\n});\nObject.defineProperty(exports, \"ClassPrivateProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classPrivateProperty;\n  }\n});\nObject.defineProperty(exports, \"ClassProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classProperty;\n  }\n});\nObject.defineProperty(exports, \"ConditionalExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.conditionalExpression;\n  }\n});\nObject.defineProperty(exports, \"ContinueStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.continueStatement;\n  }\n});\nObject.defineProperty(exports, \"DebuggerStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.debuggerStatement;\n  }\n});\nObject.defineProperty(exports, \"DecimalLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.decimalLiteral;\n  }\n});\nObject.defineProperty(exports, \"DeclareClass\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareClass;\n  }\n});\nObject.defineProperty(exports, \"DeclareExportAllDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareExportAllDeclaration;\n  }\n});\nObject.defineProperty(exports, \"DeclareExportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareExportDeclaration;\n  }\n});\nObject.defineProperty(exports, \"DeclareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareFunction;\n  }\n});\nObject.defineProperty(exports, \"DeclareInterface\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareInterface;\n  }\n});\nObject.defineProperty(exports, \"DeclareModule\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareModule;\n  }\n});\nObject.defineProperty(exports, \"DeclareModuleExports\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareModuleExports;\n  }\n});\nObject.defineProperty(exports, \"DeclareOpaqueType\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareOpaqueType;\n  }\n});\nObject.defineProperty(exports, \"DeclareTypeAlias\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareTypeAlias;\n  }\n});\nObject.defineProperty(exports, \"DeclareVariable\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareVariable;\n  }\n});\nObject.defineProperty(exports, \"DeclaredPredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.declaredPredicate;\n  }\n});\nObject.defineProperty(exports, \"Decorator\", {\n  enumerable: true,\n  get: function () {\n    return _index.decorator;\n  }\n});\nObject.defineProperty(exports, \"Directive\", {\n  enumerable: true,\n  get: function () {\n    return _index.directive;\n  }\n});\nObject.defineProperty(exports, \"DirectiveLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.directiveLiteral;\n  }\n});\nObject.defineProperty(exports, \"DoExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.doExpression;\n  }\n});\nObject.defineProperty(exports, \"DoWhileStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.doWhileStatement;\n  }\n});\nObject.defineProperty(exports, \"EmptyStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.emptyStatement;\n  }\n});\nObject.defineProperty(exports, \"EmptyTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.emptyTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"EnumBooleanBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumBooleanBody;\n  }\n});\nObject.defineProperty(exports, \"EnumBooleanMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumBooleanMember;\n  }\n});\nObject.defineProperty(exports, \"EnumDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumDeclaration;\n  }\n});\nObject.defineProperty(exports, \"EnumDefaultedMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumDefaultedMember;\n  }\n});\nObject.defineProperty(exports, \"EnumNumberBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumNumberBody;\n  }\n});\nObject.defineProperty(exports, \"EnumNumberMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumNumberMember;\n  }\n});\nObject.defineProperty(exports, \"EnumStringBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumStringBody;\n  }\n});\nObject.defineProperty(exports, \"EnumStringMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumStringMember;\n  }\n});\nObject.defineProperty(exports, \"EnumSymbolBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumSymbolBody;\n  }\n});\nObject.defineProperty(exports, \"ExistsTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.existsTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ExportAllDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportAllDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportDefaultDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportDefaultDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportDefaultSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportDefaultSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExportNamedDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportNamedDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportNamespaceSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportNamespaceSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExportSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExpressionStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.expressionStatement;\n  }\n});\nObject.defineProperty(exports, \"File\", {\n  enumerable: true,\n  get: function () {\n    return _index.file;\n  }\n});\nObject.defineProperty(exports, \"ForInStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forInStatement;\n  }\n});\nObject.defineProperty(exports, \"ForOfStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forOfStatement;\n  }\n});\nObject.defineProperty(exports, \"ForStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forStatement;\n  }\n});\nObject.defineProperty(exports, \"FunctionDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionDeclaration;\n  }\n});\nObject.defineProperty(exports, \"FunctionExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionExpression;\n  }\n});\nObject.defineProperty(exports, \"FunctionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"FunctionTypeParam\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionTypeParam;\n  }\n});\nObject.defineProperty(exports, \"GenericTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.genericTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.identifier;\n  }\n});\nObject.defineProperty(exports, \"IfStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.ifStatement;\n  }\n});\nObject.defineProperty(exports, \"Import\", {\n  enumerable: true,\n  get: function () {\n    return _index.import;\n  }\n});\nObject.defineProperty(exports, \"ImportAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.importAttribute;\n  }\n});\nObject.defineProperty(exports, \"ImportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.importDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ImportDefaultSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importDefaultSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ImportNamespaceSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importNamespaceSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ImportSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importSpecifier;\n  }\n});\nObject.defineProperty(exports, \"IndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.indexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"InferredPredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.inferredPredicate;\n  }\n});\nObject.defineProperty(exports, \"InterfaceDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceDeclaration;\n  }\n});\nObject.defineProperty(exports, \"InterfaceExtends\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceExtends;\n  }\n});\nObject.defineProperty(exports, \"InterfaceTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"InterpreterDirective\", {\n  enumerable: true,\n  get: function () {\n    return _index.interpreterDirective;\n  }\n});\nObject.defineProperty(exports, \"IntersectionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.intersectionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"JSXAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxAttribute;\n  }\n});\nObject.defineProperty(exports, \"JSXClosingElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxClosingElement;\n  }\n});\nObject.defineProperty(exports, \"JSXClosingFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxClosingFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxElement;\n  }\n});\nObject.defineProperty(exports, \"JSXEmptyExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxEmptyExpression;\n  }\n});\nObject.defineProperty(exports, \"JSXExpressionContainer\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxExpressionContainer;\n  }\n});\nObject.defineProperty(exports, \"JSXFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxIdentifier;\n  }\n});\nObject.defineProperty(exports, \"JSXMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxMemberExpression;\n  }\n});\nObject.defineProperty(exports, \"JSXNamespacedName\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxNamespacedName;\n  }\n});\nObject.defineProperty(exports, \"JSXOpeningElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxOpeningElement;\n  }\n});\nObject.defineProperty(exports, \"JSXOpeningFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxOpeningFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXSpreadAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxSpreadAttribute;\n  }\n});\nObject.defineProperty(exports, \"JSXSpreadChild\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxSpreadChild;\n  }\n});\nObject.defineProperty(exports, \"JSXText\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxText;\n  }\n});\nObject.defineProperty(exports, \"LabeledStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.labeledStatement;\n  }\n});\nObject.defineProperty(exports, \"LogicalExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.logicalExpression;\n  }\n});\nObject.defineProperty(exports, \"MemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.memberExpression;\n  }\n});\nObject.defineProperty(exports, \"MetaProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.metaProperty;\n  }\n});\nObject.defineProperty(exports, \"MixedTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.mixedTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ModuleExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.moduleExpression;\n  }\n});\nObject.defineProperty(exports, \"NewExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.newExpression;\n  }\n});\nObject.defineProperty(exports, \"Noop\", {\n  enumerable: true,\n  get: function () {\n    return _index.noop;\n  }\n});\nObject.defineProperty(exports, \"NullLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullLiteral;\n  }\n});\nObject.defineProperty(exports, \"NullLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NullableTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullableTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumberLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberLiteral;\n  }\n});\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumberTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumericLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.numericLiteral;\n  }\n});\nObject.defineProperty(exports, \"ObjectExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectExpression;\n  }\n});\nObject.defineProperty(exports, \"ObjectMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectMethod;\n  }\n});\nObject.defineProperty(exports, \"ObjectPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectPattern;\n  }\n});\nObject.defineProperty(exports, \"ObjectProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeCallProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeCallProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeIndexer\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeIndexer;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeInternalSlot\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeInternalSlot;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeSpreadProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeSpreadProperty;\n  }\n});\nObject.defineProperty(exports, \"OpaqueType\", {\n  enumerable: true,\n  get: function () {\n    return _index.opaqueType;\n  }\n});\nObject.defineProperty(exports, \"OptionalCallExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalCallExpression;\n  }\n});\nObject.defineProperty(exports, \"OptionalIndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalIndexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"OptionalMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalMemberExpression;\n  }\n});\nObject.defineProperty(exports, \"ParenthesizedExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.parenthesizedExpression;\n  }\n});\nObject.defineProperty(exports, \"PipelineBareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelineBareFunction;\n  }\n});\nObject.defineProperty(exports, \"PipelinePrimaryTopicReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelinePrimaryTopicReference;\n  }\n});\nObject.defineProperty(exports, \"PipelineTopicExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelineTopicExpression;\n  }\n});\nObject.defineProperty(exports, \"Placeholder\", {\n  enumerable: true,\n  get: function () {\n    return _index.placeholder;\n  }\n});\nObject.defineProperty(exports, \"PrivateName\", {\n  enumerable: true,\n  get: function () {\n    return _index.privateName;\n  }\n});\nObject.defineProperty(exports, \"Program\", {\n  enumerable: true,\n  get: function () {\n    return _index.program;\n  }\n});\nObject.defineProperty(exports, \"QualifiedTypeIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.qualifiedTypeIdentifier;\n  }\n});\nObject.defineProperty(exports, \"RecordExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.recordExpression;\n  }\n});\nObject.defineProperty(exports, \"RegExpLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.regExpLiteral;\n  }\n});\nObject.defineProperty(exports, \"RegexLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.regexLiteral;\n  }\n});\nObject.defineProperty(exports, \"RestElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.restElement;\n  }\n});\nObject.defineProperty(exports, \"RestProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.restProperty;\n  }\n});\nObject.defineProperty(exports, \"ReturnStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.returnStatement;\n  }\n});\nObject.defineProperty(exports, \"SequenceExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.sequenceExpression;\n  }\n});\nObject.defineProperty(exports, \"SpreadElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.spreadElement;\n  }\n});\nObject.defineProperty(exports, \"SpreadProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.spreadProperty;\n  }\n});\nObject.defineProperty(exports, \"StaticBlock\", {\n  enumerable: true,\n  get: function () {\n    return _index.staticBlock;\n  }\n});\nObject.defineProperty(exports, \"StringLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringLiteral;\n  }\n});\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"StringTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"Super\", {\n  enumerable: true,\n  get: function () {\n    return _index.super;\n  }\n});\nObject.defineProperty(exports, \"SwitchCase\", {\n  enumerable: true,\n  get: function () {\n    return _index.switchCase;\n  }\n});\nObject.defineProperty(exports, \"SwitchStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.switchStatement;\n  }\n});\nObject.defineProperty(exports, \"SymbolTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.symbolTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TSAnyKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsAnyKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSArrayType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsArrayType;\n  }\n});\nObject.defineProperty(exports, \"TSAsExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsAsExpression;\n  }\n});\nObject.defineProperty(exports, \"TSBigIntKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsBigIntKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSBooleanKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsBooleanKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSCallSignatureDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsCallSignatureDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSConditionalType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConditionalType;\n  }\n});\nObject.defineProperty(exports, \"TSConstructSignatureDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConstructSignatureDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSConstructorType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConstructorType;\n  }\n});\nObject.defineProperty(exports, \"TSDeclareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsDeclareFunction;\n  }\n});\nObject.defineProperty(exports, \"TSDeclareMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsDeclareMethod;\n  }\n});\nObject.defineProperty(exports, \"TSEnumDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsEnumDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSEnumMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsEnumMember;\n  }\n});\nObject.defineProperty(exports, \"TSExportAssignment\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExportAssignment;\n  }\n});\nObject.defineProperty(exports, \"TSExpressionWithTypeArguments\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExpressionWithTypeArguments;\n  }\n});\nObject.defineProperty(exports, \"TSExternalModuleReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExternalModuleReference;\n  }\n});\nObject.defineProperty(exports, \"TSFunctionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsFunctionType;\n  }\n});\nObject.defineProperty(exports, \"TSImportEqualsDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsImportEqualsDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSImportType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsImportType;\n  }\n});\nObject.defineProperty(exports, \"TSIndexSignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIndexSignature;\n  }\n});\nObject.defineProperty(exports, \"TSIndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIndexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"TSInferType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInferType;\n  }\n});\nObject.defineProperty(exports, \"TSInstantiationExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInstantiationExpression;\n  }\n});\nObject.defineProperty(exports, \"TSInterfaceBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInterfaceBody;\n  }\n});\nObject.defineProperty(exports, \"TSInterfaceDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInterfaceDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSIntersectionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIntersectionType;\n  }\n});\nObject.defineProperty(exports, \"TSIntrinsicKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIntrinsicKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSLiteralType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsLiteralType;\n  }\n});\nObject.defineProperty(exports, \"TSMappedType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsMappedType;\n  }\n});\nObject.defineProperty(exports, \"TSMethodSignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsMethodSignature;\n  }\n});\nObject.defineProperty(exports, \"TSModuleBlock\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsModuleBlock;\n  }\n});\nObject.defineProperty(exports, \"TSModuleDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsModuleDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSNamedTupleMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNamedTupleMember;\n  }\n});\nObject.defineProperty(exports, \"TSNamespaceExportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNamespaceExportDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSNeverKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNeverKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSNonNullExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNonNullExpression;\n  }\n});\nObject.defineProperty(exports, \"TSNullKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNullKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSNumberKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNumberKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSObjectKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsObjectKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSOptionalType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsOptionalType;\n  }\n});\nObject.defineProperty(exports, \"TSParameterProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsParameterProperty;\n  }\n});\nObject.defineProperty(exports, \"TSParenthesizedType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsParenthesizedType;\n  }\n});\nObject.defineProperty(exports, \"TSPropertySignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsPropertySignature;\n  }\n});\nObject.defineProperty(exports, \"TSQualifiedName\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsQualifiedName;\n  }\n});\nObject.defineProperty(exports, \"TSRestType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsRestType;\n  }\n});\nObject.defineProperty(exports, \"TSStringKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsStringKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSSymbolKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsSymbolKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSThisType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsThisType;\n  }\n});\nObject.defineProperty(exports, \"TSTupleType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTupleType;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAliasDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAliasDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAssertion\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAssertion;\n  }\n});\nObject.defineProperty(exports, \"TSTypeLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeLiteral;\n  }\n});\nObject.defineProperty(exports, \"TSTypeOperator\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeOperator;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameter\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameter;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameterDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameterDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameterInstantiation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameterInstantiation;\n  }\n});\nObject.defineProperty(exports, \"TSTypePredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypePredicate;\n  }\n});\nObject.defineProperty(exports, \"TSTypeQuery\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeQuery;\n  }\n});\nObject.defineProperty(exports, \"TSTypeReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeReference;\n  }\n});\nObject.defineProperty(exports, \"TSUndefinedKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUndefinedKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUnionType;\n  }\n});\nObject.defineProperty(exports, \"TSUnknownKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUnknownKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSVoidKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsVoidKeyword;\n  }\n});\nObject.defineProperty(exports, \"TaggedTemplateExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.taggedTemplateExpression;\n  }\n});\nObject.defineProperty(exports, \"TemplateElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.templateElement;\n  }\n});\nObject.defineProperty(exports, \"TemplateLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.templateLiteral;\n  }\n});\nObject.defineProperty(exports, \"ThisExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.thisExpression;\n  }\n});\nObject.defineProperty(exports, \"ThisTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.thisTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ThrowStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.throwStatement;\n  }\n});\nObject.defineProperty(exports, \"TopicReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.topicReference;\n  }\n});\nObject.defineProperty(exports, \"TryStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.tryStatement;\n  }\n});\nObject.defineProperty(exports, \"TupleExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tupleExpression;\n  }\n});\nObject.defineProperty(exports, \"TupleTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tupleTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TypeAlias\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeAlias;\n  }\n});\nObject.defineProperty(exports, \"TypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TypeCastExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeCastExpression;\n  }\n});\nObject.defineProperty(exports, \"TypeParameter\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameter;\n  }\n});\nObject.defineProperty(exports, \"TypeParameterDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameterDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TypeParameterInstantiation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameterInstantiation;\n  }\n});\nObject.defineProperty(exports, \"TypeofTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeofTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"UnaryExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.unaryExpression;\n  }\n});\nObject.defineProperty(exports, \"UnionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.unionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"UpdateExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.updateExpression;\n  }\n});\nObject.defineProperty(exports, \"V8IntrinsicIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.v8IntrinsicIdentifier;\n  }\n});\nObject.defineProperty(exports, \"VariableDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.variableDeclaration;\n  }\n});\nObject.defineProperty(exports, \"VariableDeclarator\", {\n  enumerable: true,\n  get: function () {\n    return _index.variableDeclarator;\n  }\n});\nObject.defineProperty(exports, \"Variance\", {\n  enumerable: true,\n  get: function () {\n    return _index.variance;\n  }\n});\nObject.defineProperty(exports, \"VoidTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.voidTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"WhileStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.whileStatement;\n  }\n});\nObject.defineProperty(exports, \"WithStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.withStatement;\n  }\n});\nObject.defineProperty(exports, \"YieldExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.yieldExpression;\n  }\n});\n\nvar _index = require(\"./index\");", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneNode;\n\nvar _definitions = require(\"../definitions\");\n\nvar _generated = require(\"../validators/generated\");\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nfunction cloneIfNode(obj, deep, withoutLoc, commentsCache) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(obj, deep, withoutLoc, commentsCache) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\nfunction cloneNode(node, deep = true, withoutLoc = false) {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal(node, deep = true, withoutLoc = false, commentsCache) {\n  if (!node) return node;\n  const {\n    type\n  } = node;\n  const newNode = {\n    type: node.type\n  };\n\n  if ((0, _generated.isIdentifier)(node)) {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep ? cloneIfNodeOrArray(node.typeAnnotation, true, withoutLoc, commentsCache) : node.typeAnnotation;\n    }\n  } else if (!has(_definitions.NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(_definitions.NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        if (deep) {\n          newNode[field] = (0, _generated.isFile)(node) && field === \"comments\" ? maybeCloneComments(node.comments, deep, withoutLoc, commentsCache) : cloneIfNodeOrArray(node[field], true, withoutLoc, commentsCache);\n        } else {\n          newNode[field] = node[field];\n        }\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(node.leadingComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(node.innerComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(node.trailingComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"extra\")) {\n    newNode.extra = Object.assign({}, node.extra);\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments(comments, deep, withoutLoc, commentsCache) {\n  if (!comments || !deep) {\n    return comments;\n  }\n\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n    const {\n      type,\n      value,\n      loc\n    } = comment;\n    const ret = {\n      type,\n      value,\n      loc\n    };\n\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n    return ret;\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clone;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction clone(node) {\n  return (0, _cloneNode.default)(node, false);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneDeep;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneDeep(node) {\n  return (0, _cloneNode.default)(node);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneDeepWithoutLoc;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneDeepWithoutLoc(node) {\n  return (0, _cloneNode.default)(node, true, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneWithoutLoc;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneWithoutLoc(node) {\n  return (0, _cloneNode.default)(node, false, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addComments;\n\nfunction addComments(node, type, comments) {\n  if (!comments || !node) return node;\n  const key = `${type}Comments`;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addComment;\n\nvar _addComments = require(\"./addComments\");\n\nfunction addComment(node, type, content, line) {\n  return (0, _addComments.default)(node, type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inherit;\n\nfunction inherit(key, child, parent) {\n  if (child && parent) {\n    child[key] = Array.from(new Set([].concat(child[key], parent[key]).filter(Boolean)));\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritInnerComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritInnerComments(child, parent) {\n  (0, _inherit.default)(\"innerComments\", child, parent);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritLeadingComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritLeadingComments(child, parent) {\n  (0, _inherit.default)(\"leadingComments\", child, parent);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritTrailingComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritTrailingComments(child, parent) {\n  (0, _inherit.default)(\"trailingComments\", child, parent);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritsComments;\n\nvar _inheritTrailingComments = require(\"./inheritTrailingComments\");\n\nvar _inheritLeadingComments = require(\"./inheritLeadingComments\");\n\nvar _inheritInnerComments = require(\"./inheritInnerComments\");\n\nfunction inheritsComments(child, parent) {\n  (0, _inheritTrailingComments.default)(child, parent);\n  (0, _inheritLeadingComments.default)(child, parent);\n  (0, _inheritInnerComments.default)(child, parent);\n  return child;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeComments;\n\nvar _constants = require(\"../constants\");\n\nfunction removeComments(node) {\n  _constants.COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WHILE_TYPES = exports.USERWHITESPACABLE_TYPES = exports.UNARYLIKE_TYPES = exports.TYPESCRIPT_TYPES = exports.TSTYPE_TYPES = exports.TSTYPEELEMENT_TYPES = exports.TSENTITYNAME_TYPES = exports.TSBASETYPE_TYPES = exports.TERMINATORLESS_TYPES = exports.STATEMENT_TYPES = exports.STANDARDIZED_TYPES = exports.SCOPABLE_TYPES = exports.PUREISH_TYPES = exports.PROPERTY_TYPES = exports.PRIVATE_TYPES = exports.PATTERN_TYPES = exports.PATTERNLIKE_TYPES = exports.OBJECTMEMBER_TYPES = exports.MODULESPECIFIER_TYPES = exports.MODULEDECLARATION_TYPES = exports.MISCELLANEOUS_TYPES = exports.METHOD_TYPES = exports.LVAL_TYPES = exports.LOOP_TYPES = exports.LITERAL_TYPES = exports.JSX_TYPES = exports.IMMUTABLE_TYPES = exports.FUNCTION_TYPES = exports.FUNCTIONPARENT_TYPES = exports.FOR_TYPES = exports.FORXSTATEMENT_TYPES = exports.FLOW_TYPES = exports.FLOWTYPE_TYPES = exports.FLOWPREDICATE_TYPES = exports.FLOWDECLARATION_TYPES = exports.FLOWBASEANNOTATION_TYPES = exports.EXPRESSION_TYPES = exports.EXPRESSIONWRAPPER_TYPES = exports.EXPORTDECLARATION_TYPES = exports.ENUMMEMBER_TYPES = exports.ENUMBODY_TYPES = exports.DECLARATION_TYPES = exports.CONDITIONAL_TYPES = exports.COMPLETIONSTATEMENT_TYPES = exports.CLASS_TYPES = exports.BLOCK_TYPES = exports.BLOCKPARENT_TYPES = exports.BINARY_TYPES = exports.ACCESSOR_TYPES = void 0;\n\nvar _definitions = require(\"../../definitions\");\n\nconst STANDARDIZED_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexports.STANDARDIZED_TYPES = STANDARDIZED_TYPES;\nconst EXPRESSION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Expression\"];\nexports.EXPRESSION_TYPES = EXPRESSION_TYPES;\nconst BINARY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Binary\"];\nexports.BINARY_TYPES = BINARY_TYPES;\nconst SCOPABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexports.SCOPABLE_TYPES = SCOPABLE_TYPES;\nconst BLOCKPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexports.BLOCKPARENT_TYPES = BLOCKPARENT_TYPES;\nconst BLOCK_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Block\"];\nexports.BLOCK_TYPES = BLOCK_TYPES;\nconst STATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Statement\"];\nexports.STATEMENT_TYPES = STATEMENT_TYPES;\nconst TERMINATORLESS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexports.TERMINATORLESS_TYPES = TERMINATORLESS_TYPES;\nconst COMPLETIONSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexports.COMPLETIONSTATEMENT_TYPES = COMPLETIONSTATEMENT_TYPES;\nconst CONDITIONAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexports.CONDITIONAL_TYPES = CONDITIONAL_TYPES;\nconst LOOP_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Loop\"];\nexports.LOOP_TYPES = LOOP_TYPES;\nconst WHILE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"While\"];\nexports.WHILE_TYPES = WHILE_TYPES;\nconst EXPRESSIONWRAPPER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexports.EXPRESSIONWRAPPER_TYPES = EXPRESSIONWRAPPER_TYPES;\nconst FOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"For\"];\nexports.FOR_TYPES = FOR_TYPES;\nconst FORXSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexports.FORXSTATEMENT_TYPES = FORXSTATEMENT_TYPES;\nconst FUNCTION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Function\"];\nexports.FUNCTION_TYPES = FUNCTION_TYPES;\nconst FUNCTIONPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexports.FUNCTIONPARENT_TYPES = FUNCTIONPARENT_TYPES;\nconst PUREISH_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexports.PUREISH_TYPES = PUREISH_TYPES;\nconst DECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexports.DECLARATION_TYPES = DECLARATION_TYPES;\nconst PATTERNLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexports.PATTERNLIKE_TYPES = PATTERNLIKE_TYPES;\nconst LVAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"LVal\"];\nexports.LVAL_TYPES = LVAL_TYPES;\nconst TSENTITYNAME_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexports.TSENTITYNAME_TYPES = TSENTITYNAME_TYPES;\nconst LITERAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Literal\"];\nexports.LITERAL_TYPES = LITERAL_TYPES;\nconst IMMUTABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexports.IMMUTABLE_TYPES = IMMUTABLE_TYPES;\nconst USERWHITESPACABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexports.USERWHITESPACABLE_TYPES = USERWHITESPACABLE_TYPES;\nconst METHOD_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Method\"];\nexports.METHOD_TYPES = METHOD_TYPES;\nconst OBJECTMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexports.OBJECTMEMBER_TYPES = OBJECTMEMBER_TYPES;\nconst PROPERTY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Property\"];\nexports.PROPERTY_TYPES = PROPERTY_TYPES;\nconst UNARYLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexports.UNARYLIKE_TYPES = UNARYLIKE_TYPES;\nconst PATTERN_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexports.PATTERN_TYPES = PATTERN_TYPES;\nconst CLASS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Class\"];\nexports.CLASS_TYPES = CLASS_TYPES;\nconst MODULEDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ModuleDeclaration\"];\nexports.MODULEDECLARATION_TYPES = MODULEDECLARATION_TYPES;\nconst EXPORTDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexports.EXPORTDECLARATION_TYPES = EXPORTDECLARATION_TYPES;\nconst MODULESPECIFIER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexports.MODULESPECIFIER_TYPES = MODULESPECIFIER_TYPES;\nconst ACCESSOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexports.ACCESSOR_TYPES = ACCESSOR_TYPES;\nconst PRIVATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Private\"];\nexports.PRIVATE_TYPES = PRIVATE_TYPES;\nconst FLOW_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Flow\"];\nexports.FLOW_TYPES = FLOW_TYPES;\nconst FLOWTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexports.FLOWTYPE_TYPES = FLOWTYPE_TYPES;\nconst FLOWBASEANNOTATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexports.FLOWBASEANNOTATION_TYPES = FLOWBASEANNOTATION_TYPES;\nconst FLOWDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexports.FLOWDECLARATION_TYPES = FLOWDECLARATION_TYPES;\nconst FLOWPREDICATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexports.FLOWPREDICATE_TYPES = FLOWPREDICATE_TYPES;\nconst ENUMBODY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexports.ENUMBODY_TYPES = ENUMBODY_TYPES;\nconst ENUMMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexports.ENUMMEMBER_TYPES = ENUMMEMBER_TYPES;\nconst JSX_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"JSX\"];\nexports.JSX_TYPES = JSX_TYPES;\nconst MISCELLANEOUS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexports.MISCELLANEOUS_TYPES = MISCELLANEOUS_TYPES;\nconst TYPESCRIPT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexports.TYPESCRIPT_TYPES = TYPESCRIPT_TYPES;\nconst TSTYPEELEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexports.TSTYPEELEMENT_TYPES = TSTYPEELEMENT_TYPES;\nconst TSTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSType\"];\nexports.TSTYPE_TYPES = TSTYPE_TYPES;\nconst TSBASETYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\nexports.TSBASETYPE_TYPES = TSBASETYPE_TYPES;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBlock;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nfunction toBlock(node, parent) {\n  if ((0, _generated.isBlockStatement)(node)) {\n    return node;\n  }\n\n  let blockNodes = [];\n\n  if ((0, _generated.isEmptyStatement)(node)) {\n    blockNodes = [];\n  } else {\n    if (!(0, _generated.isStatement)(node)) {\n      if ((0, _generated.isFunction)(parent)) {\n        node = (0, _generated2.returnStatement)(node);\n      } else {\n        node = (0, _generated2.expressionStatement)(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return (0, _generated2.blockStatement)(blockNodes);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ensureBlock;\n\nvar _toBlock = require(\"./toBlock\");\n\nfunction ensureBlock(node, key = \"body\") {\n  const result = (0, _toBlock.default)(node[key], node);\n  node[key] = result;\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  let name = \"\";\n\n  for (const c of input) {\n    name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier.default)(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBindingIdentifierName;\n\nvar _toIdentifier = require(\"./toIdentifier\");\n\nfunction toBindingIdentifierName(name) {\n  name = (0, _toIdentifier.default)(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toComputedKey;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nfunction toComputedKey(node, key = node.key || node.property) {\n  if (!node.computed && (0, _generated.isIdentifier)(key)) key = (0, _generated2.stringLiteral)(key.name);\n  return key;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _default = toExpression;\nexports.default = _default;\n\nfunction toExpression(node) {\n  if ((0, _generated.isExpressionStatement)(node)) {\n    node = node.expression;\n  }\n\n  if ((0, _generated.isExpression)(node)) {\n    return node;\n  }\n\n  if ((0, _generated.isClass)(node)) {\n    node.type = \"ClassExpression\";\n  } else if ((0, _generated.isFunction)(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!(0, _generated.isExpression)(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverseFast;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverseFast(node, enter, opts) {\n  if (!node) return;\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  opts = opts || {};\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeProperties;\n\nvar _constants = require(\"../constants\");\n\nconst CLEAR_KEYS = [\"tokens\", \"start\", \"end\", \"loc\", \"raw\", \"rawValue\"];\nconst CLEAR_KEYS_PLUS_COMMENTS = [..._constants.COMMENT_KEYS, \"comments\", ...CLEAR_KEYS];\n\nfunction removeProperties(node, opts = {}) {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n\n  for (const key of map) {\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols = Object.getOwnPropertySymbols(node);\n\n  for (const sym of symbols) {\n    node[sym] = null;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removePropertiesDeep;\n\nvar _traverseFast = require(\"../traverse/traverseFast\");\n\nvar _removeProperties = require(\"./removeProperties\");\n\nfunction removePropertiesDeep(tree, opts) {\n  (0, _traverseFast.default)(tree, _removeProperties.default, opts);\n  return tree;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toKeyAlias;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nvar _removePropertiesDeep = require(\"../modifications/removePropertiesDeep\");\n\nfunction toKeyAlias(node, key = node.key) {\n  let alias;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if ((0, _generated.isIdentifier)(key)) {\n    alias = key.name;\n  } else if ((0, _generated.isStringLiteral)(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify((0, _removePropertiesDeep.default)((0, _cloneNode.default)(key)));\n  }\n\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getBindingIdentifiers;\n\nvar _generated = require(\"../validators/generated\");\n\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\n  const search = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    const keys = getBindingIdentifiers.keys[id.type];\n\n    if ((0, _generated.isIdentifier)(id)) {\n      if (duplicates) {\n        const _ids = ids[id.name] = ids[id.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isExportDeclaration)(id) && !(0, _generated.isExportAllDeclaration)(id)) {\n      if ((0, _generated.isDeclaration)(id.declaration)) {\n        search.push(id.declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if ((0, _generated.isFunctionDeclaration)(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if ((0, _generated.isFunctionExpression)(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes = id[key];\n\n        if (nodes) {\n          Array.isArray(nodes) ? search.push(...nodes) : search.push(nodes);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n  ObjectProperty: [\"value\"],\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"]\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    if (!(0, _generated.isEmptyStatement)(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if ((0, _generated.isExpression)(node)) {\n      exprs.push(node);\n    } else if ((0, _generated.isExpressionStatement)(node)) {\n      exprs.push(node.expression);\n    } else if ((0, _generated.isVariableDeclaration)(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (const declar of node.declarations) {\n        const bindings = (0, _getBindingIdentifiers.default)(declar);\n\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: (0, _cloneNode.default)(bindings[key])\n          });\n        }\n\n        if (declar.init) {\n          exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if ((0, _generated.isIfStatement)(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n    } else if ((0, _generated.isBlockStatement)(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if ((0, _generated.isEmptyStatement)(node)) {\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toSequenceExpression;\n\nvar _gatherSequenceExpressions = require(\"./gatherSequenceExpressions\");\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!(nodes != null && nodes.length)) return;\n  const declars = [];\n  const result = (0, _gatherSequenceExpressions.default)(nodes, scope, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _default = toStatement;\nexports.default = _default;\n\nfunction toStatement(node, ignore) {\n  if ((0, _generated.isStatement)(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if ((0, _generated.isClass)(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if ((0, _generated.isFunction)(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if ((0, _generated.isAssignmentExpression)(node)) {\n    return (0, _generated2.expressionStatement)(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  node.type = newType;\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _generated = require(\"../builders/generated\");\n\nvar _default = valueToNode;\nexports.default = _default;\nconst objectToString = Function.call.bind(Object.prototype.toString);\n\nfunction isRegExp(value) {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null || Object.prototype.toString.call(value) !== \"[object Object]\") {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(value);\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    let result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      let numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if (isPlainObject(value)) {\n    const props = [];\n\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = appendToMemberExpression;\n\nvar _generated = require(\"../builders/generated\");\n\nfunction appendToMemberExpression(member, append, computed = false) {\n  member.object = (0, _generated.memberExpression)(member.object, member.property, member.computed);\n  member.property = append;\n  member.computed = !!computed;\n  return member;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inherits;\n\nvar _constants = require(\"../constants\");\n\nvar _inheritsComments = require(\"../comments/inheritsComments\");\n\nfunction inherits(child, parent) {\n  if (!child || !parent) return child;\n\n  for (const key of _constants.INHERIT_KEYS.optional) {\n    if (child[key] == null) {\n      child[key] = parent[key];\n    }\n  }\n\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      child[key] = parent[key];\n    }\n  }\n\n  for (const key of _constants.INHERIT_KEYS.force) {\n    child[key] = parent[key];\n  }\n\n  (0, _inheritsComments.default)(child, parent);\n  return child;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prependToMemberExpression;\n\nvar _generated = require(\"../builders/generated\");\n\nfunction prependToMemberExpression(member, prepend) {\n  member.object = (0, _generated.memberExpression)(prepend, member.object);\n  return member;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getBindingIdentifiers = require(\"./getBindingIdentifiers\");\n\nvar _default = getOuterBindingIdentifiers;\nexports.default = _default;\n\nfunction getOuterBindingIdentifiers(node, duplicates) {\n  return (0, _getBindingIdentifiers.default)(node, duplicates, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverse(node, handlers, state) {\n  if (typeof handlers === \"function\") {\n    handlers = {\n      enter: handlers\n    };\n  }\n\n  const {\n    enter,\n    exit\n  } = handlers;\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl(node, enter, exit, state, ancestors) {\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n        ancestors.push({\n          node,\n          key,\n          index: i\n        });\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key\n      });\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBinding;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nfunction isBinding(node, parent, grandparent) {\n  if (grandparent && node.type === \"Identifier\" && parent.type === \"ObjectProperty\" && grandparent.type === \"ObjectExpression\") {\n    return false;\n  }\n\n  const keys = _getBindingIdentifiers.default.keys[parent.type];\n\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val = parent[key];\n\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLet;\n\nvar _generated = require(\"./generated\");\n\nvar _constants = require(\"../constants\");\n\nfunction isLet(node) {\n  return (0, _generated.isVariableDeclaration)(node) && (node.kind !== \"var\" || node[_constants.BLOCK_SCOPED_SYMBOL]);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBlockScoped;\n\nvar _generated = require(\"./generated\");\n\nvar _isLet = require(\"./isLet\");\n\nfunction isBlockScoped(node) {\n  return (0, _generated.isFunctionDeclaration)(node) || (0, _generated.isClassDeclaration)(node) || (0, _isLet.default)(node);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isImmutable;\n\nvar _isType = require(\"./isType\");\n\nvar _generated = require(\"./generated\");\n\nfunction isImmutable(node) {\n  if ((0, _isType.default)(node.type, \"Immutable\")) return true;\n\n  if ((0, _generated.isIdentifier)(node)) {\n    if (node.name === \"undefined\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNodesEquivalent;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNodesEquivalent(a, b) {\n  if (typeof a !== \"object\" || typeof b !== \"object\" || a == null || b == null) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = _definitions.VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a = a[field];\n    const val_b = b[field];\n\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !(visitorKeys != null && visitorKeys.includes(field))) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isReferenced;\n\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    case \"PrivateName\":\n      return false;\n\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return false;\n\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    case \"LabeledStatement\":\n      return false;\n\n    case \"CatchClause\":\n      return false;\n\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    case \"ExportSpecifier\":\n      if (grandparent != null && grandparent.source) {\n        return false;\n      }\n\n      return parent.local === node;\n\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    case \"ImportAttribute\":\n      return false;\n\n    case \"JSXAttribute\":\n      return false;\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    case \"MetaProperty\":\n      return false;\n\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isScope;\n\nvar _generated = require(\"./generated\");\n\nfunction isScope(node, parent) {\n  if ((0, _generated.isBlockStatement)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return false;\n  }\n\n  if ((0, _generated.isPattern)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return true;\n  }\n\n  return (0, _generated.isScopable)(node);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSpecifierDefault;\n\nvar _generated = require(\"./generated\");\n\nfunction isSpecifierDefault(specifier) {\n  return (0, _generated.isImportDefaultSpecifier)(specifier) || (0, _generated.isIdentifier)(specifier.imported || specifier.exported, {\n    name: \"default\"\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidES3Identifier;\n\nvar _isValidIdentifier = require(\"./isValidIdentifier\");\n\nconst RESERVED_WORDS_ES3_ONLY = new Set([\"abstract\", \"boolean\", \"byte\", \"char\", \"double\", \"enum\", \"final\", \"float\", \"goto\", \"implements\", \"int\", \"interface\", \"long\", \"native\", \"package\", \"private\", \"protected\", \"public\", \"short\", \"static\", \"synchronized\", \"throws\", \"transient\", \"volatile\"]);\n\nfunction isValidES3Identifier(name) {\n  return (0, _isValidIdentifier.default)(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVar;\n\nvar _generated = require(\"./generated\");\n\nvar _constants = require(\"../constants\");\n\nfunction isVar(node) {\n  return (0, _generated.isVariableDeclaration)(node, {\n    kind: \"var\"\n  }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\n}", "", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  react: true,\n  assertNode: true,\n  createTypeAnnotationBasedOnTypeof: true,\n  createUnionTypeAnnotation: true,\n  createFlowUnionType: true,\n  createTSUnionType: true,\n  cloneNode: true,\n  clone: true,\n  cloneDeep: true,\n  cloneDeepWithoutLoc: true,\n  cloneWithoutLoc: true,\n  addComment: true,\n  addComments: true,\n  inheritInnerComments: true,\n  inheritLeadingComments: true,\n  inheritsComments: true,\n  inheritTrailingComments: true,\n  removeComments: true,\n  ensureBlock: true,\n  toBindingIdentifierName: true,\n  toBlock: true,\n  toComputedKey: true,\n  toExpression: true,\n  toIdentifier: true,\n  toKeyAlias: true,\n  toSequenceExpression: true,\n  toStatement: true,\n  valueToNode: true,\n  appendToMemberExpression: true,\n  inherits: true,\n  prependToMemberExpression: true,\n  removeProperties: true,\n  removePropertiesDeep: true,\n  removeTypeDuplicates: true,\n  getBindingIdentifiers: true,\n  getOuterBindingIdentifiers: true,\n  traverse: true,\n  traverseFast: true,\n  shallowEqual: true,\n  is: true,\n  isBinding: true,\n  isBlockScoped: true,\n  isImmutable: true,\n  isLet: true,\n  isNode: true,\n  isNodesEquivalent: true,\n  isPlaceholderType: true,\n  isReferenced: true,\n  isScope: true,\n  isSpecifierDefault: true,\n  isType: true,\n  isValidES3Identifier: true,\n  isValidIdentifier: true,\n  isVar: true,\n  matchesPattern: true,\n  validate: true,\n  buildMatchMemberExpression: true\n};\nObject.defineProperty(exports, \"addComment\", {\n  enumerable: true,\n  get: function () {\n    return _addComment.default;\n  }\n});\nObject.defineProperty(exports, \"addComments\", {\n  enumerable: true,\n  get: function () {\n    return _addComments.default;\n  }\n});\nObject.defineProperty(exports, \"appendToMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _appendToMemberExpression.default;\n  }\n});\nObject.defineProperty(exports, \"assertNode\", {\n  enumerable: true,\n  get: function () {\n    return _assertNode.default;\n  }\n});\nObject.defineProperty(exports, \"buildMatchMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _buildMatchMemberExpression.default;\n  }\n});\nObject.defineProperty(exports, \"clone\", {\n  enumerable: true,\n  get: function () {\n    return _clone.default;\n  }\n});\nObject.defineProperty(exports, \"cloneDeep\", {\n  enumerable: true,\n  get: function () {\n    return _cloneDeep.default;\n  }\n});\nObject.defineProperty(exports, \"cloneDeepWithoutLoc\", {\n  enumerable: true,\n  get: function () {\n    return _cloneDeepWithoutLoc.default;\n  }\n});\nObject.defineProperty(exports, \"cloneNode\", {\n  enumerable: true,\n  get: function () {\n    return _cloneNode.default;\n  }\n});\nObject.defineProperty(exports, \"cloneWithoutLoc\", {\n  enumerable: true,\n  get: function () {\n    return _cloneWithoutLoc.default;\n  }\n});\nObject.defineProperty(exports, \"createFlowUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _createFlowUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"createTSUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _createTSUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"createTypeAnnotationBasedOnTypeof\", {\n  enumerable: true,\n  get: function () {\n    return _createTypeAnnotationBasedOnTypeof.default;\n  }\n});\nObject.defineProperty(exports, \"createUnionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _createFlowUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"ensureBlock\", {\n  enumerable: true,\n  get: function () {\n    return _ensureBlock.default;\n  }\n});\nObject.defineProperty(exports, \"getBindingIdentifiers\", {\n  enumerable: true,\n  get: function () {\n    return _getBindingIdentifiers.default;\n  }\n});\nObject.defineProperty(exports, \"getOuterBindingIdentifiers\", {\n  enumerable: true,\n  get: function () {\n    return _getOuterBindingIdentifiers.default;\n  }\n});\nObject.defineProperty(exports, \"inheritInnerComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritInnerComments.default;\n  }\n});\nObject.defineProperty(exports, \"inheritLeadingComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritLeadingComments.default;\n  }\n});\nObject.defineProperty(exports, \"inheritTrailingComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritTrailingComments.default;\n  }\n});\nObject.defineProperty(exports, \"inherits\", {\n  enumerable: true,\n  get: function () {\n    return _inherits.default;\n  }\n});\nObject.defineProperty(exports, \"inheritsComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritsComments.default;\n  }\n});\nObject.defineProperty(exports, \"is\", {\n  enumerable: true,\n  get: function () {\n    return _is.default;\n  }\n});\nObject.defineProperty(exports, \"isBinding\", {\n  enumerable: true,\n  get: function () {\n    return _isBinding.default;\n  }\n});\nObject.defineProperty(exports, \"isBlockScoped\", {\n  enumerable: true,\n  get: function () {\n    return _isBlockScoped.default;\n  }\n});\nObject.defineProperty(exports, \"isImmutable\", {\n  enumerable: true,\n  get: function () {\n    return _isImmutable.default;\n  }\n});\nObject.defineProperty(exports, \"isLet\", {\n  enumerable: true,\n  get: function () {\n    return _isLet.default;\n  }\n});\nObject.defineProperty(exports, \"isNode\", {\n  enumerable: true,\n  get: function () {\n    return _isNode.default;\n  }\n});\nObject.defineProperty(exports, \"isNodesEquivalent\", {\n  enumerable: true,\n  get: function () {\n    return _isNodesEquivalent.default;\n  }\n});\nObject.defineProperty(exports, \"isPlaceholderType\", {\n  enumerable: true,\n  get: function () {\n    return _isPlaceholderType.default;\n  }\n});\nObject.defineProperty(exports, \"isReferenced\", {\n  enumerable: true,\n  get: function () {\n    return _isReferenced.default;\n  }\n});\nObject.defineProperty(exports, \"isScope\", {\n  enumerable: true,\n  get: function () {\n    return _isScope.default;\n  }\n});\nObject.defineProperty(exports, \"isSpecifierDefault\", {\n  enumerable: true,\n  get: function () {\n    return _isSpecifierDefault.default;\n  }\n});\nObject.defineProperty(exports, \"isType\", {\n  enumerable: true,\n  get: function () {\n    return _isType.default;\n  }\n});\nObject.defineProperty(exports, \"isValidES3Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _isValidES3Identifier.default;\n  }\n});\nObject.defineProperty(exports, \"isValidIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _isValidIdentifier.default;\n  }\n});\nObject.defineProperty(exports, \"isVar\", {\n  enumerable: true,\n  get: function () {\n    return _isVar.default;\n  }\n});\nObject.defineProperty(exports, \"matchesPattern\", {\n  enumerable: true,\n  get: function () {\n    return _matchesPattern.default;\n  }\n});\nObject.defineProperty(exports, \"prependToMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _prependToMemberExpression.default;\n  }\n});\nexports.react = void 0;\nObject.defineProperty(exports, \"removeComments\", {\n  enumerable: true,\n  get: function () {\n    return _removeComments.default;\n  }\n});\nObject.defineProperty(exports, \"removeProperties\", {\n  enumerable: true,\n  get: function () {\n    return _removeProperties.default;\n  }\n});\nObject.defineProperty(exports, \"removePropertiesDeep\", {\n  enumerable: true,\n  get: function () {\n    return _removePropertiesDeep.default;\n  }\n});\nObject.defineProperty(exports, \"removeTypeDuplicates\", {\n  enumerable: true,\n  get: function () {\n    return _removeTypeDuplicates.default;\n  }\n});\nObject.defineProperty(exports, \"shallowEqual\", {\n  enumerable: true,\n  get: function () {\n    return _shallowEqual.default;\n  }\n});\nObject.defineProperty(exports, \"toBindingIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _toBindingIdentifierName.default;\n  }\n});\nObject.defineProperty(exports, \"toBlock\", {\n  enumerable: true,\n  get: function () {\n    return _toBlock.default;\n  }\n});\nObject.defineProperty(exports, \"toComputedKey\", {\n  enumerable: true,\n  get: function () {\n    return _toComputedKey.default;\n  }\n});\nObject.defineProperty(exports, \"toExpression\", {\n  enumerable: true,\n  get: function () {\n    return _toExpression.default;\n  }\n});\nObject.defineProperty(exports, \"toIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _toIdentifier.default;\n  }\n});\nObject.defineProperty(exports, \"toKeyAlias\", {\n  enumerable: true,\n  get: function () {\n    return _toKeyAlias.default;\n  }\n});\nObject.defineProperty(exports, \"toSequenceExpression\", {\n  enumerable: true,\n  get: function () {\n    return _toSequenceExpression.default;\n  }\n});\nObject.defineProperty(exports, \"toStatement\", {\n  enumerable: true,\n  get: function () {\n    return _toStatement.default;\n  }\n});\nObject.defineProperty(exports, \"traverse\", {\n  enumerable: true,\n  get: function () {\n    return _traverse.default;\n  }\n});\nObject.defineProperty(exports, \"traverseFast\", {\n  enumerable: true,\n  get: function () {\n    return _traverseFast.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"valueToNode\", {\n  enumerable: true,\n  get: function () {\n    return _valueToNode.default;\n  }\n});\n\nvar _isReactComponent = require(\"./validators/react/isReactComponent\");\n\nvar _isCompatTag = require(\"./validators/react/isCompatTag\");\n\nvar _buildChildren = require(\"./builders/react/buildChildren\");\n\nvar _assertNode = require(\"./asserts/assertNode\");\n\nvar _generated = require(\"./asserts/generated\");\n\nObject.keys(_generated).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated[key];\n    }\n  });\n});\n\nvar _createTypeAnnotationBasedOnTypeof = require(\"./builders/flow/createTypeAnnotationBasedOnTypeof\");\n\nvar _createFlowUnionType = require(\"./builders/flow/createFlowUnionType\");\n\nvar _createTSUnionType = require(\"./builders/typescript/createTSUnionType\");\n\nvar _generated2 = require(\"./builders/generated\");\n\nObject.keys(_generated2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated2[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated2[key];\n    }\n  });\n});\n\nvar _uppercase = require(\"./builders/generated/uppercase\");\n\nObject.keys(_uppercase).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _uppercase[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _uppercase[key];\n    }\n  });\n});\n\nvar _cloneNode = require(\"./clone/cloneNode\");\n\nvar _clone = require(\"./clone/clone\");\n\nvar _cloneDeep = require(\"./clone/cloneDeep\");\n\nvar _cloneDeepWithoutLoc = require(\"./clone/cloneDeepWithoutLoc\");\n\nvar _cloneWithoutLoc = require(\"./clone/cloneWithoutLoc\");\n\nvar _addComment = require(\"./comments/addComment\");\n\nvar _addComments = require(\"./comments/addComments\");\n\nvar _inheritInnerComments = require(\"./comments/inheritInnerComments\");\n\nvar _inheritLeadingComments = require(\"./comments/inheritLeadingComments\");\n\nvar _inheritsComments = require(\"./comments/inheritsComments\");\n\nvar _inheritTrailingComments = require(\"./comments/inheritTrailingComments\");\n\nvar _removeComments = require(\"./comments/removeComments\");\n\nvar _generated3 = require(\"./constants/generated\");\n\nObject.keys(_generated3).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated3[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated3[key];\n    }\n  });\n});\n\nvar _constants = require(\"./constants\");\n\nObject.keys(_constants).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _constants[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _constants[key];\n    }\n  });\n});\n\nvar _ensureBlock = require(\"./converters/ensureBlock\");\n\nvar _toBindingIdentifierName = require(\"./converters/toBindingIdentifierName\");\n\nvar _toBlock = require(\"./converters/toBlock\");\n\nvar _toComputedKey = require(\"./converters/toComputedKey\");\n\nvar _toExpression = require(\"./converters/toExpression\");\n\nvar _toIdentifier = require(\"./converters/toIdentifier\");\n\nvar _toKeyAlias = require(\"./converters/toKeyAlias\");\n\nvar _toSequenceExpression = require(\"./converters/toSequenceExpression\");\n\nvar _toStatement = require(\"./converters/toStatement\");\n\nvar _valueToNode = require(\"./converters/valueToNode\");\n\nvar _definitions = require(\"./definitions\");\n\nObject.keys(_definitions).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _definitions[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _definitions[key];\n    }\n  });\n});\n\nvar _appendToMemberExpression = require(\"./modifications/appendToMemberExpression\");\n\nvar _inherits = require(\"./modifications/inherits\");\n\nvar _prependToMemberExpression = require(\"./modifications/prependToMemberExpression\");\n\nvar _removeProperties = require(\"./modifications/removeProperties\");\n\nvar _removePropertiesDeep = require(\"./modifications/removePropertiesDeep\");\n\nvar _removeTypeDuplicates = require(\"./modifications/flow/removeTypeDuplicates\");\n\nvar _getBindingIdentifiers = require(\"./retrievers/getBindingIdentifiers\");\n\nvar _getOuterBindingIdentifiers = require(\"./retrievers/getOuterBindingIdentifiers\");\n\nvar _traverse = require(\"./traverse/traverse\");\n\nObject.keys(_traverse).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _traverse[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _traverse[key];\n    }\n  });\n});\n\nvar _traverseFast = require(\"./traverse/traverseFast\");\n\nvar _shallowEqual = require(\"./utils/shallowEqual\");\n\nvar _is = require(\"./validators/is\");\n\nvar _isBinding = require(\"./validators/isBinding\");\n\nvar _isBlockScoped = require(\"./validators/isBlockScoped\");\n\nvar _isImmutable = require(\"./validators/isImmutable\");\n\nvar _isLet = require(\"./validators/isLet\");\n\nvar _isNode = require(\"./validators/isNode\");\n\nvar _isNodesEquivalent = require(\"./validators/isNodesEquivalent\");\n\nvar _isPlaceholderType = require(\"./validators/isPlaceholderType\");\n\nvar _isReferenced = require(\"./validators/isReferenced\");\n\nvar _isScope = require(\"./validators/isScope\");\n\nvar _isSpecifierDefault = require(\"./validators/isSpecifierDefault\");\n\nvar _isType = require(\"./validators/isType\");\n\nvar _isValidES3Identifier = require(\"./validators/isValidES3Identifier\");\n\nvar _isValidIdentifier = require(\"./validators/isValidIdentifier\");\n\nvar _isVar = require(\"./validators/isVar\");\n\nvar _matchesPattern = require(\"./validators/matchesPattern\");\n\nvar _validate = require(\"./validators/validate\");\n\nvar _buildMatchMemberExpression = require(\"./validators/buildMatchMemberExpression\");\n\nvar _generated4 = require(\"./validators/generated\");\n\nObject.keys(_generated4).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated4[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated4[key];\n    }\n  });\n});\n\nvar _generated5 = require(\"./ast-types/generated\");\n\nObject.keys(_generated5).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated5[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated5[key];\n    }\n  });\n});\nconst react = {\n  isReactComponent: _isReactComponent.default,\n  isCompatTag: _isCompatTag.default,\n  buildChildren: _buildChildren.default\n};\nexports.react = react;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isModule;\n\nfunction isModule(path) {\n  const {\n    sourceType\n  } = path.node;\n\n  if (sourceType !== \"module\" && sourceType !== \"script\") {\n    throw path.buildCodeFrameError(`Unknown sourceType \"${sourceType}\", cannot transform.`);\n  }\n\n  return path.node.sourceType === \"module\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _importBuilder = require(\"./import-builder\");\n\nvar _isModule = require(\"./is-module\");\n\nconst {\n  numericLiteral,\n  sequenceExpression\n} = _t;\n\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), void 0);\n  }\n\n  _applyDefaults(importedSource, opts, isInit = false) {\n    let newOpts;\n\n    if (typeof importedSource === \"string\") {\n      newOpts = Object.assign({}, this._defaultOpts, {\n        importedSource\n      }, opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n\n      newOpts = Object.assign({}, this._defaultOpts, importedSource);\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n\n    return newOpts;\n  }\n\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      builder.import();\n\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const {\n      statements,\n      resultName\n    } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n\n    return resultName;\n  }\n\n  _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n}\n\nexports.default = ImportInjector;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ImportInjector\", {\n  enumerable: true,\n  get: function () {\n    return _importInjector.default;\n  }\n});\nexports.addDefault = addDefault;\nexports.addNamed = addNamed;\nexports.addNamespace = addNamespace;\nexports.addSideEffect = addSideEffect;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _isModule.default;\n  }\n});\n\nvar _importInjector = require(\"./import-injector\");\n\nvar _isModule = require(\"./is-module\");\n\nfunction addDefault(path, importedSource, opts) {\n  return new _importInjector.default(path).addDefault(importedSource, opts);\n}\n\nfunction addNamed(path, name, importedSource, opts) {\n  return new _importInjector.default(path).addNamed(name, importedSource, opts);\n}\n\nfunction addNamespace(path, importedSource, opts) {\n  return new _importInjector.default(path).addNamespace(importedSource, opts);\n}\n\nfunction addSideEffect(path, importedSource, opts) {\n  return new _importInjector.default(path).addSideEffect(importedSource, opts);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Var = exports.User = exports.Statement = exports.SpreadProperty = exports.Scope = exports.RestProperty = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = exports.Referenced = exports.Pure = exports.NumericLiteralTypeAnnotation = exports.Generated = exports.ForAwaitStatement = exports.Flow = exports.Expression = exports.ExistentialTypeParam = exports.BlockScoped = exports.BindingIdentifier = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isBinding,\n  isBlockScoped,\n  isExportDeclaration,\n  isExpression,\n  isFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isReferenced,\n  isScope,\n  isStatement,\n  isVar,\n  isVariableDeclaration,\n  react\n} = _t;\nconst {\n  isCompatTag\n} = react;\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n      if (isJSXIdentifier(node, opts)) {\n        if (isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return isMemberExpression(node) && isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return isIdentifier(node) && isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (isStatement(node)) {\n      if (isVariableDeclaration(node)) {\n        if (isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, constantsOnly) {\n    return path.scope.isPure(path.node, constantsOnly);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (isFlow(node)) {\n      return true;\n    } else if (isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.merge = merge;\nexports.verify = verify;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = splitExportDeclaration;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  cloneNode,\n  exportNamedDeclaration,\n  exportSpecifier,\n  identifier,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction splitExportDeclaration(exportDeclaration) {\n  if (!exportDeclaration.isExportDeclaration() || exportDeclaration.isExportAllDeclaration()) {\n    throw new Error(\"Only default and named export declarations can be split.\");\n  }\n\n  if (exportDeclaration.isExportDefaultDeclaration()) {\n    const declaration = exportDeclaration.get(\"declaration\");\n    const standaloneDeclaration = declaration.isFunctionDeclaration() || declaration.isClassDeclaration();\n    const scope = declaration.isScope() ? declaration.scope.parent : declaration.scope;\n    let id = declaration.node.id;\n    let needBindingRegistration = false;\n\n    if (!id) {\n      needBindingRegistration = true;\n      id = scope.generateUidIdentifier(\"default\");\n\n      if (standaloneDeclaration || declaration.isFunctionExpression() || declaration.isClassExpression()) {\n        declaration.node.id = cloneNode(id);\n      }\n    }\n\n    const updatedDeclaration = standaloneDeclaration ? declaration.node : variableDeclaration(\"var\", [variableDeclarator(cloneNode(id), declaration.node)]);\n    const updatedExportDeclaration = exportNamedDeclaration(null, [exportSpecifier(cloneNode(id), identifier(\"default\"))]);\n    exportDeclaration.insertAfter(updatedExportDeclaration);\n    exportDeclaration.replaceWith(updatedDeclaration);\n\n    if (needBindingRegistration) {\n      scope.registerDeclaration(exportDeclaration);\n    }\n\n    return exportDeclaration;\n  } else if (exportDeclaration.get(\"specifiers\").length > 0) {\n    throw new Error(\"It doesn't make sense to split exported specifiers.\");\n  }\n\n  const declaration = exportDeclaration.get(\"declaration\");\n  const bindingIdentifiers = declaration.getOuterBindingIdentifiers();\n  const specifiers = Object.keys(bindingIdentifiers).map(name => {\n    return exportSpecifier(identifier(name), identifier(name));\n  });\n  const aliasDeclar = exportNamedDeclaration(null, specifiers);\n  exportDeclaration.insertAfter(aliasDeclar);\n  exportDeclaration.replaceWith(declaration.node);\n  return exportDeclaration;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.requeueComputedKeyAndDecorators = requeueComputedKeyAndDecorators;\nexports.skipAllButComputedKey = skipAllButComputedKey;\n\nfunction skipAllButComputedKey(path) {\n  path.skip();\n\n  if (path.node.computed) {\n    path.context.maybeQueue(path.get(\"key\"));\n  }\n}\n\nfunction requeueComputedKeyAndDecorators(path) {\n  const {\n    context,\n    node\n  } = path;\n\n  if (node.computed) {\n    context.maybeQueue(path.get(\"key\"));\n  }\n\n  if (node.decorators) {\n    for (const decorator of path.get(\"decorators\")) {\n      context.maybeQueue(decorator);\n    }\n  }\n}\n\nconst visitor = {\n  FunctionParent(path) {\n    if (path.isArrowFunctionExpression()) {\n      return;\n    } else {\n      path.skip();\n\n      if (path.isMethod()) {\n        requeueComputedKeyAndDecorators(path);\n      }\n    }\n  },\n\n  Property(path) {\n    if (path.isObjectProperty()) {\n      return;\n    }\n\n    path.skip();\n    requeueComputedKeyAndDecorators(path);\n  }\n\n};\nvar _default = visitor;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n\n      if (path.isMethod()) {\n        (0, _helperEnvironmentVisitor.requeueComputedKeyAndDecorators)(path);\n      }\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration()) {\n      const {\n        declaration\n      } = maybeExportDeclar.node;\n\n      if (t.isDeclaration(declaration) && !declaration.id) {\n        return;\n      }\n    }\n\n    if (maybeExportDeclar.isExportAllDeclaration()) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return path;\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return path;\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(path);\n      this.maybeConvertFromClassFunctionExpression(path);\n    }\n  }\n\n}\n\nexports.default = Renamer;", "'use strict';\nmodule.exports = require('./globals.json');\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar _t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  callExpression,\n  cloneNode,\n  getBindingIdentifiers,\n  identifier,\n  isArrayExpression,\n  isBinary,\n  isClass,\n  isClassBody,\n  isClassDeclaration,\n  isExportAllDeclaration,\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n  isFunctionDeclaration,\n  isIdentifier,\n  isImportDeclaration,\n  isLiteral,\n  isMethod,\n  isModuleDeclaration,\n  isModuleSpecifier,\n  isNullLiteral,\n  isObjectExpression,\n  isProperty,\n  isPureish,\n  isRegExpLiteral,\n  isSuper,\n  isTaggedTemplateExpression,\n  isTemplateLiteral,\n  isThisExpression,\n  isUnaryExpression,\n  isVariableDeclaration,\n  matchesPattern,\n  memberExpression,\n  numericLiteral,\n  toIdentifier,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator,\n  isRecordExpression,\n  isTupleExpression,\n  isObjectProperty,\n  isTopicReference,\n  isMetaProperty,\n  isPrivateName\n} = _t;\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (isModuleDeclaration(node)) {\n        if ((isExportAllDeclaration(node) || isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((isExportDefaultDeclaration(node) || isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (isLiteral(node) && !isNullLiteral(node) && !isRegExpLiteral(node) && !isTemplateLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      gatherNodeParts(node.name, parts);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  ForStatement(path) {\n    const declar = path.get(\"init\");\n\n    if (declar.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", declar);\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    } else if (left.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", left);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (isClassDeclaration(declar) || isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        binding == null ? void 0 : binding.reference(path);\n      } else if (isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            binding == null ? void 0 : binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const shouldSkip = path.key === \"key\" || path.listKey === \"decorators\";\n      path = path.parentPath;\n      if (shouldSkip && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (isThisExpression(node) || isSuper(node) || isTopicReference(node)) {\n      return true;\n    }\n\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && kind === \"const\";\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (isArrayExpression(node)) {\n      return node;\n    }\n\n    if (isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return callExpression(memberExpression(memberExpression(memberExpression(identifier(\"Array\"), identifier(\"prototype\")), identifier(\"slice\")), identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      if (path.node.declare) return;\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return unaryExpression(\"void\", numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (isThisExpression(node) || isMetaProperty(node) || isTopicReference(node) || isPrivateName(node)) {\n      return true;\n    } else if (isClass(node)) {\n      var _node$decorators;\n\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      if (((_node$decorators = node.decorators) == null ? void 0 : _node$decorators.length) > 0) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (isArrayExpression(node) || isTupleExpression(node)) {\n      for (const elem of node.elements) {\n        if (elem !== null && !this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isObjectExpression(node) || isRecordExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isMethod(node)) {\n      var _node$decorators2;\n\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n\n      if (((_node$decorators2 = node.decorators) == null ? void 0 : _node$decorators2.length) > 0) {\n        return false;\n      }\n\n      return true;\n    } else if (isProperty(node)) {\n      var _node$decorators3;\n\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n\n      if (((_node$decorators3 = node.decorators) == null ? void 0 : _node$decorators3.length) > 0) {\n        return false;\n      }\n\n      if (isObjectProperty(node) || node.static) {\n        if (node.value !== null && !this.isPure(node.value, constantsOnly)) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (isTaggedTemplateExpression(node)) {\n      return matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (path.isPattern()) {\n      path = this.getPatternParent().path;\n    } else if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = variableDeclarator(opts.id, opts.init);\n    const len = declarPath.node.declarations.push(declarator);\n    path.scope.registerBinding(kind, declarPath.get(\"declarations\")[len - 1]);\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getPatternParent() {\n    let scope = this;\n\n    do {\n      if (!scope.path.isPattern()) {\n        return scope.getBlockParent();\n      }\n    } while (scope = scope.parent.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\" && binding.kind !== \"local\") {} else {\n          return binding;\n        }\n      } else if (!binding && name === \"arguments\" && scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n        break;\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];", "/**\n * Gets the index associated with `key` in the backing array, if it is already present.\n */\nexport let get: (strarr: SetArray, key: string) => number | undefined;\n\n/**\n * Puts `key` into the backing array, if it is not already present. Returns\n * the index of the `key` in the backing array.\n */\nexport let put: (strarr: SetArray, key: string) => number;\n\n/**\n * Pops the last added item out of the SetArray.\n */\nexport let pop: (strarr: SetArray) => void;\n\n/**\n * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n * index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of the backing array,\n * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n * and there are never duplicates.\n */\nexport class SetArray {\n  private declare _indexes: { [key: string]: number | undefined };\n  declare array: readonly string[];\n\n  constructor() {\n    this._indexes = { __proto__: null } as any;\n    this.array = [];\n  }\n\n  static {\n    get = (strarr, key) => strarr._indexes[key];\n\n    put = (strarr, key) => {\n      // The key may or may not be present. If it is present, it's a number.\n      const index = get(strarr, key);\n      if (index !== undefined) return index;\n\n      const { array, _indexes: indexes } = strarr;\n\n      return (indexes[key] = (array as string[]).push(key) - 1);\n    };\n\n    pop = (strarr) => {\n      const { array, _indexes: indexes } = strarr;\n      if (array.length === 0) return;\n\n      const last = (array as string[]).pop()!;\n      indexes[last] = undefined;\n    };\n  }\n}\n", null, "// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nenum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n", null, null, null, null, null, null, null, null, "type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n", "import { SetArray, put } from '@jridgewell/set-array';\nimport { encode } from '@jridgewell/sourcemap-codec';\nimport { TraceMap, decodedMappings } from '@jridgewell/trace-mapping';\n\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type { SourceMapInput } from '@jridgewell/trace-mapping';\nimport type { SourceMapSegment } from './sourcemap-segment';\nimport type { DecodedSourceMap, EncodedSourceMap, Pos, Mapping } from './types';\n\nexport type { DecodedSourceMap, EncodedSourceMap, Mapping };\n\nexport type Options = {\n  file?: string | null;\n  sourceRoot?: string | null;\n};\n\nconst NO_NAME = -1;\n\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nexport let addSegment: {\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source?: null,\n    sourceLine?: null,\n    sourceColumn?: null,\n    name?: null,\n    content?: null,\n  ): void;\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source: string,\n    sourceLine: number,\n    sourceColumn: number,\n    name?: null,\n    content?: string | null,\n  ): void;\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source: string,\n    sourceLine: number,\n    sourceColumn: number,\n    name: string,\n    content?: string | null,\n  ): void;\n};\n\n/**\n * A high-level API to associate a generated position with an original source position. Line is\n * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\n */\nexport let addMapping: {\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source?: null;\n      original?: null;\n      name?: null;\n      content?: null;\n    },\n  ): void;\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source: string;\n      original: Pos;\n      name?: null;\n      content?: string | null;\n    },\n  ): void;\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source: string;\n      original: Pos;\n      name: string;\n      content?: string | null;\n    },\n  ): void;\n};\n\n/**\n * Same as `addSegment`, but will only add the segment if it generates useful information in the\n * resulting map. This only works correctly if segments are added **in order**, meaning you should\n * not add a segment with a lower generated line/column than one that came before.\n */\nexport let maybeAddSegment: typeof addSegment;\n\n/**\n * Same as `addMapping`, but will only add the mapping if it generates useful information in the\n * resulting map. This only works correctly if mappings are added **in order**, meaning you should\n * not add a mapping with a lower generated line/column than one that came before.\n */\nexport let maybeAddMapping: typeof addMapping;\n\n/**\n * Adds/removes the content of the source file to the source map.\n */\nexport let setSourceContent: (map: GenMapping, source: string, content: string | null) => void;\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let toDecodedMap: (map: GenMapping) => DecodedSourceMap;\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let toEncodedMap: (map: GenMapping) => EncodedSourceMap;\n\n/**\n * Constructs a new GenMapping, using the already present mappings of the input.\n */\nexport let fromMap: (input: SourceMapInput) => GenMapping;\n\n/**\n * Returns an array of high-level mapping objects for every recorded segment, which could then be\n * passed to the `source-map` library.\n */\nexport let allMappings: (map: GenMapping) => Mapping[];\n\n// This split declaration is only so that terser can elminiate the static initialization block.\nlet addSegmentInternal: <S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: S,\n  sourceLine: S extends string ? number : null | undefined,\n  sourceColumn: S extends string ? number : null | undefined,\n  name: S extends string ? string | null | undefined : null | undefined,\n  content: S extends string ? string | null | undefined : null | undefined,\n) => void;\n\n/**\n * Provides the state to generate a sourcemap.\n */\nexport class GenMapping {\n  private _names = new SetArray();\n  private _sources = new SetArray();\n  private _sourcesContent: (string | null)[] = [];\n  private _mappings: SourceMapSegment[][] = [];\n  declare file: string | null | undefined;\n  declare sourceRoot: string | null | undefined;\n\n  constructor({ file, sourceRoot }: Options = {}) {\n    this.file = file;\n    this.sourceRoot = sourceRoot;\n  }\n\n  static {\n    addSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {\n      return addSegmentInternal(\n        false,\n        map,\n        genLine,\n        genColumn,\n        source,\n        sourceLine,\n        sourceColumn,\n        name,\n        content,\n      );\n    };\n\n    maybeAddSegment = (\n      map,\n      genLine,\n      genColumn,\n      source,\n      sourceLine,\n      sourceColumn,\n      name,\n      content,\n    ) => {\n      return addSegmentInternal(\n        true,\n        map,\n        genLine,\n        genColumn,\n        source,\n        sourceLine,\n        sourceColumn,\n        name,\n        content,\n      );\n    };\n\n    addMapping = (map, mapping) => {\n      return addMappingInternal(false, map, mapping as Parameters<typeof addMappingInternal>[2]);\n    };\n\n    maybeAddMapping = (map, mapping) => {\n      return addMappingInternal(true, map, mapping as Parameters<typeof addMappingInternal>[2]);\n    };\n\n    setSourceContent = (map, source, content) => {\n      const { _sources: sources, _sourcesContent: sourcesContent } = map;\n      sourcesContent[put(sources, source)] = content;\n    };\n\n    toDecodedMap = (map) => {\n      const {\n        file,\n        sourceRoot,\n        _mappings: mappings,\n        _sources: sources,\n        _sourcesContent: sourcesContent,\n        _names: names,\n      } = map;\n      removeEmptyFinalLines(mappings);\n\n      return {\n        version: 3,\n        file: file || undefined,\n        names: names.array,\n        sourceRoot: sourceRoot || undefined,\n        sources: sources.array,\n        sourcesContent,\n        mappings,\n      };\n    };\n\n    toEncodedMap = (map) => {\n      const decoded = toDecodedMap(map);\n      return {\n        ...decoded,\n        mappings: encode(decoded.mappings as SourceMapSegment[][]),\n      };\n    };\n\n    allMappings = (map) => {\n      const out: Mapping[] = [];\n      const { _mappings: mappings, _sources: sources, _names: names } = map;\n\n      for (let i = 0; i < mappings.length; i++) {\n        const line = mappings[i];\n        for (let j = 0; j < line.length; j++) {\n          const seg = line[j];\n\n          const generated = { line: i + 1, column: seg[COLUMN] };\n          let source: string | undefined = undefined;\n          let original: Pos | undefined = undefined;\n          let name: string | undefined = undefined;\n\n          if (seg.length !== 1) {\n            source = sources.array[seg[SOURCES_INDEX]];\n            original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\n\n            if (seg.length === 5) name = names.array[seg[NAMES_INDEX]];\n          }\n\n          out.push({ generated, source, original, name } as Mapping);\n        }\n      }\n\n      return out;\n    };\n\n    fromMap = (input) => {\n      const map = new TraceMap(input);\n      const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\n\n      putAll(gen._names, map.names);\n      putAll(gen._sources, map.sources as string[]);\n      gen._sourcesContent = map.sourcesContent || map.sources.map(() => null);\n      gen._mappings = decodedMappings(map) as GenMapping['_mappings'];\n\n      return gen;\n    };\n\n    // Internal helpers\n    addSegmentInternal = (\n      skipable,\n      map,\n      genLine,\n      genColumn,\n      source,\n      sourceLine,\n      sourceColumn,\n      name,\n      content,\n    ) => {\n      const {\n        _mappings: mappings,\n        _sources: sources,\n        _sourcesContent: sourcesContent,\n        _names: names,\n      } = map;\n      const line = getLine(mappings, genLine);\n      const index = getColumnIndex(line, genColumn);\n\n      if (!source) {\n        if (skipable && skipSourceless(line, index)) return;\n        return insert(line, index, [genColumn]);\n      }\n\n      // Sigh, TypeScript can't figure out sourceLine and sourceColumn aren't nullish if source\n      // isn't nullish.\n      assert<number>(sourceLine);\n      assert<number>(sourceColumn);\n\n      const sourcesIndex = put(sources, source);\n      const namesIndex = name ? put(names, name) : NO_NAME;\n      if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = content ?? null;\n\n      if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\n        return;\n      }\n\n      return insert(\n        line,\n        index,\n        name\n          ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\n          : [genColumn, sourcesIndex, sourceLine, sourceColumn],\n      );\n    };\n  }\n}\n\nfunction assert<T>(_val: unknown): asserts _val is T {\n  // noop.\n}\n\nfunction getLine(mappings: SourceMapSegment[][], index: number): SourceMapSegment[] {\n  for (let i = mappings.length; i <= index; i++) {\n    mappings[i] = [];\n  }\n  return mappings[index];\n}\n\nfunction getColumnIndex(line: SourceMapSegment[], genColumn: number): number {\n  let index = line.length;\n  for (let i = index - 1; i >= 0; index = i--) {\n    const current = line[i];\n    if (genColumn >= current[COLUMN]) break;\n  }\n  return index;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\nfunction removeEmptyFinalLines(mappings: SourceMapSegment[][]) {\n  const { length } = mappings;\n  let len = length;\n  for (let i = len - 1; i >= 0; len = i, i--) {\n    if (mappings[i].length > 0) break;\n  }\n  if (len < length) mappings.length = len;\n}\n\nfunction putAll(strarr: SetArray, array: string[]) {\n  for (let i = 0; i < array.length; i++) put(strarr, array[i]);\n}\n\nfunction skipSourceless(line: SourceMapSegment[], index: number): boolean {\n  // The start of a line is already sourceless, so adding a sourceless segment to the beginning\n  // doesn't generate any useful information.\n  if (index === 0) return true;\n\n  const prev = line[index - 1];\n  // If the previous segment is also sourceless, then adding another sourceless segment doesn't\n  // genrate any new information. Else, this segment will end the source/named segment and point to\n  // a sourceless position, which is useful.\n  return prev.length === 1;\n}\n\nfunction skipSource(\n  line: SourceMapSegment[],\n  index: number,\n  sourcesIndex: number,\n  sourceLine: number,\n  sourceColumn: number,\n  namesIndex: number,\n): boolean {\n  // A source/named segment at the start of a line gives position at that genColumn\n  if (index === 0) return false;\n\n  const prev = line[index - 1];\n\n  // If the previous segment is sourceless, then we're transitioning to a source.\n  if (prev.length === 1) return false;\n\n  // If the previous segment maps to the exact same source position, then this segment doesn't\n  // provide any new position information.\n  return (\n    sourcesIndex === prev[SOURCES_INDEX] &&\n    sourceLine === prev[SOURCE_LINE] &&\n    sourceColumn === prev[SOURCE_COLUMN] &&\n    namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME)\n  );\n}\n\nfunction addMappingInternal<S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: S;\n    original: S extends string ? Pos : null | undefined;\n    name: S extends string ? string | null | undefined : null | undefined;\n    content: S extends string ? string | null | undefined : null | undefined;\n  },\n) {\n  const { generated, source, original, name, content } = mapping;\n  if (!source) {\n    return addSegmentInternal(\n      skipable,\n      map,\n      generated.line - 1,\n      generated.column,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n  }\n  const s: string = source;\n  assert<Pos>(original);\n  return addSegmentInternal(\n    skipable,\n    map,\n    generated.line - 1,\n    generated.column,\n    s,\n    original.line - 1,\n    original.column,\n    name,\n    content,\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _genMapping = require(\"@jridgewell/gen-mapping\");\n\nclass SourceMap {\n  constructor(opts, code) {\n    var _opts$sourceFileName;\n\n    this._map = void 0;\n    this._rawMappings = void 0;\n    this._sourceFileName = void 0;\n    this._lastGenLine = 0;\n    this._lastSourceLine = 0;\n    this._lastSourceColumn = 0;\n    const map = this._map = new _genMapping.GenMapping({\n      sourceRoot: opts.sourceRoot\n    });\n    this._sourceFileName = (_opts$sourceFileName = opts.sourceFileName) == null ? void 0 : _opts$sourceFileName.replace(/\\\\/g, \"/\");\n    this._rawMappings = undefined;\n\n    if (typeof code === \"string\") {\n      (0, _genMapping.setSourceContent)(map, this._sourceFileName, code);\n    } else if (typeof code === \"object\") {\n      Object.keys(code).forEach(sourceFileName => {\n        (0, _genMapping.setSourceContent)(map, sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n      });\n    }\n  }\n\n  get() {\n    return (0, _genMapping.toEncodedMap)(this._map);\n  }\n\n  getDecoded() {\n    return (0, _genMapping.toDecodedMap)(this._map);\n  }\n\n  getRawMappings() {\n    return this._rawMappings || (this._rawMappings = (0, _genMapping.allMappings)(this._map));\n  }\n\n  mark(generated, line, column, identifierName, filename) {\n    this._rawMappings = undefined;\n    (0, _genMapping.maybeAddMapping)(this._map, {\n      name: identifierName,\n      generated,\n      source: line == null ? undefined : (filename == null ? void 0 : filename.replace(/\\\\/g, \"/\")) || this._sourceFileName,\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction SourcePos() {\n  return {\n    identifierName: undefined,\n    line: undefined,\n    column: undefined,\n    filename: undefined\n  };\n}\n\nconst SPACES_RE = /^[ \\t]+$/;\n\nclass Buffer {\n  constructor(map) {\n    this._map = null;\n    this._buf = \"\";\n    this._last = 0;\n    this._queue = [];\n    this._position = {\n      line: 1,\n      column: 0\n    };\n    this._sourcePosition = SourcePos();\n    this._disallowedPop = null;\n    this._map = map;\n  }\n\n  get() {\n    this._flush();\n\n    const map = this._map;\n    const result = {\n      code: this._buf.trimRight(),\n      decodedMap: map == null ? void 0 : map.getDecoded(),\n\n      get map() {\n        const resultMap = map ? map.get() : null;\n        result.map = resultMap;\n        return resultMap;\n      },\n\n      set map(value) {\n        Object.defineProperty(result, \"map\", {\n          value,\n          writable: true\n        });\n      },\n\n      get rawMappings() {\n        const mappings = map == null ? void 0 : map.getRawMappings();\n        result.rawMappings = mappings;\n        return mappings;\n      },\n\n      set rawMappings(value) {\n        Object.defineProperty(result, \"rawMappings\", {\n          value,\n          writable: true\n        });\n      }\n\n    };\n    return result;\n  }\n\n  append(str) {\n    this._flush();\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName\n    } = this._sourcePosition;\n\n    this._append(str, line, column, identifierName, filename);\n  }\n\n  queue(str) {\n    if (str === \"\\n\") {\n      while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {\n        this._queue.shift();\n      }\n    }\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName\n    } = this._sourcePosition;\n\n    this._queue.unshift([str, line, column, identifierName, filename]);\n  }\n\n  queueIndentation(str) {\n    this._queue.unshift([str, undefined, undefined, undefined, undefined]);\n  }\n\n  _flush() {\n    let item;\n\n    while (item = this._queue.pop()) {\n      this._append(...item);\n    }\n  }\n\n  _append(str, line, column, identifierName, filename) {\n    this._buf += str;\n    this._last = str.charCodeAt(str.length - 1);\n    let i = str.indexOf(\"\\n\");\n    let last = 0;\n\n    if (i !== 0) {\n      this._mark(line, column, identifierName, filename);\n    }\n\n    while (i !== -1) {\n      this._position.line++;\n      this._position.column = 0;\n      last = i + 1;\n\n      if (last < str.length) {\n        this._mark(++line, 0, identifierName, filename);\n      }\n\n      i = str.indexOf(\"\\n\", last);\n    }\n\n    this._position.column += str.length - last;\n  }\n\n  _mark(line, column, identifierName, filename) {\n    var _this$_map;\n\n    (_this$_map = this._map) == null ? void 0 : _this$_map.mark(this._position, line, column, identifierName, filename);\n  }\n\n  removeTrailingNewline() {\n    if (this._queue.length > 0 && this._queue[0][0] === \"\\n\") {\n      this._queue.shift();\n    }\n  }\n\n  removeLastSemicolon() {\n    if (this._queue.length > 0 && this._queue[0][0] === \";\") {\n      this._queue.shift();\n    }\n  }\n\n  getLastChar() {\n    let last;\n\n    if (this._queue.length > 0) {\n      const str = this._queue[0][0];\n      last = str.charCodeAt(0);\n    } else {\n      last = this._last;\n    }\n\n    return last;\n  }\n\n  endsWithCharAndNewline() {\n    const queue = this._queue;\n\n    if (queue.length > 0) {\n      const last = queue[0][0];\n      const lastCp = last.charCodeAt(0);\n      if (lastCp !== 10) return;\n\n      if (queue.length > 1) {\n        const secondLast = queue[1][0];\n        return secondLast.charCodeAt(0);\n      } else {\n        return this._last;\n      }\n    }\n  }\n\n  hasContent() {\n    return this._queue.length > 0 || !!this._last;\n  }\n\n  exactSource(loc, cb) {\n    this.source(\"start\", loc);\n    cb();\n    this.source(\"end\", loc);\n\n    this._disallowPop(\"start\", loc);\n  }\n\n  source(prop, loc) {\n    if (prop && !loc) return;\n\n    this._normalizePosition(prop, loc, this._sourcePosition);\n  }\n\n  withSource(prop, loc, cb) {\n    if (!this._map) return cb();\n    const originalLine = this._sourcePosition.line;\n    const originalColumn = this._sourcePosition.column;\n    const originalFilename = this._sourcePosition.filename;\n    const originalIdentifierName = this._sourcePosition.identifierName;\n    this.source(prop, loc);\n    cb();\n\n    if (!this._disallowedPop || this._disallowedPop.line !== originalLine || this._disallowedPop.column !== originalColumn || this._disallowedPop.filename !== originalFilename) {\n      this._sourcePosition.line = originalLine;\n      this._sourcePosition.column = originalColumn;\n      this._sourcePosition.filename = originalFilename;\n      this._sourcePosition.identifierName = originalIdentifierName;\n      this._disallowedPop = null;\n    }\n  }\n\n  _disallowPop(prop, loc) {\n    if (prop && !loc) return;\n    this._disallowedPop = this._normalizePosition(prop, loc, SourcePos());\n  }\n\n  _normalizePosition(prop, loc, targetObj) {\n    const pos = loc ? loc[prop] : null;\n    targetObj.identifierName = prop === \"start\" && (loc == null ? void 0 : loc.identifierName) || undefined;\n    targetObj.line = pos == null ? void 0 : pos.line;\n    targetObj.column = pos == null ? void 0 : pos.column;\n    targetObj.filename = loc == null ? void 0 : loc.filename;\n    return targetObj;\n  }\n\n  getCurrentColumn() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    const lastIndex = extra.lastIndexOf(\"\\n\");\n    return lastIndex === -1 ? this._position.column + extra.length : extra.length - 1 - lastIndex;\n  }\n\n  getCurrentLine() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    let count = 0;\n\n    for (let i = 0; i < extra.length; i++) {\n      if (extra[i] === \"\\n\") count++;\n    }\n\n    return this._position.line + count;\n  }\n\n}\n\nexports.default = Buffer;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nodes = exports.list = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  FLIPPED_ALIAS_KEYS,\n  isArrayExpression,\n  isAssignmentExpression,\n  isBinary,\n  isBlockStatement,\n  isCallExpression,\n  isFunction,\n  isIdentifier,\n  isLiteral,\n  isMemberExpression,\n  isObjectExpression,\n  isOptionalCallExpression,\n  isOptionalMemberExpression,\n  isStringLiteral\n} = _t;\n\nfunction crawl(node, state = {}) {\n  if (isMemberExpression(node) || isOptionalMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (isCallExpression(node) || isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (isFunction(node)) {\n    state.hasFunction = true;\n  } else if (isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction isHelper(node) {\n  if (isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    return isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return isLiteral(node) || isObjectExpression(node) || isArrayExpression(node) || isIdentifier(node) || isMemberExpression(node);\n}\n\nconst nodes = {\n  AssignmentExpression(node) {\n    const state = crawl(node.right);\n\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  SwitchCase(node, parent) {\n    return {\n      before: !!node.consequent.length || parent.cases[0] === node,\n      after: !node.consequent.length && parent.cases[parent.cases.length - 1] === node\n    };\n  },\n\n  LogicalExpression(node) {\n    if (isFunction(node.left) || isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  Literal(node) {\n    if (isStringLiteral(node) && node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  CallExpression(node) {\n    if (isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  OptionalCallExpression(node) {\n    if (isFunction(node.callee)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  VariableDeclaration(node) {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n\n      if (!enabled) {\n        const state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  IfStatement(node) {\n    if (isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n\n};\nexports.nodes = nodes;\n\nnodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeCallProperty = function (node, parent) {\n  var _parent$properties;\n\n  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) != null && _parent$properties.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeIndexer = function (node, parent) {\n  var _parent$properties2, _parent$callPropertie;\n\n  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) != null && _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) != null && _parent$callPropertie.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (node, parent) {\n  var _parent$properties3, _parent$callPropertie2, _parent$indexers;\n\n  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) != null && _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) != null && _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) != null && _parent$indexers.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nconst list = {\n  VariableDeclaration(node) {\n    return node.declarations.map(decl => decl.init);\n  },\n\n  ArrayExpression(node) {\n    return node.elements;\n  },\n\n  ObjectExpression(node) {\n    return node.properties;\n  }\n\n};\nexports.list = list;\n[[\"Function\", true], [\"Class\", true], [\"Loop\", true], [\"LabeledStatement\", true], [\"SwitchStatement\", true], [\"TryStatement\", true]].forEach(function ([type, amounts]) {\n  [type].concat(FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    nodes[type] = function () {\n      return {\n        after: amounts,\n        before: amounts\n      };\n    };\n  });\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.ClassExpression = ClassExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.DoExpression = DoExpression;\nexports.FunctionExpression = FunctionExpression;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.Identifier = Identifier;\nexports.LogicalExpression = LogicalExpression;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.ObjectExpression = ObjectExpression;\nexports.OptionalIndexedAccessType = OptionalIndexedAccessType;\nexports.OptionalCallExpression = exports.OptionalMemberExpression = OptionalMemberExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.TSAsExpression = TSAsExpression;\nexports.TSInferType = TSInferType;\nexports.TSInstantiationExpression = TSInstantiationExpression;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSIntersectionType = exports.TSUnionType = TSUnionType;\nexports.UnaryLike = UnaryLike;\nexports.IntersectionTypeAnnotation = exports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.AwaitExpression = exports.YieldExpression = YieldExpression;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isArrayTypeAnnotation,\n  isArrowFunctionExpression,\n  isAssignmentExpression,\n  isAwaitExpression,\n  isBinary,\n  isBinaryExpression,\n  isUpdateExpression,\n  isCallExpression,\n  isClass,\n  isClassExpression,\n  isConditional,\n  isConditionalExpression,\n  isExportDeclaration,\n  isExportDefaultDeclaration,\n  isExpressionStatement,\n  isFor,\n  isForInStatement,\n  isForOfStatement,\n  isForStatement,\n  isFunctionExpression,\n  isIfStatement,\n  isIndexedAccessType,\n  isIntersectionTypeAnnotation,\n  isLogicalExpression,\n  isMemberExpression,\n  isNewExpression,\n  isNullableTypeAnnotation,\n  isObjectPattern,\n  isOptionalCallExpression,\n  isOptionalMemberExpression,\n  isReturnStatement,\n  isSequenceExpression,\n  isSwitchStatement,\n  isTSArrayType,\n  isTSAsExpression,\n  isTSInstantiationExpression,\n  isTSIntersectionType,\n  isTSNonNullExpression,\n  isTSOptionalType,\n  isTSRestType,\n  isTSTypeAssertion,\n  isTSUnionType,\n  isTaggedTemplateExpression,\n  isThrowStatement,\n  isTypeAnnotation,\n  isUnaryLike,\n  isUnionTypeAnnotation,\n  isVariableDeclarator,\n  isWhileStatement,\n  isYieldExpression\n} = _t;\nconst PRECEDENCE = {\n  \"||\": 0,\n  \"??\": 0,\n  \"|>\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nconst isClassExtendsClause = (node, parent) => isClass(parent, {\n  superClass: node\n});\n\nconst hasPostfixPart = (node, parent) => (isMemberExpression(parent) || isOptionalMemberExpression(parent)) && parent.object === node || (isCallExpression(parent) || isOptionalCallExpression(parent) || isNewExpression(parent)) && parent.callee === node || isTaggedTemplateExpression(parent) && parent.tag === node || isTSNonNullExpression(parent);\n\nfunction NullableTypeAnnotation(node, parent) {\n  return isArrayTypeAnnotation(parent);\n}\n\nfunction FunctionTypeAnnotation(node, parent, printStack) {\n  return isUnionTypeAnnotation(parent) || isIntersectionTypeAnnotation(parent) || isArrayTypeAnnotation(parent) || isTypeAnnotation(parent) && isArrowFunctionExpression(printStack[printStack.length - 3]);\n}\n\nfunction UpdateExpression(node, parent) {\n  return hasPostfixPart(node, parent) || isClassExtendsClause(node, parent);\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInContext(printStack, {\n    expressionStatement: true,\n    arrowBody: true\n  });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return !node.async && isFirstInContext(printStack, {\n    expressionStatement: true\n  });\n}\n\nfunction Binary(node, parent) {\n  if (node.operator === \"**\" && isBinaryExpression(parent, {\n    operator: \"**\"\n  })) {\n    return parent.left === node;\n  }\n\n  if (isClassExtendsClause(node, parent)) {\n    return true;\n  }\n\n  if (hasPostfixPart(node, parent) || isUnaryLike(parent) || isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (isBinary(parent)) {\n    const parentOp = parent.operator;\n    const parentPos = PRECEDENCE[parentOp];\n    const nodeOp = node.operator;\n    const nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n}\n\nfunction UnionTypeAnnotation(node, parent) {\n  return isArrayTypeAnnotation(parent) || isNullableTypeAnnotation(parent) || isIntersectionTypeAnnotation(parent) || isUnionTypeAnnotation(parent);\n}\n\nfunction OptionalIndexedAccessType(node, parent) {\n  return isIndexedAccessType(parent, {\n    objectType: node\n  });\n}\n\nfunction TSAsExpression() {\n  return true;\n}\n\nfunction TSTypeAssertion() {\n  return true;\n}\n\nfunction TSUnionType(node, parent) {\n  return isTSArrayType(parent) || isTSOptionalType(parent) || isTSIntersectionType(parent) || isTSUnionType(parent) || isTSRestType(parent);\n}\n\nfunction TSInferType(node, parent) {\n  return isTSArrayType(parent) || isTSOptionalType(parent);\n}\n\nfunction TSInstantiationExpression(node, parent) {\n  return (isCallExpression(parent) || isOptionalCallExpression(parent) || isNewExpression(parent) || isTSInstantiationExpression(parent)) && !!parent.typeParameters;\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (isVariableDeclarator(parent) || isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n  if (isForStatement(parent) || isThrowStatement(parent) || isReturnStatement(parent) || isIfStatement(parent) && parent.test === node || isWhileStatement(parent) && parent.test === node || isForInStatement(parent) && parent.right === node || isSwitchStatement(parent) && parent.discriminant === node || isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return isBinary(parent) || isUnaryLike(parent) || hasPostfixPart(node, parent) || isAwaitExpression(parent) && isYieldExpression(node) || isConditionalExpression(parent) && node === parent.test || isClassExtendsClause(node, parent);\n}\n\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInContext(printStack, {\n    expressionStatement: true,\n    exportDefault: true\n  });\n}\n\nfunction UnaryLike(node, parent) {\n  return hasPostfixPart(node, parent) || isBinaryExpression(parent, {\n    operator: \"**\",\n    left: node\n  }) || isClassExtendsClause(node, parent);\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInContext(printStack, {\n    expressionStatement: true,\n    exportDefault: true\n  });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  return isExportDeclaration(parent) || ConditionalExpression(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (isUnaryLike(parent) || isBinary(parent) || isConditionalExpression(parent, {\n    test: node\n  }) || isAwaitExpression(parent) || isTSTypeAssertion(parent) || isTSAsExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction OptionalMemberExpression(node, parent) {\n  return isCallExpression(parent, {\n    callee: node\n  }) || isMemberExpression(parent, {\n    object: node\n  });\n}\n\nfunction AssignmentExpression(node, parent) {\n  if (isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression(node, parent);\n  }\n}\n\nfunction LogicalExpression(node, parent) {\n  switch (node.operator) {\n    case \"||\":\n      if (!isLogicalExpression(parent)) return false;\n      return parent.operator === \"??\" || parent.operator === \"&&\";\n\n    case \"&&\":\n      return isLogicalExpression(parent, {\n        operator: \"??\"\n      });\n\n    case \"??\":\n      return isLogicalExpression(parent) && parent.operator !== \"??\";\n  }\n}\n\nfunction Identifier(node, parent, printStack) {\n  var _node$extra;\n\n  if ((_node$extra = node.extra) != null && _node$extra.parenthesized && isAssignmentExpression(parent, {\n    left: node\n  }) && (isFunctionExpression(parent.right) || isClassExpression(parent.right)) && parent.right.id == null) {\n    return true;\n  }\n\n  if (node.name === \"let\") {\n    const isFollowedByBracket = isMemberExpression(parent, {\n      object: node,\n      computed: true\n    }) || isOptionalMemberExpression(parent, {\n      object: node,\n      computed: true,\n      optional: false\n    });\n    return isFirstInContext(printStack, {\n      expressionStatement: isFollowedByBracket,\n      forHead: isFollowedByBracket,\n      forInHead: isFollowedByBracket,\n      forOfHead: true\n    });\n  }\n\n  return node.name === \"async\" && isForOfStatement(parent) && node === parent.left;\n}\n\nfunction isFirstInContext(printStack, {\n  expressionStatement = false,\n  arrowBody = false,\n  exportDefault = false,\n  forHead = false,\n  forInHead = false,\n  forOfHead = false\n}) {\n  let i = printStack.length - 1;\n  let node = printStack[i];\n  i--;\n  let parent = printStack[i];\n\n  while (i >= 0) {\n    if (expressionStatement && isExpressionStatement(parent, {\n      expression: node\n    }) || exportDefault && isExportDefaultDeclaration(parent, {\n      declaration: node\n    }) || arrowBody && isArrowFunctionExpression(parent, {\n      body: node\n    }) || forHead && isForStatement(parent, {\n      init: node\n    }) || forInHead && isForInStatement(parent, {\n      left: node\n    }) || forOfHead && isForOfStatement(parent, {\n      left: node\n    })) {\n      return true;\n    }\n\n    if (hasPostfixPart(node, parent) && !isNewExpression(parent) || isSequenceExpression(parent) && parent.expressions[0] === node || isUpdateExpression(parent) && !parent.prefix || isConditional(parent, {\n      test: node\n    }) || isBinary(parent, {\n      left: node\n    }) || isAssignmentExpression(parent, {\n      left: node\n    })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.needsParens = needsParens;\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\n\nvar whitespace = require(\"./whitespace\");\n\nvar parens = require(\"./parentheses\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  FLIPPED_ALIAS_KEYS,\n  isCallExpression,\n  isExpressionStatement,\n  isMemberExpression,\n  isNewExpression\n} = _t;\n\nfunction expandAliases(obj) {\n  const newObj = {};\n\n  function add(type, func) {\n    const fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      const result = fn(node, parent, stack);\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (const type of Object.keys(obj)) {\n    const aliases = FLIPPED_ALIAS_KEYS[type];\n\n    if (aliases) {\n      for (const alias of aliases) {\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nconst expandedParens = expandAliases(parens);\nconst expandedWhitespaceNodes = expandAliases(whitespace.nodes);\nconst expandedWhitespaceList = expandAliases(whitespace.list);\n\nfunction find(obj, node, parent, printStack) {\n  const fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (isCallExpression(node)) {\n    return true;\n  }\n\n  return isMemberExpression(node) && isOrHasCallExpression(node.object);\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return false;\n\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  let linesInfo = find(expandedWhitespaceNodes, node, parent);\n\n  if (!linesInfo) {\n    const items = find(expandedWhitespaceList, node, parent);\n\n    if (items) {\n      for (let i = 0; i < items.length; i++) {\n        linesInfo = needsWhitespace(items[i], node, type);\n        if (linesInfo) break;\n      }\n    }\n  }\n\n  if (typeof linesInfo === \"object\" && linesInfo !== null) {\n    return linesInfo[type] || false;\n  }\n\n  return false;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, \"before\");\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, \"after\");\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\n\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag, node);\n  this.print(node.typeParameters, node);\n  this.print(node.quasi, node);\n}\n\nfunction TemplateElement(node, parent) {\n  const isFirst = parent.quasis[0] === node;\n  const isLast = parent.quasis[parent.quasis.length - 1] === node;\n  const value = (isFirst ? \"`\" : \"}\") + node.value.raw + (isLast ? \"`\" : \"${\");\n  this.token(value);\n}\n\nfunction TemplateLiteral(node) {\n  const quasis = node.quasis;\n\n  for (let i = 0; i < quasis.length; i++) {\n    this.print(quasis[i], node);\n\n    if (i + 1 < quasis.length) {\n      this.print(node.expressions[i], node);\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogicalExpression = exports.BinaryExpression = exports.AssignmentExpression = AssignmentExpression;\nexports.AssignmentPattern = AssignmentPattern;\nexports.AwaitExpression = AwaitExpression;\nexports.BindExpression = BindExpression;\nexports.CallExpression = CallExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.Decorator = Decorator;\nexports.DoExpression = DoExpression;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.Import = Import;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\nexports.ModuleExpression = ModuleExpression;\nexports.NewExpression = NewExpression;\nexports.OptionalCallExpression = OptionalCallExpression;\nexports.OptionalMemberExpression = OptionalMemberExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.PrivateName = PrivateName;\nexports.SequenceExpression = SequenceExpression;\nexports.Super = Super;\nexports.ThisExpression = ThisExpression;\nexports.UnaryExpression = UnaryExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.V8IntrinsicIdentifier = V8IntrinsicIdentifier;\nexports.YieldExpression = YieldExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar n = require(\"../node\");\n\nconst {\n  isCallExpression,\n  isLiteral,\n  isMemberExpression,\n  isNewExpression\n} = _t;\n\nfunction UnaryExpression(node) {\n  if (node.operator === \"void\" || node.operator === \"delete\" || node.operator === \"typeof\" || node.operator === \"throw\") {\n    this.word(node.operator);\n    this.space();\n  } else {\n    this.token(node.operator);\n  }\n\n  this.print(node.argument, node);\n}\n\nfunction DoExpression(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ParenthesizedExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.token(\")\");\n}\n\nfunction UpdateExpression(node) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument, node);\n  } else {\n    this.printTerminatorless(node.argument, node, true);\n    this.token(node.operator);\n  }\n}\n\nfunction ConditionalExpression(node) {\n  this.print(node.test, node);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.consequent, node);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.alternate, node);\n}\n\nfunction NewExpression(node, parent) {\n  this.word(\"new\");\n  this.space();\n  this.print(node.callee, node);\n\n  if (this.format.minified && node.arguments.length === 0 && !node.optional && !isCallExpression(parent, {\n    callee: node\n  }) && !isMemberExpression(parent) && !isNewExpression(parent)) {\n    return;\n  }\n\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction SequenceExpression(node) {\n  this.printList(node.expressions, node);\n}\n\nfunction ThisExpression() {\n  this.word(\"this\");\n}\n\nfunction Super() {\n  this.word(\"super\");\n}\n\nfunction isDecoratorMemberExpression(node) {\n  switch (node.type) {\n    case \"Identifier\":\n      return true;\n\n    case \"MemberExpression\":\n      return !node.computed && node.property.type === \"Identifier\" && isDecoratorMemberExpression(node.object);\n\n    default:\n      return false;\n  }\n}\n\nfunction shouldParenthesizeDecoratorExpression(node) {\n  if (node.type === \"CallExpression\") {\n    node = node.callee;\n  }\n\n  if (node.type === \"ParenthesizedExpression\") {\n    return false;\n  }\n\n  return !isDecoratorMemberExpression(node);\n}\n\nfunction Decorator(node) {\n  this.token(\"@\");\n  const {\n    expression\n  } = node;\n\n  if (shouldParenthesizeDecoratorExpression(expression)) {\n    this.token(\"(\");\n    this.print(expression, node);\n    this.token(\")\");\n  } else {\n    this.print(expression, node);\n  }\n\n  this.newline();\n}\n\nfunction OptionalMemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    if (!node.optional) {\n      this.token(\".\");\n    }\n\n    this.print(node.property, node);\n  }\n}\n\nfunction OptionalCallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction CallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction Import() {\n  this.word(\"import\");\n}\n\nfunction AwaitExpression(node) {\n  this.word(\"await\");\n\n  if (node.argument) {\n    this.space();\n    this.printTerminatorless(node.argument, node, false);\n  }\n}\n\nfunction YieldExpression(node) {\n  this.word(\"yield\");\n\n  if (node.delegate) {\n    this.token(\"*\");\n  }\n\n  if (node.argument) {\n    this.space();\n    this.printTerminatorless(node.argument, node, false);\n  }\n}\n\nfunction EmptyStatement() {\n  this.semicolon(true);\n}\n\nfunction ExpressionStatement(node) {\n  this.print(node.expression, node);\n  this.semicolon();\n}\n\nfunction AssignmentPattern(node) {\n  this.print(node.left, node);\n  if (node.left.optional) this.token(\"?\");\n  this.print(node.left.typeAnnotation, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n}\n\nfunction AssignmentExpression(node, parent) {\n  const parens = this.inForStatementInitCounter && node.operator === \"in\" && !n.needsParens(node, parent);\n\n  if (parens) {\n    this.token(\"(\");\n  }\n\n  this.print(node.left, node);\n  this.space();\n\n  if (node.operator === \"in\" || node.operator === \"instanceof\") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n  }\n\n  this.space();\n  this.print(node.right, node);\n\n  if (parens) {\n    this.token(\")\");\n  }\n}\n\nfunction BindExpression(node) {\n  this.print(node.object, node);\n  this.token(\"::\");\n  this.print(node.callee, node);\n}\n\nfunction MemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    this.token(\".\");\n    this.print(node.property, node);\n  }\n}\n\nfunction MetaProperty(node) {\n  this.print(node.meta, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction PrivateName(node) {\n  this.token(\"#\");\n  this.print(node.id, node);\n}\n\nfunction V8IntrinsicIdentifier(node) {\n  this.token(\"%\");\n  this.word(node.name);\n}\n\nfunction ModuleExpression(node) {\n  this.word(\"module\");\n  this.space();\n  this.token(\"{\");\n\n  if (node.body.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n    this.printSequence(node.body.body, node, {\n      indent: true\n    });\n    this.rightBrace();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BreakStatement = BreakStatement;\nexports.CatchClause = CatchClause;\nexports.ContinueStatement = ContinueStatement;\nexports.DebuggerStatement = DebuggerStatement;\nexports.DoWhileStatement = DoWhileStatement;\nexports.ForOfStatement = exports.ForInStatement = void 0;\nexports.ForStatement = ForStatement;\nexports.IfStatement = IfStatement;\nexports.LabeledStatement = LabeledStatement;\nexports.ReturnStatement = ReturnStatement;\nexports.SwitchCase = SwitchCase;\nexports.SwitchStatement = SwitchStatement;\nexports.ThrowStatement = ThrowStatement;\nexports.TryStatement = TryStatement;\nexports.VariableDeclaration = VariableDeclaration;\nexports.VariableDeclarator = VariableDeclarator;\nexports.WhileStatement = WhileStatement;\nexports.WithStatement = WithStatement;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isFor,\n  isForStatement,\n  isIfStatement,\n  isStatement\n} = _t;\n\nfunction WithStatement(node) {\n  this.word(\"with\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.object, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction IfStatement(node) {\n  this.word(\"if\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.space();\n  const needsBlock = node.alternate && isIfStatement(getLastStatement(node.consequent));\n\n  if (needsBlock) {\n    this.token(\"{\");\n    this.newline();\n    this.indent();\n  }\n\n  this.printAndIndentOnComments(node.consequent, node);\n\n  if (needsBlock) {\n    this.dedent();\n    this.newline();\n    this.token(\"}\");\n  }\n\n  if (node.alternate) {\n    if (this.endsWith(125)) this.space();\n    this.word(\"else\");\n    this.space();\n    this.printAndIndentOnComments(node.alternate, node);\n  }\n}\n\nfunction getLastStatement(statement) {\n  const {\n    body\n  } = statement;\n\n  if (isStatement(body) === false) {\n    return statement;\n  }\n\n  return getLastStatement(body);\n}\n\nfunction ForStatement(node) {\n  this.word(\"for\");\n  this.space();\n  this.token(\"(\");\n  this.inForStatementInitCounter++;\n  this.print(node.init, node);\n  this.inForStatementInitCounter--;\n  this.token(\";\");\n\n  if (node.test) {\n    this.space();\n    this.print(node.test, node);\n  }\n\n  this.token(\";\");\n\n  if (node.update) {\n    this.space();\n    this.print(node.update, node);\n  }\n\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction WhileStatement(node) {\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction ForXStatement(node) {\n  this.word(\"for\");\n  this.space();\n  const isForOf = node.type === \"ForOfStatement\";\n\n  if (isForOf && node.await) {\n    this.word(\"await\");\n    this.space();\n  }\n\n  this.token(\"(\");\n  this.print(node.left, node);\n  this.space();\n  this.word(isForOf ? \"of\" : \"in\");\n  this.space();\n  this.print(node.right, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nconst ForInStatement = ForXStatement;\nexports.ForInStatement = ForInStatement;\nconst ForOfStatement = ForXStatement;\nexports.ForOfStatement = ForOfStatement;\n\nfunction DoWhileStatement(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n  this.space();\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.semicolon();\n}\n\nfunction printStatementAfterKeyword(printer, node, parent, isLabel) {\n  if (node) {\n    printer.space();\n    printer.printTerminatorless(node, parent, isLabel);\n  }\n\n  printer.semicolon();\n}\n\nfunction BreakStatement(node) {\n  this.word(\"break\");\n  printStatementAfterKeyword(this, node.label, node, true);\n}\n\nfunction ContinueStatement(node) {\n  this.word(\"continue\");\n  printStatementAfterKeyword(this, node.label, node, true);\n}\n\nfunction ReturnStatement(node) {\n  this.word(\"return\");\n  printStatementAfterKeyword(this, node.argument, node, false);\n}\n\nfunction ThrowStatement(node) {\n  this.word(\"throw\");\n  printStatementAfterKeyword(this, node.argument, node, false);\n}\n\nfunction LabeledStatement(node) {\n  this.print(node.label, node);\n  this.token(\":\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction TryStatement(node) {\n  this.word(\"try\");\n  this.space();\n  this.print(node.block, node);\n  this.space();\n\n  if (node.handlers) {\n    this.print(node.handlers[0], node);\n  } else {\n    this.print(node.handler, node);\n  }\n\n  if (node.finalizer) {\n    this.space();\n    this.word(\"finally\");\n    this.space();\n    this.print(node.finalizer, node);\n  }\n}\n\nfunction CatchClause(node) {\n  this.word(\"catch\");\n  this.space();\n\n  if (node.param) {\n    this.token(\"(\");\n    this.print(node.param, node);\n    this.print(node.param.typeAnnotation, node);\n    this.token(\")\");\n    this.space();\n  }\n\n  this.print(node.body, node);\n}\n\nfunction SwitchStatement(node) {\n  this.word(\"switch\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.discriminant, node);\n  this.token(\")\");\n  this.space();\n  this.token(\"{\");\n  this.printSequence(node.cases, node, {\n    indent: true,\n\n    addNewlines(leading, cas) {\n      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;\n    }\n\n  });\n  this.token(\"}\");\n}\n\nfunction SwitchCase(node) {\n  if (node.test) {\n    this.word(\"case\");\n    this.space();\n    this.print(node.test, node);\n    this.token(\":\");\n  } else {\n    this.word(\"default\");\n    this.token(\":\");\n  }\n\n  if (node.consequent.length) {\n    this.newline();\n    this.printSequence(node.consequent, node, {\n      indent: true\n    });\n  }\n}\n\nfunction DebuggerStatement() {\n  this.word(\"debugger\");\n  this.semicolon();\n}\n\nfunction variableDeclarationIndent() {\n  this.token(\",\");\n  this.newline();\n\n  if (this.endsWith(10)) {\n    for (let i = 0; i < 4; i++) this.space(true);\n  }\n}\n\nfunction constDeclarationIndent() {\n  this.token(\",\");\n  this.newline();\n\n  if (this.endsWith(10)) {\n    for (let i = 0; i < 6; i++) this.space(true);\n  }\n}\n\nfunction VariableDeclaration(node, parent) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(node.kind);\n  this.space();\n  let hasInits = false;\n\n  if (!isFor(parent)) {\n    for (const declar of node.declarations) {\n      if (declar.init) {\n        hasInits = true;\n      }\n    }\n  }\n\n  let separator;\n\n  if (hasInits) {\n    separator = node.kind === \"const\" ? constDeclarationIndent : variableDeclarationIndent;\n  }\n\n  this.printList(node.declarations, node, {\n    separator\n  });\n\n  if (isFor(parent)) {\n    if (isForStatement(parent)) {\n      if (parent.init === node) return;\n    } else {\n      if (parent.left === node) return;\n    }\n  }\n\n  this.semicolon();\n}\n\nfunction VariableDeclarator(node) {\n  this.print(node.id, node);\n  if (node.definite) this.token(\"!\");\n  this.print(node.id.typeAnnotation, node);\n\n  if (node.init) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.init, node);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClassAccessorProperty = ClassAccessorProperty;\nexports.ClassBody = ClassBody;\nexports.ClassExpression = exports.ClassDeclaration = ClassDeclaration;\nexports.ClassMethod = ClassMethod;\nexports.ClassPrivateMethod = ClassPrivateMethod;\nexports.ClassPrivateProperty = ClassPrivateProperty;\nexports.ClassProperty = ClassProperty;\nexports.StaticBlock = StaticBlock;\nexports._classMethodHead = _classMethodHead;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration\n} = _t;\n\nfunction ClassDeclaration(node, parent) {\n  {\n    if (!this.format.decoratorsBeforeExport || !isExportDefaultDeclaration(parent) && !isExportNamedDeclaration(parent)) {\n      this.printJoin(node.decorators, node);\n    }\n  }\n\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.printInnerComments(node);\n\n  if (node.id) {\n    this.space();\n    this.print(node.id, node);\n  }\n\n  this.print(node.typeParameters, node);\n\n  if (node.superClass) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.superClass, node);\n    this.print(node.superTypeParameters, node);\n  }\n\n  if (node.implements) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ClassBody(node) {\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (node.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n    this.indent();\n    this.printSequence(node.body, node);\n    this.dedent();\n    if (!this.endsWith(10)) this.newline();\n    this.rightBrace();\n  }\n}\n\nfunction ClassProperty(node) {\n  this.printJoin(node.decorators, node);\n  this.source(\"end\", node.key.loc);\n  this.tsPrintClassMemberModifiers(node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    this._variance(node);\n\n    this.print(node.key, node);\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n\n  if (node.definite) {\n    this.token(\"!\");\n  }\n\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassAccessorProperty(node) {\n  this.printJoin(node.decorators, node);\n  this.source(\"end\", node.key.loc);\n  this.tsPrintClassMemberModifiers(node);\n  this.word(\"accessor\");\n  this.printInnerComments(node);\n  this.space();\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    this._variance(node);\n\n    this.print(node.key, node);\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n\n  if (node.definite) {\n    this.token(\"!\");\n  }\n\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassPrivateProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassMethod(node) {\n  this._classMethodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ClassPrivateMethod(node) {\n  this._classMethodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _classMethodHead(node) {\n  this.printJoin(node.decorators, node);\n  this.source(\"end\", node.key.loc);\n  this.tsPrintClassMemberModifiers(node);\n\n  this._methodHead(node);\n}\n\nfunction StaticBlock(node) {\n  this.word(\"static\");\n  this.space();\n  this.token(\"{\");\n\n  if (node.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n    this.printSequence(node.body, node, {\n      indent: true\n    });\n    this.rightBrace();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.FunctionDeclaration = exports.FunctionExpression = FunctionExpression;\nexports._functionHead = _functionHead;\nexports._methodHead = _methodHead;\nexports._param = _param;\nexports._parameters = _parameters;\nexports._params = _params;\nexports._predicate = _predicate;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isIdentifier\n} = _t;\n\nfunction _params(node) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(node.params, node);\n\n  this.token(\")\");\n  this.print(node.returnType, node);\n}\n\nfunction _parameters(parameters, parent) {\n  for (let i = 0; i < parameters.length; i++) {\n    this._param(parameters[i], parent);\n\n    if (i < parameters.length - 1) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n}\n\nfunction _param(parameter, parent) {\n  this.printJoin(parameter.decorators, parameter);\n  this.print(parameter, parent);\n\n  if (parameter.optional) {\n    this.token(\"?\");\n  }\n\n  this.print(parameter.typeAnnotation, parameter);\n}\n\nfunction _methodHead(node) {\n  const kind = node.kind;\n  const key = node.key;\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this._catchUp(\"start\", key.loc);\n\n    this.word(\"async\");\n    this.space();\n  }\n\n  if (kind === \"method\" || kind === \"init\") {\n    if (node.generator) {\n      this.token(\"*\");\n    }\n  }\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(key, node);\n    this.token(\"]\");\n  } else {\n    this.print(key, node);\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n\n  this._params(node);\n}\n\nfunction _predicate(node) {\n  if (node.predicate) {\n    if (!node.returnType) {\n      this.token(\":\");\n    }\n\n    this.space();\n    this.print(node.predicate, node);\n  }\n}\n\nfunction _functionHead(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  if (node.generator) this.token(\"*\");\n  this.printInnerComments(node);\n  this.space();\n\n  if (node.id) {\n    this.print(node.id, node);\n  }\n\n  this._params(node);\n\n  if (node.type !== \"TSDeclareFunction\") {\n    this._predicate(node);\n  }\n}\n\nfunction FunctionExpression(node) {\n  this._functionHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ArrowFunctionExpression(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  const firstParam = node.params[0];\n\n  if (!this.format.retainLines && !this.format.auxiliaryCommentBefore && !this.format.auxiliaryCommentAfter && node.params.length === 1 && isIdentifier(firstParam) && !hasTypesOrComments(node, firstParam)) {\n    this.print(firstParam, node);\n  } else {\n    this._params(node);\n  }\n\n  this._predicate(node);\n\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction hasTypesOrComments(node, param) {\n  var _param$leadingComment, _param$trailingCommen;\n\n  return !!(node.typeParameters || node.returnType || node.predicate || param.typeAnnotation || param.optional || (_param$leadingComment = param.leadingComments) != null && _param$leadingComment.length || (_param$trailingCommen = param.trailingComments) != null && _param$trailingCommen.length);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExportAllDeclaration = ExportAllDeclaration;\nexports.ExportDefaultDeclaration = ExportDefaultDeclaration;\nexports.ExportDefaultSpecifier = ExportDefaultSpecifier;\nexports.ExportNamedDeclaration = ExportNamedDeclaration;\nexports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;\nexports.ExportSpecifier = ExportSpecifier;\nexports.ImportAttribute = ImportAttribute;\nexports.ImportDeclaration = ImportDeclaration;\nexports.ImportDefaultSpecifier = ImportDefaultSpecifier;\nexports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\nexports.ImportSpecifier = ImportSpecifier;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isClassDeclaration,\n  isExportDefaultSpecifier,\n  isExportNamespaceSpecifier,\n  isImportDefaultSpecifier,\n  isImportNamespaceSpecifier,\n  isStatement\n} = _t;\n\nfunction ImportSpecifier(node) {\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported, node);\n\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.local, node);\n  }\n}\n\nfunction ImportDefaultSpecifier(node) {\n  this.print(node.local, node);\n}\n\nfunction ExportDefaultSpecifier(node) {\n  this.print(node.exported, node);\n}\n\nfunction ExportSpecifier(node) {\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.print(node.local, node);\n\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.exported, node);\n  }\n}\n\nfunction ExportNamespaceSpecifier(node) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.exported, node);\n}\n\nfunction ExportAllDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.token(\"*\");\n  this.space();\n  this.word(\"from\");\n  this.space();\n  this.print(node.source, node);\n  this.printAssertions(node);\n  this.semicolon();\n}\n\nfunction ExportNamedDeclaration(node) {\n  {\n    if (this.format.decoratorsBeforeExport && isClassDeclaration(node.declaration)) {\n      this.printJoin(node.declaration.decorators, node);\n    }\n  }\n  this.word(\"export\");\n  this.space();\n\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === \"type\") {\n      this.word(\"type\");\n      this.space();\n    }\n\n    const specifiers = node.specifiers.slice(0);\n    let hasSpecial = false;\n\n    for (;;) {\n      const first = specifiers[0];\n\n      if (isExportDefaultSpecifier(first) || isExportNamespaceSpecifier(first)) {\n        hasSpecial = true;\n        this.print(specifiers.shift(), node);\n\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length || !specifiers.length && !hasSpecial) {\n      this.token(\"{\");\n\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, node);\n        this.space();\n      }\n\n      this.token(\"}\");\n    }\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n      this.printAssertions(node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExportDefaultDeclaration(node) {\n  {\n    if (this.format.decoratorsBeforeExport && isClassDeclaration(node.declaration)) {\n      this.printJoin(node.declaration.decorators, node);\n    }\n  }\n  this.word(\"export\");\n  this.space();\n  this.word(\"default\");\n  this.space();\n  const declar = node.declaration;\n  this.print(declar, node);\n  if (!isStatement(declar)) this.semicolon();\n}\n\nfunction ImportDeclaration(node) {\n  this.word(\"import\");\n  this.space();\n  const isTypeKind = node.importKind === \"type\" || node.importKind === \"typeof\";\n\n  if (isTypeKind) {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  const specifiers = node.specifiers.slice(0);\n  const hasSpecifiers = !!specifiers.length;\n\n  while (hasSpecifiers) {\n    const first = specifiers[0];\n\n    if (isImportDefaultSpecifier(first) || isImportNamespaceSpecifier(first)) {\n      this.print(specifiers.shift(), node);\n\n      if (specifiers.length) {\n        this.token(\",\");\n        this.space();\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (specifiers.length) {\n    this.token(\"{\");\n    this.space();\n    this.printList(specifiers, node);\n    this.space();\n    this.token(\"}\");\n  } else if (isTypeKind && !hasSpecifiers) {\n    this.token(\"{\");\n    this.token(\"}\");\n  }\n\n  if (hasSpecifiers || isTypeKind) {\n    this.space();\n    this.word(\"from\");\n    this.space();\n  }\n\n  this.print(node.source, node);\n  this.printAssertions(node);\n  {\n    var _node$attributes;\n\n    if ((_node$attributes = node.attributes) != null && _node$attributes.length) {\n      this.space();\n      this.word(\"with\");\n      this.space();\n      this.printList(node.attributes, node);\n    }\n  }\n  this.semicolon();\n}\n\nfunction ImportAttribute(node) {\n  this.print(node.key);\n  this.token(\":\");\n  this.space();\n  this.print(node.value);\n}\n\nfunction ImportNamespaceSpecifier(node) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.local, node);\n}", "'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = Buffer.isBuffer;\nconst isObject = (value) => {\n\t// This is a very simple check, but it\u2019s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\"': '\\\\\"',\n\t'\\'': '\\\\\\'',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitelist = /[ !#-&\\(-\\[\\]-_a-~]/;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(argument);\n\t\t\t}\n\t\t\tif (useDecNumbers) {\n\t\t\t\treturn String(argument);\n\t\t\t}\n\t\t\tif (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\treturn '0x' + hexadecimal;\n\t\t\t}\n\t\t\tif (useBinNumbers) {\n\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t}\n\t\t\tif (useOctNumbers) {\n\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t}\n\t\t} else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn\u2019t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it\u2019s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst string = argument;\n\t// Loop over each code unit in the string and escape it\n\tlet index = -1;\n\tconst length = string.length;\n\tresult = '';\n\twhile (++index < length) {\n\t\tconst character = string.charAt(index);\n\t\tif (options.es6) {\n\t\t\tconst first = string.charCodeAt(index);\n\t\t\tif ( // check if it\u2019s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tconst second = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\tlet hexadecimal = codePoint.toString(16);\n\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tresult += '\\\\u{' + hexadecimal + '}';\n\t\t\t\t\t++index;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!options.escapeEverything) {\n\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t// It\u2019s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t// so don\u2019t escape it.\n\t\t\t\tresult += character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\"') {\n\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '`') {\n\t\t\t\tresult += quote == character ? '\\\\`' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\\'') {\n\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tcharacter == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\tresult += '\\\\0';\n\t\t\tcontinue;\n\t\t}\n\t\tif (regexSingleEscape.test(character)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\tresult += singleEscapes[character];\n\t\t\tcontinue;\n\t\t}\n\t\tconst charCode = character.charCodeAt(0);\n\t\tif (options.minimal && charCode != 0x2028 && charCode != 0x2029) {\n\t\t\tresult += character;\n\t\t\tcontinue;\n\t\t}\n\t\tlet hexadecimal = charCode.toString(16);\n\t\tif (!lowercaseHex) {\n\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t}\n\t\tconst longhand = hexadecimal.length > 2 || json;\n\t\tconst escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\tresult += escaped;\n\t\tcontinue;\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\\\$\\{');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\treturn result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\treturn result;\n};\n\njsesc.version = '2.5.2';\n\nmodule.exports = jsesc;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArgumentPlaceholder = ArgumentPlaceholder;\nexports.ArrayPattern = exports.ArrayExpression = ArrayExpression;\nexports.BigIntLiteral = BigIntLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.DecimalLiteral = DecimalLiteral;\nexports.Identifier = Identifier;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.ObjectPattern = exports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.PipelineBareFunction = PipelineBareFunction;\nexports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\nexports.PipelineTopicExpression = PipelineTopicExpression;\nexports.RecordExpression = RecordExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.SpreadElement = exports.RestElement = RestElement;\nexports.StringLiteral = StringLiteral;\nexports.TopicReference = TopicReference;\nexports.TupleExpression = TupleExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar _jsesc = require(\"jsesc\");\n\nconst {\n  isAssignmentPattern,\n  isIdentifier\n} = _t;\n\nfunction Identifier(node) {\n  this.exactSource(node.loc, () => {\n    this.word(node.name);\n  });\n}\n\nfunction ArgumentPlaceholder() {\n  this.token(\"?\");\n}\n\nfunction RestElement(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction ObjectExpression(node) {\n  const props = node.properties;\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(\"}\");\n}\n\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  this._methodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    if (isAssignmentPattern(node.value) && isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && isIdentifier(node.key) && isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  this.token(\"[\");\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    } else {\n      this.token(\",\");\n    }\n  }\n\n  this.token(\"]\");\n}\n\nfunction RecordExpression(node) {\n  const props = node.properties;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    throw new Error(`The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(endToken);\n}\n\nfunction TupleExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    }\n  }\n\n  this.token(endToken);\n}\n\nfunction RegExpLiteral(node) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteral() {\n  this.word(\"null\");\n}\n\nfunction NumericLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n\n  if (opts.numbers) {\n    this.number(_jsesc(node.value, opts));\n  } else if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const val = _jsesc(node.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && {\n    json: true\n  }));\n\n  return this.token(val);\n}\n\nfunction BigIntLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"n\");\n}\n\nfunction DecimalLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"m\");\n}\n\nconst validTopicTokenSet = new Set([\"^^\", \"@@\", \"^\", \"%\", \"#\"]);\n\nfunction TopicReference() {\n  const {\n    topicToken\n  } = this.format;\n\n  if (validTopicTokenSet.has(topicToken)) {\n    this.token(topicToken);\n  } else {\n    const givenTopicTokenJSON = JSON.stringify(topicToken);\n    const validTopics = Array.from(validTopicTokenSet, v => JSON.stringify(v));\n    throw new Error(`The \"topicToken\" generator option must be one of ` + `${validTopics.join(\", \")} (${givenTopicTokenJSON} received instead).`);\n  }\n}\n\nfunction PipelineTopicExpression(node) {\n  this.print(node.expression, node);\n}\n\nfunction PipelineBareFunction(node) {\n  this.print(node.callee, node);\n}\n\nfunction PipelinePrimaryTopicReference() {\n  this.token(\"#\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;\nexports.DeclareExportDeclaration = DeclareExportDeclaration;\nexports.DeclareFunction = DeclareFunction;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareModuleExports = DeclareModuleExports;\nexports.DeclareOpaqueType = DeclareOpaqueType;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareVariable = DeclareVariable;\nexports.DeclaredPredicate = DeclaredPredicate;\nexports.EmptyTypeAnnotation = EmptyTypeAnnotation;\nexports.EnumBooleanBody = EnumBooleanBody;\nexports.EnumBooleanMember = EnumBooleanMember;\nexports.EnumDeclaration = EnumDeclaration;\nexports.EnumDefaultedMember = EnumDefaultedMember;\nexports.EnumNumberBody = EnumNumberBody;\nexports.EnumNumberMember = EnumNumberMember;\nexports.EnumStringBody = EnumStringBody;\nexports.EnumStringMember = EnumStringMember;\nexports.EnumSymbolBody = EnumSymbolBody;\nexports.ExistsTypeAnnotation = ExistsTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.IndexedAccessType = IndexedAccessType;\nexports.InferredPredicate = InferredPredicate;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.GenericTypeAnnotation = exports.ClassImplements = exports.InterfaceExtends = InterfaceExtends;\nexports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.NumericLiteral;\n  }\n});\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\nexports.OpaqueType = OpaqueType;\nexports.OptionalIndexedAccessType = OptionalIndexedAccessType;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.StringLiteral;\n  }\n});\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.SymbolTypeAnnotation = SymbolTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.TypeParameter = TypeParameter;\nexports.TypeParameterDeclaration = exports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.Variance = Variance;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\nexports._interfaceish = _interfaceish;\nexports._variance = _variance;\n\nvar _t = require(\"@babel/types\");\n\nvar _modules = require(\"./modules\");\n\nvar _types2 = require(\"./types\");\n\nconst {\n  isDeclareExportDeclaration,\n  isStatement\n} = _t;\n\nfunction AnyTypeAnnotation() {\n  this.word(\"any\");\n}\n\nfunction ArrayTypeAnnotation(node) {\n  this.print(node.elementType, node);\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nfunction BooleanTypeAnnotation() {\n  this.word(\"boolean\");\n}\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteralTypeAnnotation() {\n  this.word(\"null\");\n}\n\nfunction DeclareClass(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction DeclareFunction(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate, node);\n  }\n\n  this.semicolon();\n}\n\nfunction InferredPredicate() {\n  this.token(\"%\");\n  this.word(\"checks\");\n}\n\nfunction DeclaredPredicate(node) {\n  this.token(\"%\");\n  this.word(\"checks\");\n  this.token(\"(\");\n  this.print(node.value, node);\n  this.token(\")\");\n}\n\nfunction DeclareInterface(node) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nfunction DeclareModule(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction DeclareModuleExports(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.token(\".\");\n  this.word(\"exports\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction DeclareTypeAlias(node) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nfunction DeclareOpaqueType(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.OpaqueType(node);\n}\n\nfunction DeclareVariable(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"var\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareExportDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.call(this, node);\n}\n\nfunction DeclareExportAllDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n\n  _modules.ExportAllDeclaration.call(this, node);\n}\n\nfunction EnumDeclaration(node) {\n  const {\n    id,\n    body\n  } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.print(body, node);\n}\n\nfunction enumExplicitType(context, name, hasExplicitType) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n\n  context.space();\n}\n\nfunction enumBody(context, node) {\n  const {\n    members\n  } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n\n  for (const member of members) {\n    context.print(member, node);\n    context.newline();\n  }\n\n  if (node.hasUnknownMembers) {\n    context.token(\"...\");\n    context.newline();\n  }\n\n  context.dedent();\n  context.token(\"}\");\n}\n\nfunction EnumBooleanBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumNumberBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumStringBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumSymbolBody(node) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nfunction EnumDefaultedMember(node) {\n  const {\n    id\n  } = node;\n  this.print(id, node);\n  this.token(\",\");\n}\n\nfunction enumInitializedMember(context, node) {\n  const {\n    id,\n    init\n  } = node;\n  context.print(id, node);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(init, node);\n  context.token(\",\");\n}\n\nfunction EnumBooleanMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumNumberMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumStringMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(node) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    this.token(\"{\");\n\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n\n    this.token(\"}\");\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExistsTypeAnnotation() {\n  this.token(\"*\");\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n\n  if (node.this) {\n    this.word(\"this\");\n    this.token(\":\");\n    this.space();\n    this.print(node.this.typeAnnotation, node);\n\n    if (node.params.length || node.rest) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(\",\");\n      this.space();\n    }\n\n    this.token(\"...\");\n    this.print(node.rest, node);\n  }\n\n  this.token(\")\");\n\n  if (parent && (parent.type === \"ObjectTypeCallProperty\" || parent.type === \"DeclareFunction\" || parent.type === \"ObjectTypeProperty\" && parent.method)) {\n    this.token(\":\");\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nfunction FunctionTypeParam(node) {\n  this.print(node.name, node);\n  if (node.optional) this.token(\"?\");\n\n  if (node.name) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.typeAnnotation, node);\n}\n\nfunction InterfaceExtends(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction _interfaceish(node) {\n  var _node$extends;\n\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if ((_node$extends = node.extends) != null && _node$extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  if (node.mixins && node.mixins.length) {\n    this.space();\n    this.word(\"mixins\");\n    this.space();\n    this.printList(node.mixins, node);\n  }\n\n  if (node.implements && node.implements.length) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _variance(node) {\n  if (node.variance) {\n    if (node.variance.kind === \"plus\") {\n      this.token(\"+\");\n    } else if (node.variance.kind === \"minus\") {\n      this.token(\"-\");\n    }\n  }\n}\n\nfunction InterfaceDeclaration(node) {\n  this.word(\"interface\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction andSeparator() {\n  this.space();\n  this.token(\"&\");\n  this.space();\n}\n\nfunction InterfaceTypeAnnotation(node) {\n  this.word(\"interface\");\n\n  if (node.extends && node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction IntersectionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: andSeparator\n  });\n}\n\nfunction MixedTypeAnnotation() {\n  this.word(\"mixed\");\n}\n\nfunction EmptyTypeAnnotation() {\n  this.word(\"empty\");\n}\n\nfunction NullableTypeAnnotation(node) {\n  this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction NumberTypeAnnotation() {\n  this.word(\"number\");\n}\n\nfunction StringTypeAnnotation() {\n  this.word(\"string\");\n}\n\nfunction ThisTypeAnnotation() {\n  this.word(\"this\");\n}\n\nfunction TupleTypeAnnotation(node) {\n  this.token(\"[\");\n  this.printList(node.types, node);\n  this.token(\"]\");\n}\n\nfunction TypeofTypeAnnotation(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument, node);\n}\n\nfunction TypeAlias(node) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\n\nfunction TypeAnnotation(node) {\n  this.token(\":\");\n  this.space();\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TypeParameterInstantiation(node) {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n  this.token(\">\");\n}\n\nfunction TypeParameter(node) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction OpaqueType(node) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.supertype) {\n    this.token(\":\");\n    this.space();\n    this.print(node.supertype, node);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.impltype, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ObjectTypeAnnotation(node) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.token(\"{\");\n  }\n\n  const props = [...node.properties, ...(node.callProperties || []), ...(node.indexers || []), ...(node.internalSlots || [])];\n\n  if (props.length) {\n    this.space();\n    this.printJoin(props, node, {\n      addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n\n      indent: true,\n      statement: true,\n      iterator: () => {\n        if (props.length !== 1 || node.inexact) {\n          this.token(\",\");\n          this.space();\n        }\n      }\n    });\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n\n    if (props.length) {\n      this.newline();\n    }\n\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.token(\"}\");\n  }\n}\n\nfunction ObjectTypeInternalSlot(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  this.token(\"[\");\n  this.print(node.id, node);\n  this.token(\"]\");\n  this.token(\"]\");\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeCallProperty(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeIndexer(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.token(\"[\");\n\n  if (node.id) {\n    this.print(node.id, node);\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.token(\"]\");\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeProperty(node) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (node.kind === \"get\" || node.kind === \"set\") {\n    this.word(node.kind);\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.print(node.key, node);\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeSpreadProperty(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction QualifiedTypeIdentifier(node) {\n  this.print(node.qualification, node);\n  this.token(\".\");\n  this.print(node.id, node);\n}\n\nfunction SymbolTypeAnnotation() {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator() {\n  this.space();\n  this.token(\"|\");\n  this.space();\n}\n\nfunction UnionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: orSeparator\n  });\n}\n\nfunction TypeCastExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nfunction Variance(node) {\n  if (node.kind === \"plus\") {\n    this.token(\"+\");\n  } else {\n    this.token(\"-\");\n  }\n}\n\nfunction VoidTypeAnnotation() {\n  this.word(\"void\");\n}\n\nfunction IndexedAccessType(node) {\n  this.print(node.objectType, node);\n  this.token(\"[\");\n  this.print(node.indexType, node);\n  this.token(\"]\");\n}\n\nfunction OptionalIndexedAccessType(node) {\n  this.print(node.objectType, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"[\");\n  this.print(node.indexType, node);\n  this.token(\"]\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlockStatement = BlockStatement;\nexports.Directive = Directive;\nexports.DirectiveLiteral = DirectiveLiteral;\nexports.File = File;\nexports.InterpreterDirective = InterpreterDirective;\nexports.Placeholder = Placeholder;\nexports.Program = Program;\n\nfunction File(node) {\n  if (node.program) {\n    this.print(node.program.interpreter, node);\n  }\n\n  this.print(node.program, node);\n}\n\nfunction Program(node) {\n  this.printInnerComments(node, false);\n  this.printSequence(node.directives, node);\n  if (node.directives && node.directives.length) this.newline();\n  this.printSequence(node.body, node);\n}\n\nfunction BlockStatement(node) {\n  var _node$directives;\n\n  this.token(\"{\");\n  this.printInnerComments(node);\n  const hasDirectives = (_node$directives = node.directives) == null ? void 0 : _node$directives.length;\n\n  if (node.body.length || hasDirectives) {\n    this.newline();\n    this.printSequence(node.directives, node, {\n      indent: true\n    });\n    if (hasDirectives) this.newline();\n    this.printSequence(node.body, node, {\n      indent: true\n    });\n    this.removeTrailingNewline();\n    this.source(\"end\", node.loc);\n    if (!this.endsWith(10)) this.newline();\n    this.rightBrace();\n  } else {\n    this.source(\"end\", node.loc);\n    this.token(\"}\");\n  }\n}\n\nfunction Directive(node) {\n  this.print(node.value, node);\n  this.semicolon();\n}\n\nconst unescapedSingleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*'/;\nconst unescapedDoubleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*\"/;\n\nfunction DirectiveLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const {\n    value\n  } = node;\n\n  if (!unescapedDoubleQuoteRE.test(value)) {\n    this.token(`\"${value}\"`);\n  } else if (!unescapedSingleQuoteRE.test(value)) {\n    this.token(`'${value}'`);\n  } else {\n    throw new Error(\"Malformed AST: it is not possible to print a directive containing\" + \" both unescaped single and double quotes.\");\n  }\n}\n\nfunction InterpreterDirective(node) {\n  this.token(`#!${node.value}\\n`);\n}\n\nfunction Placeholder(node) {\n  this.token(\"%%\");\n  this.print(node.name);\n  this.token(\"%%\");\n\n  if (node.expectedNode === \"Statement\") {\n    this.semicolon();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSXAttribute = JSXAttribute;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXClosingFragment = JSXClosingFragment;\nexports.JSXElement = JSXElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXFragment = JSXFragment;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXOpeningFragment = JSXOpeningFragment;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\n\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n\n  if (node.value) {\n    this.token(\"=\");\n    this.print(node.value, node);\n  }\n}\n\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\n\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.token(\":\");\n  this.print(node.name, node);\n}\n\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction JSXSpreadAttribute(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.argument, node);\n  this.token(\"}\");\n}\n\nfunction JSXExpressionContainer(node) {\n  this.token(\"{\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXSpreadChild(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXText(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (raw !== undefined) {\n    this.token(raw);\n  } else {\n    this.token(node.value);\n  }\n}\n\nfunction JSXElement(node) {\n  const open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingElement, node);\n}\n\nfunction spaceSeparator() {\n  this.space();\n}\n\nfunction JSXOpeningElement(node) {\n  this.token(\"<\");\n  this.print(node.name, node);\n  this.print(node.typeParameters, node);\n\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, {\n      separator: spaceSeparator\n    });\n  }\n\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/>\");\n  } else {\n    this.token(\">\");\n  }\n}\n\nfunction JSXClosingElement(node) {\n  this.token(\"</\");\n  this.print(node.name, node);\n  this.token(\">\");\n}\n\nfunction JSXEmptyExpression(node) {\n  this.printInnerComments(node);\n}\n\nfunction JSXFragment(node) {\n  this.print(node.openingFragment, node);\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingFragment, node);\n}\n\nfunction JSXOpeningFragment() {\n  this.token(\"<\");\n  this.token(\">\");\n}\n\nfunction JSXClosingFragment() {\n  this.token(\"</\");\n  this.token(\">\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TSAnyKeyword = TSAnyKeyword;\nexports.TSArrayType = TSArrayType;\nexports.TSAsExpression = TSAsExpression;\nexports.TSBigIntKeyword = TSBigIntKeyword;\nexports.TSBooleanKeyword = TSBooleanKeyword;\nexports.TSCallSignatureDeclaration = TSCallSignatureDeclaration;\nexports.TSConditionalType = TSConditionalType;\nexports.TSConstructSignatureDeclaration = TSConstructSignatureDeclaration;\nexports.TSConstructorType = TSConstructorType;\nexports.TSDeclareFunction = TSDeclareFunction;\nexports.TSDeclareMethod = TSDeclareMethod;\nexports.TSEnumDeclaration = TSEnumDeclaration;\nexports.TSEnumMember = TSEnumMember;\nexports.TSExportAssignment = TSExportAssignment;\nexports.TSExpressionWithTypeArguments = TSExpressionWithTypeArguments;\nexports.TSExternalModuleReference = TSExternalModuleReference;\nexports.TSFunctionType = TSFunctionType;\nexports.TSImportEqualsDeclaration = TSImportEqualsDeclaration;\nexports.TSImportType = TSImportType;\nexports.TSIndexSignature = TSIndexSignature;\nexports.TSIndexedAccessType = TSIndexedAccessType;\nexports.TSInferType = TSInferType;\nexports.TSInstantiationExpression = TSInstantiationExpression;\nexports.TSInterfaceBody = TSInterfaceBody;\nexports.TSInterfaceDeclaration = TSInterfaceDeclaration;\nexports.TSIntersectionType = TSIntersectionType;\nexports.TSIntrinsicKeyword = TSIntrinsicKeyword;\nexports.TSLiteralType = TSLiteralType;\nexports.TSMappedType = TSMappedType;\nexports.TSMethodSignature = TSMethodSignature;\nexports.TSModuleBlock = TSModuleBlock;\nexports.TSModuleDeclaration = TSModuleDeclaration;\nexports.TSNamedTupleMember = TSNamedTupleMember;\nexports.TSNamespaceExportDeclaration = TSNamespaceExportDeclaration;\nexports.TSNeverKeyword = TSNeverKeyword;\nexports.TSNonNullExpression = TSNonNullExpression;\nexports.TSNullKeyword = TSNullKeyword;\nexports.TSNumberKeyword = TSNumberKeyword;\nexports.TSObjectKeyword = TSObjectKeyword;\nexports.TSOptionalType = TSOptionalType;\nexports.TSParameterProperty = TSParameterProperty;\nexports.TSParenthesizedType = TSParenthesizedType;\nexports.TSPropertySignature = TSPropertySignature;\nexports.TSQualifiedName = TSQualifiedName;\nexports.TSRestType = TSRestType;\nexports.TSStringKeyword = TSStringKeyword;\nexports.TSSymbolKeyword = TSSymbolKeyword;\nexports.TSThisType = TSThisType;\nexports.TSTupleType = TSTupleType;\nexports.TSTypeAliasDeclaration = TSTypeAliasDeclaration;\nexports.TSTypeAnnotation = TSTypeAnnotation;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSTypeLiteral = TSTypeLiteral;\nexports.TSTypeOperator = TSTypeOperator;\nexports.TSTypeParameter = TSTypeParameter;\nexports.TSTypeParameterDeclaration = exports.TSTypeParameterInstantiation = TSTypeParameterInstantiation;\nexports.TSTypePredicate = TSTypePredicate;\nexports.TSTypeQuery = TSTypeQuery;\nexports.TSTypeReference = TSTypeReference;\nexports.TSUndefinedKeyword = TSUndefinedKeyword;\nexports.TSUnionType = TSUnionType;\nexports.TSUnknownKeyword = TSUnknownKeyword;\nexports.TSVoidKeyword = TSVoidKeyword;\nexports.tsPrintClassMemberModifiers = tsPrintClassMemberModifiers;\nexports.tsPrintFunctionOrConstructorType = tsPrintFunctionOrConstructorType;\nexports.tsPrintPropertyOrMethodName = tsPrintPropertyOrMethodName;\nexports.tsPrintSignatureDeclarationBase = tsPrintSignatureDeclarationBase;\nexports.tsPrintTypeLiteralOrInterfaceBody = tsPrintTypeLiteralOrInterfaceBody;\n\nfunction TSTypeAnnotation(node) {\n  this.token(\":\");\n  this.space();\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSTypeParameterInstantiation(node, parent) {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n\n  if (parent.type === \"ArrowFunctionExpression\" && node.params.length === 1) {\n    this.token(\",\");\n  }\n\n  this.token(\">\");\n}\n\nfunction TSTypeParameter(node) {\n  if (node.in) {\n    this.word(\"in\");\n    this.space();\n  }\n\n  if (node.out) {\n    this.word(\"out\");\n    this.space();\n  }\n\n  this.word(node.name);\n\n  if (node.constraint) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.constraint, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction TSParameterProperty(node) {\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this._param(node.parameter);\n}\n\nfunction TSDeclareFunction(node) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this._functionHead(node);\n\n  this.token(\";\");\n}\n\nfunction TSDeclareMethod(node) {\n  this._classMethodHead(node);\n\n  this.token(\";\");\n}\n\nfunction TSQualifiedName(node) {\n  this.print(node.left, node);\n  this.token(\".\");\n  this.print(node.right, node);\n}\n\nfunction TSCallSignatureDeclaration(node) {\n  this.tsPrintSignatureDeclarationBase(node);\n  this.token(\";\");\n}\n\nfunction TSConstructSignatureDeclaration(node) {\n  this.word(\"new\");\n  this.space();\n  this.tsPrintSignatureDeclarationBase(node);\n  this.token(\";\");\n}\n\nfunction TSPropertySignature(node) {\n  const {\n    readonly,\n    initializer\n  } = node;\n\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.tsPrintPropertyOrMethodName(node);\n  this.print(node.typeAnnotation, node);\n\n  if (initializer) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(initializer, node);\n  }\n\n  this.token(\";\");\n}\n\nfunction tsPrintPropertyOrMethodName(node) {\n  if (node.computed) {\n    this.token(\"[\");\n  }\n\n  this.print(node.key, node);\n\n  if (node.computed) {\n    this.token(\"]\");\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n}\n\nfunction TSMethodSignature(node) {\n  const {\n    kind\n  } = node;\n\n  if (kind === \"set\" || kind === \"get\") {\n    this.word(kind);\n    this.space();\n  }\n\n  this.tsPrintPropertyOrMethodName(node);\n  this.tsPrintSignatureDeclarationBase(node);\n  this.token(\";\");\n}\n\nfunction TSIndexSignature(node) {\n  const {\n    readonly,\n    static: isStatic\n  } = node;\n\n  if (isStatic) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.token(\"[\");\n\n  this._parameters(node.parameters, node);\n\n  this.token(\"]\");\n  this.print(node.typeAnnotation, node);\n  this.token(\";\");\n}\n\nfunction TSAnyKeyword() {\n  this.word(\"any\");\n}\n\nfunction TSBigIntKeyword() {\n  this.word(\"bigint\");\n}\n\nfunction TSUnknownKeyword() {\n  this.word(\"unknown\");\n}\n\nfunction TSNumberKeyword() {\n  this.word(\"number\");\n}\n\nfunction TSObjectKeyword() {\n  this.word(\"object\");\n}\n\nfunction TSBooleanKeyword() {\n  this.word(\"boolean\");\n}\n\nfunction TSStringKeyword() {\n  this.word(\"string\");\n}\n\nfunction TSSymbolKeyword() {\n  this.word(\"symbol\");\n}\n\nfunction TSVoidKeyword() {\n  this.word(\"void\");\n}\n\nfunction TSUndefinedKeyword() {\n  this.word(\"undefined\");\n}\n\nfunction TSNullKeyword() {\n  this.word(\"null\");\n}\n\nfunction TSNeverKeyword() {\n  this.word(\"never\");\n}\n\nfunction TSIntrinsicKeyword() {\n  this.word(\"intrinsic\");\n}\n\nfunction TSThisType() {\n  this.word(\"this\");\n}\n\nfunction TSFunctionType(node) {\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nfunction TSConstructorType(node) {\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  this.word(\"new\");\n  this.space();\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nfunction tsPrintFunctionOrConstructorType(node) {\n  const {\n    typeParameters\n  } = node;\n  const parameters = node.parameters;\n  this.print(typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(parameters, node);\n\n  this.token(\")\");\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  const returnType = node.typeAnnotation;\n  this.print(returnType.typeAnnotation, node);\n}\n\nfunction TSTypeReference(node) {\n  this.print(node.typeName, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSTypePredicate(node) {\n  if (node.asserts) {\n    this.word(\"asserts\");\n    this.space();\n  }\n\n  this.print(node.parameterName);\n\n  if (node.typeAnnotation) {\n    this.space();\n    this.word(\"is\");\n    this.space();\n    this.print(node.typeAnnotation.typeAnnotation);\n  }\n}\n\nfunction TSTypeQuery(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.exprName);\n\n  if (node.typeParameters) {\n    this.print(node.typeParameters, node);\n  }\n}\n\nfunction TSTypeLiteral(node) {\n  this.tsPrintTypeLiteralOrInterfaceBody(node.members, node);\n}\n\nfunction tsPrintTypeLiteralOrInterfaceBody(members, node) {\n  tsPrintBraced(this, members, node);\n}\n\nfunction tsPrintBraced(printer, members, node) {\n  printer.token(\"{\");\n\n  if (members.length) {\n    printer.indent();\n    printer.newline();\n\n    for (const member of members) {\n      printer.print(member, node);\n      printer.newline();\n    }\n\n    printer.dedent();\n    printer.rightBrace();\n  } else {\n    printer.token(\"}\");\n  }\n}\n\nfunction TSArrayType(node) {\n  this.print(node.elementType, node);\n  this.token(\"[]\");\n}\n\nfunction TSTupleType(node) {\n  this.token(\"[\");\n  this.printList(node.elementTypes, node);\n  this.token(\"]\");\n}\n\nfunction TSOptionalType(node) {\n  this.print(node.typeAnnotation, node);\n  this.token(\"?\");\n}\n\nfunction TSRestType(node) {\n  this.token(\"...\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSNamedTupleMember(node) {\n  this.print(node.label, node);\n  if (node.optional) this.token(\"?\");\n  this.token(\":\");\n  this.space();\n  this.print(node.elementType, node);\n}\n\nfunction TSUnionType(node) {\n  tsPrintUnionOrIntersectionType(this, node, \"|\");\n}\n\nfunction TSIntersectionType(node) {\n  tsPrintUnionOrIntersectionType(this, node, \"&\");\n}\n\nfunction tsPrintUnionOrIntersectionType(printer, node, sep) {\n  printer.printJoin(node.types, node, {\n    separator() {\n      this.space();\n      this.token(sep);\n      this.space();\n    }\n\n  });\n}\n\nfunction TSConditionalType(node) {\n  this.print(node.checkType);\n  this.space();\n  this.word(\"extends\");\n  this.space();\n  this.print(node.extendsType);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.trueType);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.falseType);\n}\n\nfunction TSInferType(node) {\n  this.token(\"infer\");\n  this.space();\n  this.print(node.typeParameter);\n}\n\nfunction TSParenthesizedType(node) {\n  this.token(\"(\");\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nfunction TSTypeOperator(node) {\n  this.word(node.operator);\n  this.space();\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSIndexedAccessType(node) {\n  this.print(node.objectType, node);\n  this.token(\"[\");\n  this.print(node.indexType, node);\n  this.token(\"]\");\n}\n\nfunction TSMappedType(node) {\n  const {\n    nameType,\n    optional,\n    readonly,\n    typeParameter\n  } = node;\n  this.token(\"{\");\n  this.space();\n\n  if (readonly) {\n    tokenIfPlusMinus(this, readonly);\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  this.word(typeParameter.name);\n  this.space();\n  this.word(\"in\");\n  this.space();\n  this.print(typeParameter.constraint, typeParameter);\n\n  if (nameType) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(nameType, node);\n  }\n\n  this.token(\"]\");\n\n  if (optional) {\n    tokenIfPlusMinus(this, optional);\n    this.token(\"?\");\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.typeAnnotation, node);\n  this.space();\n  this.token(\"}\");\n}\n\nfunction tokenIfPlusMinus(self, tok) {\n  if (tok !== true) {\n    self.token(tok);\n  }\n}\n\nfunction TSLiteralType(node) {\n  this.print(node.literal, node);\n}\n\nfunction TSExpressionWithTypeArguments(node) {\n  this.print(node.expression, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSInterfaceDeclaration(node) {\n  const {\n    declare,\n    id,\n    typeParameters,\n    extends: extendz,\n    body\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"interface\");\n  this.space();\n  this.print(id, node);\n  this.print(typeParameters, node);\n\n  if (extendz != null && extendz.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(extendz, node);\n  }\n\n  this.space();\n  this.print(body, node);\n}\n\nfunction TSInterfaceBody(node) {\n  this.tsPrintTypeLiteralOrInterfaceBody(node.body, node);\n}\n\nfunction TSTypeAliasDeclaration(node) {\n  const {\n    declare,\n    id,\n    typeParameters,\n    typeAnnotation\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"type\");\n  this.space();\n  this.print(id, node);\n  this.print(typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(typeAnnotation, node);\n  this.token(\";\");\n}\n\nfunction TSAsExpression(node) {\n  const {\n    expression,\n    typeAnnotation\n  } = node;\n  this.print(expression, node);\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(typeAnnotation, node);\n}\n\nfunction TSTypeAssertion(node) {\n  const {\n    typeAnnotation,\n    expression\n  } = node;\n  this.token(\"<\");\n  this.print(typeAnnotation, node);\n  this.token(\">\");\n  this.space();\n  this.print(expression, node);\n}\n\nfunction TSInstantiationExpression(node) {\n  this.print(node.expression, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSEnumDeclaration(node) {\n  const {\n    declare,\n    const: isConst,\n    id,\n    members\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (isConst) {\n    this.word(\"const\");\n    this.space();\n  }\n\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.space();\n  tsPrintBraced(this, members, node);\n}\n\nfunction TSEnumMember(node) {\n  const {\n    id,\n    initializer\n  } = node;\n  this.print(id, node);\n\n  if (initializer) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(initializer, node);\n  }\n\n  this.token(\",\");\n}\n\nfunction TSModuleDeclaration(node) {\n  const {\n    declare,\n    id\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (!node.global) {\n    this.word(id.type === \"Identifier\" ? \"namespace\" : \"module\");\n    this.space();\n  }\n\n  this.print(id, node);\n\n  if (!node.body) {\n    this.token(\";\");\n    return;\n  }\n\n  let body = node.body;\n\n  while (body.type === \"TSModuleDeclaration\") {\n    this.token(\".\");\n    this.print(body.id, body);\n    body = body.body;\n  }\n\n  this.space();\n  this.print(body, node);\n}\n\nfunction TSModuleBlock(node) {\n  tsPrintBraced(this, node.body, node);\n}\n\nfunction TSImportType(node) {\n  const {\n    argument,\n    qualifier,\n    typeParameters\n  } = node;\n  this.word(\"import\");\n  this.token(\"(\");\n  this.print(argument, node);\n  this.token(\")\");\n\n  if (qualifier) {\n    this.token(\".\");\n    this.print(qualifier, node);\n  }\n\n  if (typeParameters) {\n    this.print(typeParameters, node);\n  }\n}\n\nfunction TSImportEqualsDeclaration(node) {\n  const {\n    isExport,\n    id,\n    moduleReference\n  } = node;\n\n  if (isExport) {\n    this.word(\"export\");\n    this.space();\n  }\n\n  this.word(\"import\");\n  this.space();\n  this.print(id, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(moduleReference, node);\n  this.token(\";\");\n}\n\nfunction TSExternalModuleReference(node) {\n  this.token(\"require(\");\n  this.print(node.expression, node);\n  this.token(\")\");\n}\n\nfunction TSNonNullExpression(node) {\n  this.print(node.expression, node);\n  this.token(\"!\");\n}\n\nfunction TSExportAssignment(node) {\n  this.word(\"export\");\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.expression, node);\n  this.token(\";\");\n}\n\nfunction TSNamespaceExportDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.word(\"namespace\");\n  this.space();\n  this.print(node.id, node);\n}\n\nfunction tsPrintSignatureDeclarationBase(node) {\n  const {\n    typeParameters\n  } = node;\n  const parameters = node.parameters;\n  this.print(typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(parameters, node);\n\n  this.token(\")\");\n  const returnType = node.typeAnnotation;\n  this.print(returnType, node);\n}\n\nfunction tsPrintClassMemberModifiers(node) {\n  const isField = node.type === \"ClassAccessorProperty\" || node.type === \"ClassProperty\";\n\n  if (isField && node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (node.override) {\n    this.word(\"override\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  if (isField && node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _templateLiterals = require(\"./template-literals\");\n\nObject.keys(_templateLiterals).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _templateLiterals[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _templateLiterals[key];\n    }\n  });\n});\n\nvar _expressions = require(\"./expressions\");\n\nObject.keys(_expressions).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _expressions[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _expressions[key];\n    }\n  });\n});\n\nvar _statements = require(\"./statements\");\n\nObject.keys(_statements).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _statements[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _statements[key];\n    }\n  });\n});\n\nvar _classes = require(\"./classes\");\n\nObject.keys(_classes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _classes[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _classes[key];\n    }\n  });\n});\n\nvar _methods = require(\"./methods\");\n\nObject.keys(_methods).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _methods[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _methods[key];\n    }\n  });\n});\n\nvar _modules = require(\"./modules\");\n\nObject.keys(_modules).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _modules[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _modules[key];\n    }\n  });\n});\n\nvar _types = require(\"./types\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types[key];\n    }\n  });\n});\n\nvar _flow = require(\"./flow\");\n\nObject.keys(_flow).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _flow[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _flow[key];\n    }\n  });\n});\n\nvar _base = require(\"./base\");\n\nObject.keys(_base).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _base[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _base[key];\n    }\n  });\n});\n\nvar _jsx = require(\"./jsx\");\n\nObject.keys(_jsx).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _jsx[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _jsx[key];\n    }\n  });\n});\n\nvar _typescript = require(\"./typescript\");\n\nObject.keys(_typescript).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _typescript[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _typescript[key];\n    }\n  });\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _buffer = require(\"./buffer\");\n\nvar n = require(\"./node\");\n\nvar _t = require(\"@babel/types\");\n\nvar generatorFunctions = require(\"./generators\");\n\nconst {\n  isProgram,\n  isFile,\n  isEmptyStatement\n} = _t;\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst NON_DECIMAL_LITERAL = /^0[box]/;\nconst PURE_ANNOTATION_RE = /^\\s*[@#]__PURE__\\s*$/;\nconst {\n  needsParens,\n  needsWhitespaceAfter,\n  needsWhitespaceBefore\n} = n;\n\nclass Printer {\n  constructor(format, map) {\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new WeakSet();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format;\n    this._buf = new _buffer.default(map);\n  }\n\n  generate(ast) {\n    this.print(ast);\n\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  indent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent++;\n  }\n\n  dedent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent--;\n  }\n\n  semicolon(force = false) {\n    this._maybeAddAuxComment();\n\n    this._append(\";\", !force);\n  }\n\n  rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n\n    this.token(\"}\");\n  }\n\n  space(force = false) {\n    if (this.format.compact) return;\n\n    if (force) {\n      this._space();\n    } else if (this._buf.hasContent()) {\n      const lastCp = this.getLastChar();\n\n      if (lastCp !== 32 && lastCp !== 10) {\n        this._space();\n      }\n    }\n  }\n\n  word(str) {\n    if (this._endsWithWord || this.endsWith(47) && str.charCodeAt(0) === 47) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n\n    this._endsWithWord = true;\n  }\n\n  number(str) {\n    this.word(str);\n    this._endsWithInteger = Number.isInteger(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str.charCodeAt(str.length - 1) !== 46;\n  }\n\n  token(str) {\n    const lastChar = this.getLastChar();\n    const strFirst = str.charCodeAt(0);\n\n    if (str === \"--\" && lastChar === 33 || strFirst === 43 && lastChar === 43 || strFirst === 45 && lastChar === 45 || strFirst === 46 && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n  }\n\n  newline(i = 1) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    const charBeforeNewline = this.endsWithCharAndNewline();\n    if (charBeforeNewline === 10) return;\n\n    if (charBeforeNewline === 123 || charBeforeNewline === 58) {\n      i--;\n    }\n\n    if (i <= 0) return;\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n  }\n\n  endsWith(char) {\n    return this.getLastChar() === char;\n  }\n\n  getLastChar() {\n    return this._buf.getLastChar();\n  }\n\n  endsWithCharAndNewline() {\n    return this._buf.endsWithCharAndNewline();\n  }\n\n  removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc, cb) {\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  }\n\n  _space() {\n    this._append(\" \", true);\n  }\n\n  _newline() {\n    this._append(\"\\n\", true);\n  }\n\n  _append(str, queue = false) {\n    this._maybeAddParen(str);\n\n    this._maybeIndent(str);\n\n    if (queue) this._buf.queue(str);else this._buf.append(str);\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(str) {\n    if (this._indent && this.endsWith(10) && str.charCodeAt(0) !== 10) {\n      this._buf.queueIndentation(this._getIndent());\n    }\n  }\n\n  _maybeAddParen(str) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    let i;\n\n    for (i = 0; i < str.length && str[i] === \" \"; i++) continue;\n\n    if (i === str.length) {\n      return;\n    }\n\n    const cha = str[i];\n\n    if (cha !== \"\\n\") {\n      if (cha !== \"/\" || i + 1 === str.length) {\n        this._parenPushNewlineState = null;\n        return;\n      }\n\n      const chaPost = str[i + 1];\n\n      if (chaPost === \"*\") {\n        if (PURE_ANNOTATION_RE.test(str.slice(i + 2, str.length - 2))) {\n          return;\n        }\n      } else if (chaPost !== \"/\") {\n        this._parenPushNewlineState = null;\n        return;\n      }\n    }\n\n    this.token(\"(\");\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n    const pos = loc ? loc[prop] : null;\n\n    if ((pos == null ? void 0 : pos.line) != null) {\n      const count = pos.line - this._buf.getCurrentLine();\n\n      for (let i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  }\n\n  _getIndent() {\n    return this.format.indent.style.repeat(this._indent);\n  }\n\n  printTerminatorless(node, parent, isLabel) {\n    if (isLabel) {\n      this._noLineTerminator = true;\n      this.print(node, parent);\n      this._noLineTerminator = false;\n    } else {\n      const terminatorState = {\n        printed: false\n      };\n      this._parenPushNewlineState = terminatorState;\n      this.print(node, parent);\n\n      if (terminatorState.printed) {\n        this.dedent();\n        this.newline();\n        this.token(\")\");\n      }\n    }\n  }\n\n  print(node, parent) {\n    if (!node) return;\n    const oldConcise = this.format.concise;\n\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    const printMethod = this[node.type];\n\n    if (!printMethod) {\n      throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node == null ? void 0 : node.constructor.name)}`);\n    }\n\n    this._printStack.push(node);\n\n    const oldInAux = this._insideAux;\n    this._insideAux = !node.loc;\n\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    let shouldPrintParens = needsParens(node, parent, this._printStack);\n\n    if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n      shouldPrintParens = true;\n    }\n\n    if (shouldPrintParens) this.token(\"(\");\n\n    this._printLeadingComments(node);\n\n    const loc = isProgram(node) || isFile(node) ? null : node.loc;\n    this.withSource(\"start\", loc, () => {\n      printMethod.call(this, node, parent);\n    });\n\n    this._printTrailingComments(node);\n\n    if (shouldPrintParens) this.token(\")\");\n\n    this._printStack.pop();\n\n    this.format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n    const comment = this.format.auxiliaryCommentBefore;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n    const comment = this.format.auxiliaryCommentAfter;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  getPossibleRaw(node) {\n    const extra = node.extra;\n\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  }\n\n  printJoin(nodes, parent, opts = {}) {\n    if (!(nodes != null && nodes.length)) return;\n    if (opts.indent) this.indent();\n    const newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < nodes.length - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node, parent) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent) {\n    const node = parent.body;\n\n    if (!isEmptyStatement(node)) {\n      this.space();\n    }\n\n    this.print(node, parent);\n  }\n\n  _printTrailingComments(node) {\n    this._printComments(this._getComments(false, node));\n  }\n\n  _printLeadingComments(node) {\n    this._printComments(this._getComments(true, node), true);\n  }\n\n  printInnerComments(node, indent = true) {\n    var _node$innerComments;\n\n    if (!((_node$innerComments = node.innerComments) != null && _node$innerComments.length)) return;\n    if (indent) this.indent();\n\n    this._printComments(node.innerComments);\n\n    if (indent) this.dedent();\n  }\n\n  printSequence(nodes, parent, opts = {}) {\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  }\n\n  printList(items, parent, opts = {}) {\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  }\n\n  _printNewline(leading, node, parent, opts) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    let lines = 0;\n\n    if (this._buf.hasContent()) {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n      const needs = leading ? needsWhitespaceBefore : needsWhitespaceAfter;\n      if (needs(node, parent)) lines++;\n    }\n\n    this.newline(Math.min(2, lines));\n  }\n\n  _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || [];\n  }\n\n  _printComment(comment, skipNewLines) {\n    if (!this.format.shouldPrintComment(comment.value)) return;\n    if (comment.ignore) return;\n    if (this._printedComments.has(comment)) return;\n\n    this._printedComments.add(comment);\n\n    const isBlockComment = comment.type === \"CommentBlock\";\n    const printNewLines = isBlockComment && !skipNewLines && !this._noLineTerminator;\n    if (printNewLines && this._buf.hasContent()) this.newline(1);\n    const lastCharCode = this.getLastChar();\n\n    if (lastCharCode !== 91 && lastCharCode !== 123) {\n      this.space();\n    }\n\n    let val = !isBlockComment && !this._noLineTerminator ? `//${comment.value}\\n` : `/*${comment.value}*/`;\n\n    if (isBlockComment && this.format.indent.adjustMultilineComment) {\n      var _comment$loc;\n\n      const offset = (_comment$loc = comment.loc) == null ? void 0 : _comment$loc.start.column;\n\n      if (offset) {\n        const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n        val = val.replace(newlineRegex, \"\\n\");\n      }\n\n      const indentSize = Math.max(this._getIndent().length, this.format.retainLines ? 0 : this._buf.getCurrentColumn());\n      val = val.replace(/\\n(?!$)/g, `\\n${\" \".repeat(indentSize)}`);\n    }\n\n    if (this.endsWith(47)) this._space();\n    this.withSource(\"start\", comment.loc, () => {\n      this._append(val);\n    });\n    if (printNewLines) this.newline(1);\n  }\n\n  _printComments(comments, inlinePureAnnotation) {\n    if (!(comments != null && comments.length)) return;\n\n    if (inlinePureAnnotation && comments.length === 1 && PURE_ANNOTATION_RE.test(comments[0].value)) {\n      this._printComment(comments[0], this._buf.hasContent() && !this.endsWith(10));\n    } else {\n      for (const comment of comments) {\n        this._printComment(comment);\n      }\n    }\n  }\n\n  printAssertions(node) {\n    var _node$assertions;\n\n    if ((_node$assertions = node.assertions) != null && _node$assertions.length) {\n      this.space();\n      this.word(\"assert\");\n      this.space();\n      this.token(\"{\");\n      this.space();\n      this.printList(node.assertions, node);\n      this.space();\n      this.token(\"}\");\n    }\n  }\n\n}\n\nObject.assign(Printer.prototype, generatorFunctions);\n{\n  Printer.prototype.Noop = function Noop() {};\n}\nvar _default = Printer;\nexports.default = _default;\n\nfunction commaSeparator() {\n  this.token(\",\");\n  this.space();\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeGenerator = void 0;\nexports.default = generate;\n\nvar _sourceMap = require(\"./source-map\");\n\nvar _printer = require(\"./printer\");\n\nclass Generator extends _printer.default {\n  constructor(ast, opts = {}, code) {\n    const format = normalizeOptions(code, opts);\n    const map = opts.sourceMaps ? new _sourceMap.default(opts, code) : null;\n    super(format, map);\n    this.ast = void 0;\n    this.ast = ast;\n  }\n\n  generate() {\n    return super.generate(this.ast);\n  }\n\n}\n\nfunction normalizeOptions(code, opts) {\n  const format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    indent: {\n      adjustMultilineComment: true,\n      style: \"  \",\n      base: 0\n    },\n    jsescOption: Object.assign({\n      quotes: \"double\",\n      wrap: true,\n      minimal: false\n    }, opts.jsescOption),\n    recordAndTupleSyntaxType: opts.recordAndTupleSyntaxType,\n    topicToken: opts.topicToken\n  };\n  {\n    format.decoratorsBeforeExport = !!opts.decoratorsBeforeExport;\n    format.jsonCompatibleStrings = opts.jsonCompatibleStrings;\n  }\n\n  if (format.minified) {\n    format.compact = true;\n\n    format.shouldPrintComment = format.shouldPrintComment || (() => format.comments);\n  } else {\n    format.shouldPrintComment = format.shouldPrintComment || (value => format.comments || value.indexOf(\"@license\") >= 0 || value.indexOf(\"@preserve\") >= 0);\n  }\n\n  if (format.compact === \"auto\") {\n    format.compact = code.length > 500000;\n\n    if (format.compact) {\n      console.error(\"[BABEL] Note: The code generator has deoptimised the styling of \" + `${opts.filename} as it exceeds the max of ${\"500KB\"}.`);\n    }\n  }\n\n  if (format.compact) {\n    format.indent.adjustMultilineComment = false;\n  }\n\n  return format;\n}\n\nclass CodeGenerator {\n  constructor(ast, opts, code) {\n    this._generator = void 0;\n    this._generator = new Generator(ast, opts, code);\n  }\n\n  generate() {\n    return this._generator.generate();\n  }\n\n}\n\nexports.CodeGenerator = CodeGenerator;\n\nfunction generate(ast, opts, code) {\n  const gen = new Generator(ast, opts, code);\n  return gen.generate();\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.find = find;\nexports.findParent = findParent;\nexports.getAncestry = getAncestry;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.inType = inType;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUnionType = createUnionType;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  isFlowType,\n  isTSType\n} = _t;\n\nfunction createUnionType(types) {\n  {\n    if (isFlowType(types[0])) {\n      if (createFlowUnionType) {\n        return createFlowUnionType(types);\n      }\n\n      return createUnionTypeAnnotation(types);\n    } else {\n      if (createTSUnionType) {\n        return createTSUnionType(types);\n      }\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _t = require(\"@babel/types\");\n\nvar _util = require(\"./util\");\n\nconst {\n  BOOLEAN_NUMBER_BINARY_OPERATORS,\n  createTypeAnnotationBasedOnTypeof,\n  numberTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations.push(...functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  return (0, _util.createUnionType)(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    return {\n      typeAnnotation: (0, _util.createUnionType)(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(binding, ifStatement, name);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayExpression = ArrayExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.BooleanLiteral = BooleanLiteral;\nexports.CallExpression = CallExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\nexports.LogicalExpression = LogicalExpression;\nexports.NewExpression = NewExpression;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.RestElement = RestElement;\nexports.SequenceExpression = SequenceExpression;\nexports.StringLiteral = StringLiteral;\nexports.TSAsExpression = TSAsExpression;\nexports.TSNonNullExpression = TSNonNullExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.TypeCastExpression = TypeCastExpression;\nexports.UnaryExpression = UnaryExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.VariableDeclarator = VariableDeclarator;\n\nvar _t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nvar _util = require(\"./util\");\n\nconst {\n  BOOLEAN_BINARY_OPERATORS,\n  BOOLEAN_UNARY_OPERATORS,\n  NUMBER_BINARY_OPERATORS,\n  NUMBER_UNARY_OPERATORS,\n  STRING_UNARY_OPERATORS,\n  anyTypeAnnotation,\n  arrayTypeAnnotation,\n  booleanTypeAnnotation,\n  buildMatchMemberExpression,\n  genericTypeAnnotation,\n  identifier,\n  nullLiteralTypeAnnotation,\n  numberTypeAnnotation,\n  stringTypeAnnotation,\n  tupleTypeAnnotation,\n  unionTypeAnnotation,\n  voidTypeAnnotation,\n  isIdentifier\n} = _t;\n\nfunction VariableDeclarator() {\n  if (!this.get(\"id\").isIdentifier()) return;\n  return this.get(\"init\").getTypeAnnotation();\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction TSAsExpression(node) {\n  return node.typeAnnotation;\n}\n\nTSAsExpression.validParent = true;\n\nfunction TSNonNullExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction NewExpression(node) {\n  if (node.callee.type === \"Identifier\") {\n    return genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return voidTypeAnnotation();\n  } else if (NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return stringTypeAnnotation();\n  } else if (BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return stringTypeAnnotation();\n    }\n\n    return unionTypeAnnotation([stringTypeAnnotation(), numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n  return (0, _util.createUnionType)(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n  return (0, _util.createUnionType)(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return genericTypeAnnotation(identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return genericTypeAnnotation(identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return genericTypeAnnotation(identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return genericTypeAnnotation(identifier(\"Function\"));\n}\n\nconst isArrayFrom = buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return arrayTypeAnnotation(stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee) || isIdentifier(callee, {\n    name: \"Array\"\n  })) {\n    return arrayTypeAnnotation(anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(), anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    const {\n      node\n    } = callee;\n\n    if (node.async) {\n      if (node.generator) {\n        return genericTypeAnnotation(identifier(\"AsyncIterator\"));\n      } else {\n        return genericTypeAnnotation(identifier(\"Promise\"));\n      }\n    } else {\n      if (node.generator) {\n        return genericTypeAnnotation(identifier(\"Iterator\"));\n      } else if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.couldBeBaseType = couldBeBaseType;\nexports.getTypeAnnotation = getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  anyTypeAnnotation,\n  isAnyTypeAnnotation,\n  isArrayTypeAnnotation,\n  isBooleanTypeAnnotation,\n  isEmptyTypeAnnotation,\n  isFlowBaseAnnotation,\n  isGenericTypeAnnotation,\n  isIdentifier,\n  isMixedTypeAnnotation,\n  isNumberTypeAnnotation,\n  isStringTypeAnnotation,\n  isTSArrayType,\n  isTSTypeAnnotation,\n  isTSTypeReference,\n  isTupleTypeAnnotation,\n  isTypeAnnotation,\n  isUnionTypeAnnotation,\n  isVoidTypeAnnotation,\n  stringTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction getTypeAnnotation() {\n  let type = this.getData(\"typeAnnotation\");\n\n  if (type != null) {\n    return type;\n  }\n\n  type = this._getTypeAnnotation() || anyTypeAnnotation();\n\n  if (isTypeAnnotation(type) || isTSTypeAnnotation(type)) {\n    type = type.typeAnnotation;\n  }\n\n  this.setData(\"typeAnnotation\", type);\n  return type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return anyTypeAnnotation();\n      }\n\n      return voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (isAnyTypeAnnotation(type)) return true;\n\n  if (isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!isAnyTypeAnnotation(left) && isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n\n  if (genericName === \"Array\") {\n    if (isTSArrayType(type) || isArrayTypeAnnotation(type) || isTupleTypeAnnotation(type)) {\n      return true;\n    }\n  }\n\n  return isGenericTypeAnnotation(type) && isIdentifier(type.id, {\n    name: genericName\n  }) || isTSTypeReference(type) && isIdentifier(type.typeName, {\n    name: genericName\n  });\n}", "// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n", "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n", "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n", "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = highlight;\nexports.getChalk = getChalk;\nexports.shouldHighlight = shouldHighlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (code !== \"\" && shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}", "// @flow\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "// @flow\n\nexport const ParseErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ParseErrorCode = $Values<typeof ParseErrorCodes>;\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode,\n  reasonCode: string,\n  syntaxPlugin?: SyntaxPlugin,\n\n  toMessage: ToMessage<ErrorDetails>,\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce(\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: () => any,\n  properties: Object,\n  descriptors: Object,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign((new constructor(): T), properties),\n    );\n\nexport { instantiate };\n", "// @flow\n\nimport { ParseErrorCodes, toParseErrorCredentials } from \"../parse-error\";\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  ImportMetaOutsideModule: _(\n    `import.meta may appear only with 'sourceType: \"module\"'`,\n    { code: ParseErrorCodes.SourceTypeModuleError },\n  ),\n  ImportOutsideModule: _(\n    `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    { code: ParseErrorCodes.SourceTypeModuleError },\n  ),\n});\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = $Keys<\n  $Diff<typeof NodeDescriptions, { UpdateExpression: any }>,\n>;\ntype NodeWithDescription =\n  | { type: \"UpdateExpression\", prefix: boolean }\n  | { type: NodeTypesWithDescriptions };\n\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix)]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\nimport toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\", prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"Identfier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\",\n    };\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  AccessorIsGenerator: _<{| kind: \"get\" | \"set\" |}>(\n    ({ kind }) => `A ${kind}ter cannot be a generator.`,\n  ),\n\n  ArgumentsInClass: _(\n    \"'arguments' is only allowed in functions and class methods.\",\n  ),\n  AsyncFunctionInSingleStatementContext: _(\n    \"Async functions can only be declared at the top level or inside a block.\",\n  ),\n  AwaitBindingIdentifier: _(\n    \"Can not use 'await' as identifier inside an async function.\",\n  ),\n  AwaitBindingIdentifierInStaticBlock: _(\n    \"Can not use 'await' as identifier inside a static block.\",\n  ),\n  AwaitExpressionFormalParameter: _(\n    \"'await' is not allowed in async function parameters.\",\n  ),\n  AwaitNotInAsyncContext: _(\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  ),\n  AwaitNotInAsyncFunction: _(\"'await' is only allowed within async functions.\"),\n  BadGetterArity: _(\"A 'get' accesor must not have any formal parameters.\"),\n  BadSetterArity: _(\"A 'set' accesor must have exactly one formal parameter.\"),\n  BadSetterRestParameter: _(\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ),\n  ConstructorClassField: _(\"Classes may not have a field named 'constructor'.\"),\n  ConstructorClassPrivateField: _(\n    \"Classes may not have a private field named '#constructor'.\",\n  ),\n  ConstructorIsAccessor: _(\"Class constructor may not be an accessor.\"),\n  ConstructorIsAsync: _(\"Constructor can't be an async function.\"),\n  ConstructorIsGenerator: _(\"Constructor can't be a generator.\"),\n  DeclarationMissingInitializer: _<{| kind: \"const\" | \"destructuring\" |}>(\n    ({ kind }) => `Missing initializer in ${kind} declaration.`,\n  ),\n  DecoratorBeforeExport: _(\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  ),\n  DecoratorConstructor: _(\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  ),\n  DecoratorExportClass: _(\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  ),\n  DecoratorSemicolon: _(\"Decorators must not be followed by a semicolon.\"),\n  DecoratorStaticBlock: _(\"Decorators can't be used with a static block.\"),\n  DeletePrivateField: _(\"Deleting a private field is not allowed.\"),\n  DestructureNamedImport: _(\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  ),\n  DuplicateConstructor: _(\"Duplicate constructor in the same class.\"),\n  DuplicateDefaultExport: _(\"Only one default export allowed per module.\"),\n  DuplicateExport: _<{| exportName: string |}>(\n    ({ exportName }) =>\n      `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  ),\n  DuplicateProto: _(\"Redefinition of __proto__ property.\"),\n  DuplicateRegExpFlags: _(\"Duplicate regular expression flag.\"),\n  ElementAfterRest: _(\"Rest element must be last element.\"),\n  EscapedCharNotAnIdentifier: _(\"Invalid Unicode escape.\"),\n  ExportBindingIsString: _<{| localName: string, exportName: string |}>(\n    ({ localName, exportName }) =>\n      `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ),\n  ExportDefaultFromAsIdentifier: _(\n    \"'from' is not allowed as an identifier after 'export default'.\",\n  ),\n\n  ForInOfLoopInitializer: _<{| type: \"ForInStatement\" | \"ForOfStatement\" |}>(\n    ({ type }) =>\n      `'${\n        type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n      }' loop variable declaration may not have an initializer.`,\n  ),\n\n  ForOfAsync: _(\"The left-hand side of a for-of loop may not be 'async'.\"),\n  ForOfLet: _(\"The left-hand side of a for-of loop may not start with 'let'.\"),\n  GeneratorInSingleStatementContext: _(\n    \"Generators can only be declared at the top level or inside a block.\",\n  ),\n\n  IllegalBreakContinue: _<{| type: \"BreakStatement\" | \"ContinueStatement\" |}>(\n    ({ type }) =>\n      `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  ),\n\n  IllegalLanguageModeDirective: _(\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  ),\n  IllegalReturn: _(\"'return' outside of function.\"),\n  ImportBindingIsString: _<{| importName: string |}>(\n    ({ importName }) =>\n      `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ),\n  ImportCallArgumentTrailingComma: _(\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ),\n  ImportCallArity: _<{| maxArgumentCount: 1 | 2 |}>(\n    ({ maxArgumentCount }) =>\n      `\\`import()\\` requires exactly ${\n        maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n      }.`,\n  ),\n  ImportCallNotNewExpression: _(\"Cannot use new with import(...).\"),\n  ImportCallSpreadArgument: _(\"`...` is not allowed in `import()`.\"),\n  ImportJSONBindingNotDefault: _(\n    \"A JSON module can only be imported with `default`.\",\n  ),\n  IncompatibleRegExpUVFlags: _(\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  ),\n  InvalidBigIntLiteral: _(\"Invalid BigIntLiteral.\"),\n  InvalidCodePoint: _(\"Code point out of bounds.\"),\n  InvalidCoverInitializedName: _(\"Invalid shorthand property initializer.\"),\n  InvalidDecimal: _(\"Invalid decimal.\"),\n  InvalidDigit: _<{| radix: number |}>(\n    ({ radix }) => `Expected number in radix ${radix}.`,\n  ),\n  InvalidEscapeSequence: _(\"Bad character escape sequence.\"),\n  InvalidEscapeSequenceTemplate: _(\"Invalid escape sequence in template.\"),\n  InvalidEscapedReservedWord: _<{| reservedWord: string |}>(\n    ({ reservedWord }) => `Escape sequence in keyword ${reservedWord}.`,\n  ),\n  InvalidIdentifier: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Invalid identifier ${identifierName}.`,\n  ),\n  InvalidLhs: _<{| ancestor: LValAncestor |}>(\n    ({ ancestor }) =>\n      `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  ),\n  InvalidLhsBinding: _<{| ancestor: LValAncestor |}>(\n    ({ ancestor }) =>\n      `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  ),\n  InvalidNumber: _(\"Invalid number.\"),\n  InvalidOrMissingExponent: _(\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  ),\n  InvalidOrUnexpectedToken: _<{| unexpected: string |}>(\n    ({ unexpected }) => `Unexpected character '${unexpected}'.`,\n  ),\n  InvalidParenthesizedAssignment: _(\n    \"Invalid parenthesized assignment pattern.\",\n  ),\n  InvalidPrivateFieldResolution: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Private name #${identifierName} is not defined.`,\n  ),\n  InvalidPropertyBindingPattern: _(\"Binding member expression.\"),\n  InvalidRecordProperty: _(\n    \"Only properties and spread elements are allowed in record definitions.\",\n  ),\n  InvalidRestAssignmentPattern: _(\"Invalid rest operator's argument.\"),\n  LabelRedeclaration: _<{| labelName: string |}>(\n    ({ labelName }) => `Label '${labelName}' is already declared.`,\n  ),\n  LetInLexicalBinding: _(\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  ),\n  LineTerminatorBeforeArrow: _(\"No line break is allowed before '=>'.\"),\n  MalformedRegExpFlags: _(\"Invalid regular expression flag.\"),\n  MissingClassName: _(\"A class name is required.\"),\n  MissingEqInAssignment: _(\n    \"Only '=' operator can be used for specifying default value.\",\n  ),\n  MissingSemicolon: _(\"Missing semicolon.\"),\n  MissingPlugin: _<{| missingPlugin: [string] |}>(\n    ({ missingPlugin }) =>\n      `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n        .map(name => JSON.stringify(name))\n        .join(\", \")}.`,\n  ),\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also), seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: _<{| missingPlugin: string[] |}>(\n    ({ missingPlugin }) =>\n      `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n        .map(name => JSON.stringify(name))\n        .join(\", \")}.`,\n  ),\n  MissingUnicodeEscape: _(\"Expecting Unicode escape sequence \\\\uXXXX.\"),\n  MixingCoalesceWithLogical: _(\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ),\n  ModuleAttributeDifferentFromType: _(\n    \"The only accepted module attribute is `type`.\",\n  ),\n  ModuleAttributeInvalidValue: _(\n    \"Only string literals are allowed as module attribute values.\",\n  ),\n  ModuleAttributesWithDuplicateKeys: _<{| key: string |}>(\n    ({ key }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ),\n  ModuleExportNameHasLoneSurrogate: _<{| surrogateCharCode: number |}>(\n    ({ surrogateCharCode }) =>\n      `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n        16,\n      )}'.`,\n  ),\n  ModuleExportUndefined: _<{| localName: string |}>(\n    ({ localName }) => `Export '${localName}' is not defined.`,\n  ),\n  MultipleDefaultsInSwitch: _(\"Multiple default clauses.\"),\n  NewlineAfterThrow: _(\"Illegal newline after throw.\"),\n  NoCatchOrFinally: _(\"Missing catch or finally clause.\"),\n  NumberIdentifier: _(\"Identifier directly after number.\"),\n  NumericSeparatorInEscapeSequence: _(\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ),\n  ObsoleteAwaitStar: _(\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  ),\n  OptionalChainingNoNew: _(\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  ),\n  OptionalChainingNoTemplate: _(\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  ),\n  OverrideOnConstructor: _(\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ),\n  ParamDupe: _(\"Argument name clash.\"),\n  PatternHasAccessor: _(\"Object pattern can't contain getter or setter.\"),\n  PatternHasMethod: _(\"Object pattern can't contain methods.\"),\n  PrivateInExpectedIn: _<{| identifierName: string |}>(\n    ({ identifierName }) =>\n      `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  ),\n  PrivateNameRedeclaration: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Duplicate private name #${identifierName}.`,\n  ),\n  RecordExpressionBarIncorrectEndSyntaxType: _(\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  RecordExpressionBarIncorrectStartSyntaxType: _(\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  RecordExpressionHashIncorrectStartSyntaxType: _(\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  ),\n  RecordNoProto: _(\"'__proto__' is not allowed in Record expressions.\"),\n  RestTrailingComma: _(\"Unexpected trailing comma after rest element.\"),\n  SloppyFunction: _(\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  ),\n  StaticPrototype: _(\"Classes may not have static property named prototype.\"),\n  SuperNotAllowed: _(\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  ),\n  SuperPrivateField: _(\"Private fields can't be accessed on super.\"),\n  TrailingDecorator: _(\"Decorators must be attached to a class element.\"),\n  TupleExpressionBarIncorrectEndSyntaxType: _(\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  TupleExpressionBarIncorrectStartSyntaxType: _(\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  TupleExpressionHashIncorrectStartSyntaxType: _(\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  ),\n  UnexpectedArgumentPlaceholder: _(\"Unexpected argument placeholder.\"),\n  UnexpectedAwaitAfterPipelineBody: _(\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  ),\n  UnexpectedDigitAfterHash: _(\"Unexpected digit after hash token.\"),\n  UnexpectedImportExport: _(\n    \"'import' and 'export' may only appear at the top level.\",\n  ),\n  UnexpectedKeyword: _<{| keyword: string |}>(\n    ({ keyword }) => `Unexpected keyword '${keyword}'.`,\n  ),\n  UnexpectedLeadingDecorator: _(\n    \"Leading decorators must be attached to a class declaration.\",\n  ),\n  UnexpectedLexicalDeclaration: _(\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  ),\n  UnexpectedNewTarget: _(\n    \"`new.target` can only be used in functions or class properties.\",\n  ),\n  UnexpectedNumericSeparator: _(\n    \"A numeric separator is only allowed between two digits.\",\n  ),\n  UnexpectedPrivateField: _(\"Unexpected private name.\"),\n  UnexpectedReservedWord: _<{| reservedWord: string |}>(\n    ({ reservedWord }) => `Unexpected reserved word '${reservedWord}'.`,\n  ),\n  UnexpectedSuper: _(\"'super' is only allowed in object methods and classes.\"),\n  UnexpectedToken: _<{|\n    expected?: ?string,\n    unexpected?: ?string,\n  |}>(\n    ({ expected, unexpected }) =>\n      `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n        expected ? `, expected \"${expected}\"` : \"\"\n      }`,\n  ),\n  UnexpectedTokenUnaryExponentiation: _(\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  ),\n  UnsupportedBind: _(\"Binding should be performed on object property.\"),\n  UnsupportedDecoratorExport: _(\n    \"A decorated export must export a class declaration.\",\n  ),\n  UnsupportedDefaultExport: _(\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  ),\n  UnsupportedImport: _(\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  ),\n  UnsupportedMetaProperty: _<{|\n    target: string,\n    onlyValidPropertyName: string,\n  |}>(\n    ({ target, onlyValidPropertyName }) =>\n      `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  ),\n  UnsupportedParameterDecorator: _(\n    \"Decorators cannot be used to decorate parameters.\",\n  ),\n  UnsupportedPropertyDecorator: _(\n    \"Decorators cannot be used to decorate object literal properties.\",\n  ),\n  UnsupportedSuper: _(\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  ),\n  UnterminatedComment: _(\"Unterminated comment.\"),\n  UnterminatedRegExp: _(\"Unterminated regular expression.\"),\n  UnterminatedString: _(\"Unterminated string constant.\"),\n  UnterminatedTemplate: _(\"Unterminated template.\"),\n  VarRedeclaration: _<{| identifierName: string |}>(\n    ({ identifierName }) =>\n      `Identifier '${identifierName}' has already been declared.`,\n  ),\n  YieldBindingIdentifier: _(\n    \"Can not use 'yield' as identifier inside a generator.\",\n  ),\n  YieldInParameter: _(\"Yield expression is not allowed in formal parameters.\"),\n  ZeroDigitNumericSeparator: _(\n    \"Numeric separator can not be used after leading 0.\",\n  ),\n});\n", "// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  StrictDelete: _(\"Deleting local variable in strict mode.\"),\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: _<{| referenceName: string |}>(\n    ({ referenceName }) => `Assigning to '${referenceName}' in strict mode.`,\n  ),\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: _<{| bindingName: string |}>(\n    ({ bindingName }) => `Binding '${bindingName}' in strict mode.`,\n  ),\n\n  StrictFunction: _(\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  ),\n  StrictNumericEscape: _(\n    \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  ),\n  StrictOctalLiteral: _(\n    \"Legacy octal literals are not allowed in strict mode.\",\n  ),\n  StrictWith: _(\"'with' in strict mode.\"),\n});\n", "// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\nimport toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set<string>([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n]);\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter: _(\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  ),\n  PipeTopicRequiresHackPipes: _(\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  ),\n  PipeTopicUnbound: _(\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  ),\n  PipeTopicUnconfiguredToken: _<{| token: string |}>(\n    ({ token }) =>\n      `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  ),\n  PipeTopicUnused: _(\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  ),\n  PipeUnparenthesizedBody: _<{| type: string |}>(\n    ({ type }) =>\n      `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n        type,\n      })}; please wrap it in parentheses.`,\n  ),\n\n  // Messages whose codes start with \u201CPipeline\u201D or \u201CPrimaryTopic\u201D\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow: _(\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  ),\n  PipelineBodySequenceExpression: _(\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  ),\n  PipelineHeadSequenceExpression: _(\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  ),\n  PipelineTopicUnused: _(\n    \"Pipeline is in topic style but does not use topic reference.\",\n  ),\n  PrimaryTopicNotAllowed: _(\n    \"Topic reference was used in a lexical context without topic binding.\",\n  ),\n  PrimaryTopicRequiresSmartPipeline: _(\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  ),\n});\n", "// @flow\n\nimport { Position } from \"./util/location\";\nimport type { NodeBase } from \"./types\";\nimport {\n  instantiate,\n  type ParseErrorCode,\n  ParseErrorCodes,\n  type ParseErrorCredentials,\n} from \"./parse-error/credentials\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: string;\n\n  missingPlugin?: string | string[];\n\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = ({\n  loc: Position,\n  details: ErrorDetails,\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails: Object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = { loc: Position, details: ErrorDetails };\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate<ParseError<ErrorDetails>>(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(overrides: { loc?: Position, details?: ErrorDetails } = {}) {\n          const loc = overrides.loc || {};\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get() {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    );\n  };\n}\n\n// This part is tricky. You'll probably notice from the name of this function\n// that it is supposed to return `ParseErrorCredentials`, but instead these.\n// declarations seem to instead imply that they return\n// `ParseErrorConstructor<ErrorDetails>` instead. This is because in Flow we\n// can't easily extract parameter types (either from functions, like with\n// Typescript's Parameters<f> utility type, or from generic types either). As\n// such, this function does double duty: packaging up the credentials during\n// its actual runtime operation, but pretending to return the\n// `ParseErrorConstructor<ErrorDetails>` that we won't actually have until later\n// to the type system, avoiding the need to do so with $ObjMap (which doesn't\n// work) in `ParseErrorEnum`. This hack won't be necessary when we switch to\n// Typescript.\ndeclare function toParseErrorCredentials<T: string>(\n  T,\n  ?{ code?: ParseErrorCode, reasonCode?: string } | boolean,\n): ParseErrorConstructor<{||}>;\n\n// ESLint seems to erroneously think that Flow's overloading syntax is an\n// accidental redeclaration of the function:\n// https://github.com/babel/eslint-plugin-babel/issues/162\n// eslint-disable-next-line no-redeclare\ndeclare function toParseErrorCredentials<ErrorDetails>(\n  (ErrorDetails) => string,\n  ?{ code?: ParseErrorCode, reasonCode?: string } | boolean,\n): ParseErrorConstructor<ErrorDetails>;\n\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\nexport function toParseErrorCredentials(toMessageOrMessage, credentials) {\n  return {\n    toMessage:\n      typeof toMessageOrMessage === \"string\"\n        ? () => toMessageOrMessage\n        : toMessageOrMessage,\n    ...credentials,\n  };\n}\n\n// This is the templated form.\ndeclare function ParseErrorEnum(string[]): typeof ParseErrorEnum;\n\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\ndeclare function ParseErrorEnum<T>(\n  toParseErrorCredentials: (typeof toParseErrorCredentials) => T,\n  syntaxPlugin?: string,\n): T;\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either error\n// messages, or `toMessage` functions that define additional necessary `details`\n// needed by the `ParseError`:\n//\n// ParseErrorEnum`optionalSyntaxPlugin` (_ => ({\n//   ErrorWithStaticMessage: _(\"message\"),\n//   ErrorWithDynamicMessage: _<{ type: string }>(({ type }) => `${type}`),\n// });\n//\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\nexport function ParseErrorEnum(argument, syntaxPlugin) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return toParseErrorCredentialsMap =>\n      ParseErrorEnum(toParseErrorCredentialsMap, argument[0]);\n  }\n\n  const partialCredentials = argument(toParseErrorCredentials);\n  const ParseErrorConstructors = {};\n\n  for (const reasonCode of Object.keys(partialCredentials)) {\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCodes.SyntaxError,\n      reasonCode,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...partialCredentials[reasonCode],\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {|\n  ...ErrorDetails,\n  at: Position | NodeBase,\n|};\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "// @flow\n\nimport { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object, key) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.loc.end);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"Property\" ? \"value\" : super.isValidLVal(type, ...rest);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(...arguments);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T: NodeType>(node: T, type: string, endLoc: Position): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc?: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// @flow\n\n// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "// @flow\nimport { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the \u201Cargument\u201D subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\n// Internally the tokenizer stores token as a number\nexport opaque type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport const tt: { [name: string]: TokenType } = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin\u2019s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    return this.plugins.get(plugin)?.[name];\n  }\n}\n\nexport type PluginConfig = string | [string, { [string]: any }];\n", "// @flow\n\n/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number,\n  end: number,\n  comments: Array<Comment>,\n  leadingNode: Node | null,\n  trailingNode: Node | null,\n  containingNode: Node | null,\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Node, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Node, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Node, comments: Array<Comment>) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Node} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Node,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport { Errors, type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n", "// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser from \"../parser/comments\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: ch => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: ch => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: ch => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: ch =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simplified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    // $FlowIgnore\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const isAllowedSibling =\n      radix === 16\n        ? isAllowedNumericSeparatorSibling.hex\n        : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n        ? isAllowedNumericSeparatorSibling.oct\n        : isAllowedNumericSeparatorSibling.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (!allowNumSeparator) {\n          this.raise(Errors.NumericSeparatorInEscapeSequence, {\n            at: this.state.curPosition(),\n          });\n        } else if (\n          Number.isNaN(next) ||\n          !isAllowedSibling(next) ||\n          forbiddenSiblings.has(prev) ||\n          forbiddenSiblings.has(next)\n        ) {\n          this.raise(Errors.UnexpectedNumericSeparator, {\n            at: this.state.curPosition(),\n          });\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(Errors.InvalidDigit, {\n            at: this.state.curPosition(),\n            radix,\n          });\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(Errors.InvalidCodePoint, { at: this.state.curPosition() });\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc,\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc,\n        });\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    ++this.state.pos; // eat '`' or `}`\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: createPositionWithColumnOffset(this.state.startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === charCodes.graveAccent) {\n        ++this.state.pos; // eat '`'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateTail, containsInvalid ? null : out);\n        return;\n      }\n      if (\n        ch === charCodes.dollarSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.leftCurlyBrace\n      ) {\n        this.state.pos += 2; // eat '${'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateNonTail, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n            // We immediately follow a \"\\\\\", and we're an 8 or a 9, so we must\n            // be on the same line.\n            at: createPositionWithColumnOffset(this.state.curPosition(), -1),\n          });\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          // We immediately follow a \"\\\\\", and we're something between 0 and 7,\n          // so we must be on the same line.\n          const codePos = createPositionWithColumnOffset(\n            this.state.curPosition(),\n            -1,\n          );\n          const match = this.input\n            .slice(this.state.pos - 1, this.state.pos + 2)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n                at: codePos,\n              });\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codeLoc = this.state.curPosition();\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(Errors.InvalidEscapeSequence, { at: codeLoc });\n      } else {\n        this.state.pos = codeLoc.index - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | empty {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: string, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: string[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n}\n", "// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "// @flow\n\nimport { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "// @flow\n\nimport { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport Tokenizer from \"../tokenizer\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\n\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{||}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{||}>,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: ([ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    { at: node }: { at: Node },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{||}>,\n    { at: node }: { at: Node },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n", "// @flow\n\nimport { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(\n    node: Node,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: ?Position): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParseError<any>),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: ?Position = null;\n  doubleProtoLoc: ?Position = null;\n  privateKeyLoc: ?Position = null;\n  optionalParametersLoc: ?Position = null;\n}\n", "// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: { [key: string]: any };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // $FlowIgnore\n  NodePrototype.__clone = function (): Node {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(node: T, type: string, endLoc: Position): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n", "// @flow\n\n/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`(_ => ({\n  AmbiguousConditionalArrow: _(\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  ),\n  AmbiguousDeclareModuleKind: _(\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  ),\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: _<{| reservedType: string |}>(\n    ({ reservedType }) => `Cannot overwrite reserved type ${reservedType}.`,\n  ),\n  DeclareClassElement: _(\n    \"The `declare` modifier can only appear on class fields.\",\n  ),\n  DeclareClassFieldInitializer: _(\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  ),\n  DuplicateDeclareModuleExports: _(\n    \"Duplicate `declare module.exports` statement.\",\n  ),\n  EnumBooleanMemberNotInitialized: _<{|\n    memberName: string,\n    enumName: string,\n  |}>(\n    ({ memberName, enumName }) =>\n      `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumDuplicateMemberName: _<{| memberName: string, enumName: string |}>(\n    ({ memberName, enumName }) =>\n      `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  ),\n  EnumInconsistentMemberValues: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  ),\n  EnumInvalidExplicitType: _<{| invalidEnumType: string, enumName: string |}>(\n    ({ invalidEnumType, enumName }) =>\n      `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidExplicitTypeUnknownSupplied: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  ),\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName, explicitType }) =>\n      // $FlowIgnore (coercing null which never actually happens)\n      `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  ),\n  EnumInvalidMemberInitializerSymbolType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName }) =>\n      `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidMemberInitializerUnknownType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName }) =>\n      `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidMemberName: _<{|\n    enumName: string,\n    memberName: string,\n    suggestion: string,\n  |}>(\n    ({ enumName, memberName, suggestion }) =>\n      `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  ),\n  EnumNumberMemberNotInitialized: _<{|\n    enumName: string,\n    memberName: string,\n  |}>(\n    ({ enumName, memberName }) =>\n      `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumStringMemberInconsistentlyInitailized: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  ),\n  GetterMayNotHaveThisParam: _(\"A getter cannot have a `this` parameter.\"),\n  ImportTypeShorthandOnlyInPureImport: _(\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  ),\n  InexactInsideExact: _(\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  ),\n  InexactInsideNonObject: _(\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  ),\n  InexactVariance: _(\"Explicit inexact syntax cannot have variance.\"),\n  InvalidNonTypeImportInDeclareModule: _(\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  ),\n  MissingTypeParamDefault: _(\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  ),\n  NestedDeclareModule: _(\n    \"`declare module` cannot be used inside another `declare module`.\",\n  ),\n  NestedFlowComment: _(\n    \"Cannot have a flow comment inside another flow comment.\",\n  ),\n  PatternIsOptional: _(\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    !process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {},\n  ),\n  SetterMayNotHaveThisParam: _(\"A setter cannot have a `this` parameter.\"),\n  SpreadVariance: _(\"Spread properties cannot have variance.\"),\n  ThisParamAnnotationRequired: _(\n    \"A type annotation is required for the `this` parameter.\",\n  ),\n  ThisParamBannedInConstructor: _(\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ),\n  ThisParamMayNotBeOptional: _(\"The `this` parameter cannot be optional.\"),\n  ThisParamMustBeFirst: _(\n    \"The `this` parameter must be the first function parameter.\",\n  ),\n  ThisParamNoDefault: _(\"The `this` parameter may not have a default value.\"),\n  TypeBeforeInitializer: _(\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  ),\n  TypeCastInPattern: _(\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  ),\n  UnexpectedExplicitInexactInObject: _(\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  ),\n  UnexpectedReservedType: _<{| reservedType: string |}>(\n    ({ reservedType }) => `Unexpected reserved type ${reservedType}.`,\n  ),\n  UnexpectedReservedUnderscore: _(\n    \"`_` is only allowed as a type argument to call or new.\",\n  ),\n  UnexpectedSpaceBetweenModuloChecks: _(\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  ),\n  UnexpectedSpreadType: _(\n    \"Spread operator cannot appear in class or interface definitions.\",\n  ),\n  UnexpectedSubtractionOperand: _(\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  ),\n  UnexpectedTokenAfterTypeParameter: _(\n    \"Expected an arrow function after this type parameter declaration.\",\n  ),\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: _(\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  ),\n  UnsupportedDeclareExportKind: _<{|\n    unsupportedExportKind: string,\n    suggestion: string,\n  |}>(\n    ({ unsupportedExportKind, suggestion }) =>\n      `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  ),\n  UnsupportedStatementInDeclareModule: _(\n    \"Only declares and type imports are allowed inside declare module.\",\n  ),\n  UnterminatedFlowComment: _(\"Unterminated flow-comment.\"),\n}));\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", loc: Position, value: N.Node |}\n  | {| type: \"string\", loc: Position, value: N.Node |}\n  | {| type: \"boolean\", loc: Position, value: N.Node |}\n  | {| type: \"invalid\", loc: Position |}\n  | {| type: \"none\", loc: Position |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: ?Position = null;\n        let inexactStartLoc: ?Position = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStartLoc: ?Position,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(...arguments);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc?: ?Position,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"TypeCastExpression\" || super.isValidLVal(type, ...rest);\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.loc.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.loc.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.loc.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line no-unused-vars\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: N.Node, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "// @flow\n\nconst entities: { [name: string]: string, __proto__: null } = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n", "// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`(_ => ({\n  AttributeIsEmpty: _(\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  ),\n  MissingClosingTagElement: _<{| openingTagName: string |}>(\n    ({ openingTagName }) =>\n      `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  ),\n  MissingClosingTagFragment: _(\n    \"Expected corresponding JSX closing tag for <>.\",\n  ),\n  UnexpectedSequenceExpression: _(\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  ),\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: _<{| unexpected: string, HTMLEntity: string |}>(\n    ({ unexpected, HTMLEntity }) =>\n      `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  ),\n  UnsupportedJsxValue: _(\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  ),\n  UnterminatedJsxContent: _(\"Unterminated JSX contents.\"),\n  UnwrappedAdjacentJSXElements: _(\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  ),\n}));\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            // $FlowIgnore\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              // $FlowIgnore\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "// @flow\n\nimport { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "// @flow\n\n/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { Position, createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_NONE,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst getOwn = (object, key) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`(_ => ({\n  AbstractMethodHasImplementation: _<{| methodName: string |}>(\n    ({ methodName }) =>\n      `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  ),\n  AbstractPropertyHasInitializer: _<{| propertyName: string |}>(\n    ({ propertyName }) =>\n      `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  ),\n  AccesorCannotDeclareThisParameter: _(\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  ),\n  AccesorCannotHaveTypeParameters: _(\n    \"An accessor cannot have type parameters.\",\n  ),\n  CannotFindName: _<{| name: string |}>(\n    ({ name }) => `Cannot find name '${name}'.`,\n  ),\n  ClassMethodHasDeclare: _(\"Class methods cannot have the 'declare' modifier.\"),\n  ClassMethodHasReadonly: _(\n    \"Class methods cannot have the 'readonly' modifier.\",\n  ),\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: _(\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ),\n  ConstructorHasTypeParameters: _(\n    \"Type parameters cannot appear on a constructor declaration.\",\n  ),\n  DeclareAccessor: _<{| kind: \"get\" | \"set\" |}>(\n    ({ kind }) => `'declare' is not allowed in ${kind}ters.`,\n  ),\n  DeclareClassFieldHasInitializer: _(\n    \"Initializers are not allowed in ambient contexts.\",\n  ),\n  DeclareFunctionHasImplementation: _(\n    \"An implementation cannot be declared in ambient contexts.\",\n  ),\n  DuplicateAccessibilityModifier: _<{| modifier: N.Accessibility |}>(\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line no-unused-vars\n    ({ modifier }) => `Accessibility modifier already seen.`,\n  ),\n  DuplicateModifier: _<{| modifier: TsModifier |}>(\n    ({ modifier }) => `Duplicate modifier: '${modifier}'.`,\n  ),\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: _<{| token: \"extends\" | \"implements\" |}>(\n    ({ token }) => `'${token}' list cannot be empty.`,\n  ),\n  EmptyTypeArguments: _(\"Type argument list cannot be empty.\"),\n  EmptyTypeParameters: _(\"Type parameter list cannot be empty.\"),\n  ExpectedAmbientAfterExportDeclare: _(\n    \"'export declare' must be followed by an ambient declaration.\",\n  ),\n  ImportAliasHasImportType: _(\"An import alias can not use 'import type'.\"),\n  IncompatibleModifiers: _<{| modifiers: [TsModifier, TsModifier] |}>(\n    ({ modifiers }) =>\n      `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  ),\n  IndexSignatureHasAbstract: _(\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  ),\n  IndexSignatureHasAccessibility: _<{| modifier: N.Accessibility |}>(\n    ({ modifier }) =>\n      `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  ),\n  IndexSignatureHasDeclare: _(\n    \"Index signatures cannot have the 'declare' modifier.\",\n  ),\n  IndexSignatureHasOverride: _(\n    \"'override' modifier cannot appear on an index signature.\",\n  ),\n  IndexSignatureHasStatic: _(\n    \"Index signatures cannot have the 'static' modifier.\",\n  ),\n  InitializerNotAllowedInAmbientContext: _(\n    \"Initializers are not allowed in ambient contexts.\",\n  ),\n  InvalidModifierOnTypeMember: _<{| modifier: TsModifier |}>(\n    ({ modifier }) => `'${modifier}' modifier cannot appear on a type member.`,\n  ),\n  InvalidModifierOnTypeParameter: _<{| modifier: TsModifier |}>(\n    ({ modifier }) =>\n      `'${modifier}' modifier cannot appear on a type parameter.`,\n  ),\n  InvalidModifierOnTypeParameterPositions: _<{| modifier: TsModifier |}>(\n    ({ modifier }) =>\n      `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  ),\n  InvalidModifiersOrder: _<{| orderedModifiers: [TsModifier, TsModifier] |}>(\n    ({ orderedModifiers }) =>\n      `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  ),\n  InvalidPropertyAccessAfterInstantiationExpression: _(\n    \"Invalid property access after an instantiation expression. \" +\n      \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  ),\n  InvalidTupleMemberLabel: _(\n    \"Tuple members must be labeled with a simple identifier.\",\n  ),\n  MissingInterfaceName: _(\n    \"'interface' declarations must be followed by an identifier.\",\n  ),\n  MixedLabeledAndUnlabeledElements: _(\n    \"Tuple members must all have names or all not have names.\",\n  ),\n  NonAbstractClassHasAbstractMethod: _(\n    \"Abstract methods can only appear within an abstract class.\",\n  ),\n  NonClassMethodPropertyHasAbstractModifer: _(\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  ),\n  OptionalTypeBeforeRequired: _(\n    \"A required element cannot follow an optional element.\",\n  ),\n  OverrideNotInSubClass: _(\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  ),\n  PatternIsOptional: _(\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  ),\n  PrivateElementHasAbstract: _(\n    \"Private elements cannot have the 'abstract' modifier.\",\n  ),\n  PrivateElementHasAccessibility: _<{| modifier: N.Accessibility |}>(\n    ({ modifier }) =>\n      `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ),\n  ReadonlyForMethodSignature: _(\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ),\n  ReservedArrowTypeParam: _(\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ),\n  ReservedTypeAssertion: _(\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  ),\n  SetAccesorCannotHaveOptionalParameter: _(\n    \"A 'set' accessor cannot have an optional parameter.\",\n  ),\n  SetAccesorCannotHaveRestParameter: _(\n    \"A 'set' accessor cannot have rest parameter.\",\n  ),\n  SetAccesorCannotHaveReturnType: _(\n    \"A 'set' accessor cannot have a return type annotation.\",\n  ),\n  SingleTypeParameterWithoutTrailingComma: _<{| typeParameterName: string |}>(\n    ({ typeParameterName }) =>\n      `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  ),\n  StaticBlockCannotHaveModifier: _(\n    \"Static class blocks cannot have any modifier.\",\n  ),\n  TypeAnnotationAfterAssign: _(\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  ),\n  TypeImportCannotSpecifyDefaultAndNamed: _(\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  ),\n  TypeModifierIsUsedInTypeExports: _(\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  ),\n  TypeModifierIsUsedInTypeImports: _(\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  ),\n  UnexpectedParameterModifier: _(\n    \"A parameter property is only allowed in a constructor implementation.\",\n  ),\n  UnexpectedReadonly: _(\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  ),\n  UnexpectedTypeAnnotation: _(\"Did not expect a type annotation here.\"),\n  UnexpectedTypeCastInParameter: _(\n    \"Unexpected type cast in parameter position.\",\n  ),\n  UnsupportedImportTypeArgument: _(\n    \"Argument in a type import must be a string literal.\",\n  ),\n  UnsupportedParameterPropertyKind: _(\n    \"A parameter property may not be declared using a binding pattern.\",\n  ),\n  UnsupportedSignatureParameterKind: _<{| type: string |}>(\n    ({ type }) =>\n      `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n  ),\n}));\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(modifier: string): boolean %checks {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): ?T {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      stopOnStartOfClassStaticBlock?: boolean,\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any,\n    }): void {\n      const enforceOrder = (loc, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (loc, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): ?(T[]) {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: N.TsTypeParameter,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: ?(node: N.TsTypeParameter) => void,\n    ): ?N.TsTypeParameterDeclaration {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: ?(node: N.TsTypeParameter) => void) {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node: N.TsKeywordType = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node: N.TsExpressionWithTypeArguments = this.startNode();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n      properties: { declare?: true } = {},\n    ): ?N.TsInterfaceDeclaration {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      properties: { const?: true, declare?: true } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return this.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = this.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // $FlowIgnore (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              // $FlowIgnore\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node: N.TsInstantiationExpression = this.startNodeAt(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node: N.TsEnumDeclaration = this.startNode();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(this.startNode());\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ];\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member: any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member: any).accessibility,\n          });\n        }\n        if ((member: any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member: any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: ?N.Declaration =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // $FlowIgnore\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: ?N.TsTypeParameterDeclaration;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(exprList: N.Expression[]): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | ?N.TsInterfaceDeclaration {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: any,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(node[rightOfAsKey], BIND_LEXICAL);\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`(_ => ({\n  ClassNameIsRequired: _(\"A class name is required.\"),\n  UnexpectedSpace: _(\"Unexpected space in placeholder.\"),\n}));\n/* eslint-disable sort-keys */\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"Placeholder\" || super.isValidLVal(type, ...rest);\n    }\n\n    toAssignable(node: N.Node): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(...arguments);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n", "// @flow\n\nimport type Parser from \"./parser\";\nimport type { PluginConfig } from \"./parser/base\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = $ReadOnlyArray<PluginConfig>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\n// This function\u2019s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n", "// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startColumn: number,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n  attachComment: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: ObjectOrClassMember, */\n  /*:: ClassMember, */\n  ObjectMember,\n  /*:: TsNamedTypeElementBase, */\n  /*:: PrivateName, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\n\nconst getOwn = (object, key) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  +parseObjPropValue: (\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => void;\n  +parsePropertyName: (\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ) => Expression | Identifier;\n  +parsePrivateName: () => PrivateName\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc?: ?Position,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(prop: RestElement): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(): ObjectMember | RestElement {\n    const prop = this.startNode();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n\n    return prop;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line no-unused-vars\n    binding: BindingTypes,\n  ) {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor,\n      binding?: BindingTypes,\n      checkClashes?: Set<string> | false,\n      strictModeChanged?: boolean,\n      allowingSloppyLetBinding?: boolean,\n      hasParenthesizedAncestor?: boolean,\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // Flow has difficulty tracking `key` and `expression`, but only if we use\n    // null-proto objects. If we use normal objects, everything works fine.\n    // $FlowIgnore\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts \u2014 that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier } from \"./node\";\n\n/*::\nimport type { SourceType } from \"../options\";\ndeclare var invariant;\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: ?boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, {\n        in: this.finishNode(node, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, optionalChainMember);\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that \u201Ctopic token\u201D.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the \u201Ctopic token\u201D, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token\u2019s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin\u2019s configuration matches the current token\u2019s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin\u2019s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin\u2019s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: N.Node,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin\u2019s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin\u2019s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin\u2019s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration\u2019s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(node: N.Node): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(node: N.Node, isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(startPos, startLoc, val);\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = expression;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  // eslint-disable-next-line no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.NewExpression): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(node: N.NewExpression): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      elem,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return elem;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop: $FlowFixMe).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaLoc: ?Position,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead \u2260 {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaLoc: ?Position,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // $FlowIgnore\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // $FlowIgnore\n                !!node.key\n                  ? node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      { at: node },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      { at: node },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser\u2019s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line no-unused-vars\n    prop: N.ObjectOrClassMember | N.ClassMember,\n  ): void {}\n}\n", "// @flow\n\nimport * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier } from \"./node\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // $FlowIgnore: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = (stmt: any);\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: ?Position,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassProperty> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateProperty> = member;\n    const accessorProp: $FlowSubtype<N.ClassAccessorProperty> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = (prop.key: N.Expression);\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node:\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n      | N.ImportDeclaration,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node:\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n      | N.ImportDeclaration,\n  ) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const { specifiers } = node;\n      if (node.specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier(specifier: N.Node, type: string) {\n    this.checkLVal(specifier.local, {\n      in: specifier,\n      binding: BIND_LEXICAL,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: any,\n    importedIsString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value,\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { getExportedToken, tt as internalTokenTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hoistVariables;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assignmentExpression,\n  expressionStatement,\n  identifier\n} = _t;\nconst visitor = {\n  Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n\n  FunctionParent(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n    const nodes = [];\n    const declarations = path.get(\"declarations\");\n    let firstId;\n\n    for (const declar of declarations) {\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(expressionStatement(assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n      }\n\n      for (const name of Object.keys(declar.getBindingIdentifiers())) {\n        state.emit(identifier(name), name, declar.node.init !== null);\n      }\n    }\n\n    if (path.parentPath.isFor({\n      left: path.node\n    })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n\n};\n\nfunction hoistVariables(path, emit, kind = \"var\") {\n  path.traverse(visitor, {\n    kind,\n    emit\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\nexports.replaceWith = replaceWith;\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isExpression,\n  isProgram,\n  isStatement,\n  removeComments,\n  returnStatement,\n  toSequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n  let ast;\n\n  try {\n    replacement = `(${replacement})`;\n    ast = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  const expressionAST = ast.program.body[0].expression;\n\n  _index.default.removeProperties(expressionAST);\n\n  return this.replaceWith(expressionAST);\n}\n\nfunction replaceWith(replacementPath) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  let replacement = replacementPath instanceof _index2.default ? replacementPath.node : replacementPath;\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const nodesAsSequenceExpression = toSequenceExpression(nodes, this.scope);\n\n  if (nodesAsSequenceExpression) {\n    return this.replaceWith(nodesAsSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluate = evaluate;\nexports.evaluateTruthy = evaluateTruthy;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction isValidCallee(val) {\n  return VALID_CALLEES.includes(val);\n}\n\nfunction isInvalidMethod(val) {\n  return INVALID_METHODS.includes(val);\n}\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && isValidCallee(callee.node.name)) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && isValidCallee(object.node.name) && !isInvalidMethod(property.node.name)) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.normalizeReplacements = normalizeReplacements;\nexports.validate = validate;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = exports.default = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _template = require(\"@babel/template\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  cloneNode,\n  identifier,\n  isAssignmentExpression,\n  isAssignmentPattern,\n  isFunction,\n  isIdentifier,\n  isLiteral,\n  isNullLiteral,\n  isObjectMethod,\n  isObjectProperty,\n  isRegExpLiteral,\n  isRestElement,\n  isTemplateLiteral,\n  isVariableDeclarator,\n  toBindingIdentifierName\n} = _t;\n\nfunction getFunctionArity(node) {\n  const count = node.params.findIndex(param => isAssignmentPattern(param) || isRestElement(param));\n  return count === -1 ? node.params.length : count;\n}\n\nconst buildPropertyMethodAssignmentWrapper = _template.default.statement(`\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n`);\n\nconst buildGeneratorPropertyMethodAssignmentWrapper = _template.default.statement(`\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n`);\n\nconst visitor = {\n  \"ReferencedIdentifier|BindingIdentifier\"(path, state) {\n    if (path.node.name !== state.name) return;\n    const localDeclar = path.scope.getBindingIdentifier(state.name);\n    if (localDeclar !== state.outerDeclar) return;\n    state.selfReference = true;\n    path.stop();\n  }\n\n};\n\nfunction getNameFromLiteralId(id) {\n  if (isNullLiteral(id)) {\n    return \"null\";\n  }\n\n  if (isRegExpLiteral(id)) {\n    return `_${id.pattern}_${id.flags}`;\n  }\n\n  if (isTemplateLiteral(id)) {\n    return id.quasis.map(quasi => quasi.value.raw).join(\"\");\n  }\n\n  if (id.value !== undefined) {\n    return id.value + \"\";\n  }\n\n  return \"\";\n}\n\nfunction wrap(state, method, id, scope) {\n  if (state.selfReference) {\n    if (scope.hasBinding(id.name) && !scope.hasGlobal(id.name)) {\n      scope.rename(id.name);\n    } else {\n      if (!isFunction(method)) return;\n      let build = buildPropertyMethodAssignmentWrapper;\n\n      if (method.generator) {\n        build = buildGeneratorPropertyMethodAssignmentWrapper;\n      }\n\n      const template = build({\n        FUNCTION: method,\n        FUNCTION_ID: id,\n        FUNCTION_KEY: scope.generateUidIdentifier(id.name)\n      }).expression;\n      const params = template.callee.body.body[0].params;\n\n      for (let i = 0, len = getFunctionArity(method); i < len; i++) {\n        params.push(scope.generateUidIdentifier(\"x\"));\n      }\n\n      return template;\n    }\n  }\n\n  method.id = id;\n  scope.getProgramParent().references[id.name] = true;\n}\n\nfunction visit(node, name, scope) {\n  const state = {\n    selfAssignment: false,\n    selfReference: false,\n    outerDeclar: scope.getBindingIdentifier(name),\n    name: name\n  };\n  const binding = scope.getOwnBinding(name);\n\n  if (binding) {\n    if (binding.kind === \"param\") {\n      state.selfReference = true;\n    } else {}\n  } else if (state.outerDeclar || scope.hasGlobal(name)) {\n    scope.traverse(node, visitor, state);\n  }\n\n  return state;\n}\n\nfunction _default({\n  node,\n  parent,\n  scope,\n  id\n}, localBinding = false, supportUnicodeId = false) {\n  if (node.id) return;\n\n  if ((isObjectProperty(parent) || isObjectMethod(parent, {\n    kind: \"method\"\n  })) && (!parent.computed || isLiteral(parent.key))) {\n    id = parent.key;\n  } else if (isVariableDeclarator(parent)) {\n    id = parent.id;\n\n    if (isIdentifier(id) && !localBinding) {\n      const binding = scope.parent.getBinding(id.name);\n\n      if (binding && binding.constant && scope.getBinding(id.name) === binding) {\n        node.id = cloneNode(id);\n        node.id[NOT_LOCAL_BINDING] = true;\n        return;\n      }\n    }\n  } else if (isAssignmentExpression(parent, {\n    operator: \"=\"\n  })) {\n    id = parent.left;\n  } else if (!id) {\n    return;\n  }\n\n  let name;\n\n  if (id && isLiteral(id)) {\n    name = getNameFromLiteralId(id);\n  } else if (id && isIdentifier(id)) {\n    name = id.name;\n  }\n\n  if (name === undefined) {\n    return;\n  }\n\n  if (!supportUnicodeId && isFunction(node) && /[\\uD800-\\uDFFF]/.test(name)) {\n    return;\n  }\n\n  name = toBindingIdentifierName(name);\n  const newId = identifier(name);\n  newId[NOT_LOCAL_BINDING] = true;\n  const state = visit(node, name, scope);\n  return wrap(state, node, newId, scope) || node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.ensureBlock = ensureBlock;\nexports.toComputedKey = toComputedKey;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\n\nvar _t = require(\"@babel/types\");\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _visitors = require(\"../visitors\");\n\nconst {\n  arrowFunctionExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  conditionalExpression,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  jsxIdentifier,\n  logicalExpression,\n  LOGICAL_OPERATORS,\n  memberExpression,\n  metaProperty,\n  numericLiteral,\n  objectExpression,\n  restElement,\n  returnStatement,\n  sequenceExpression,\n  spreadElement,\n  stringLiteral,\n  super: _super,\n  thisExpression,\n  toExpression,\n  unaryExpression\n} = _t;\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (isIdentifier(key)) key = stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const {\n    thisBinding,\n    fnPath: fn\n  } = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  fn.ensureBlock();\n  fn.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : fn.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      fn.parentPath.scope.push({\n        id: checkBinding,\n        init: objectExpression([])\n      });\n    }\n\n    fn.get(\"body\").unshiftContainer(\"body\", expressionStatement(callExpression(this.hub.addHelper(\"newArrowCheck\"), [thisExpression(), checkBinding ? identifier(checkBinding.name) : identifier(thisBinding)])));\n    fn.replaceWith(callExpression(memberExpression((0, _helperFunctionName.default)(this, true) || fn.node, identifier(\"bind\")), [checkBinding ? identifier(checkBinding.name) : thisExpression()]));\n  }\n}\n\nconst getSuperCallsVisitor = (0, _visitors.merge)([{\n  CallExpression(child, {\n    allSuperCalls\n  }) {\n    if (!child.get(\"callee\").isSuper()) return;\n    allSuperCalls.push(child);\n  }\n\n}, _helperEnvironmentVisitor.default]);\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  let arrowParent;\n  let thisEnvFn = fnPath.findParent(p => {\n    if (p.isArrowFunctionExpression()) {\n      var _arrowParent;\n\n      (_arrowParent = arrowParent) != null ? _arrowParent : arrowParent = p;\n      return false;\n    }\n\n    return p.isFunction() || p.isProgram() || p.isClassProperty({\n      static: false\n    }) || p.isClassPrivateProperty({\n      static: false\n    });\n  });\n  const inConstructor = thisEnvFn.isClassMethod({\n    kind: \"constructor\"\n  });\n\n  if (thisEnvFn.isClassProperty() || thisEnvFn.isClassPrivateProperty()) {\n    if (arrowParent) {\n      thisEnvFn = arrowParent;\n    } else if (allowInsertArrow) {\n      fnPath.replaceWith(callExpression(arrowFunctionExpression([], toExpression(fnPath.node)), []));\n      thisEnvFn = fnPath.get(\"callee\");\n      fnPath = thisEnvFn.get(\"body\");\n    } else {\n      throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n    }\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse(getSuperCallsVisitor, {\n      allSuperCalls\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", args()), stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => metaProperty(identifier(\"new\"), identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const superParentPath = superProp.parentPath;\n      const isAssignment = superParentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superParentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superParentPath.node.right;\n        args.push(value);\n      }\n\n      const call = callExpression(identifier(superBinding), args);\n\n      if (isCall) {\n        superParentPath.unshiftContainer(\"arguments\", thisExpression());\n        superProp.replaceWith(memberExpression(call, identifier(\"call\")));\n        thisPaths.push(superParentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superParentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? jsxIdentifier(thisBinding) : identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return {\n    thisBinding,\n    fnPath\n  };\n}\n\nfunction isLogicalOp(op) {\n  return LOGICAL_OPERATORS.includes(op);\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    const isLogicalAssignment = isLogicalOp(op);\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      const object = superProp.node.object;\n      const property = superProp.node.property;\n      assignmentPath.get(\"left\").replaceWith(memberExpression(object, assignmentExpression(\"=\", tmp, property), true));\n      assignmentPath.get(\"right\").replaceWith(rightExpression(isLogicalAssignment ? \"=\" : op, memberExpression(object, identifier(tmp.name), true), value));\n    } else {\n      const object = superProp.node.object;\n      const property = superProp.node.property;\n      assignmentPath.get(\"left\").replaceWith(memberExpression(object, property));\n      assignmentPath.get(\"right\").replaceWith(rightExpression(isLogicalAssignment ? \"=\" : op, memberExpression(object, identifier(property.name)), value));\n    }\n\n    if (isLogicalAssignment) {\n      assignmentPath.replaceWith(logicalExpression(op, assignmentPath.node.left, assignmentPath.node.right));\n    } else {\n      assignmentPath.node.operator = \"=\";\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [assignmentExpression(\"=\", tmp, memberExpression(superProp.node.object, computedKey ? assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), assignmentExpression(\"=\", memberExpression(superProp.node.object, computedKey ? identifier(computedKey.name) : superProp.node.property, superProp.node.computed), binaryExpression(superProp.parentPath.node.operator[0], identifier(tmp.name), numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n\n  function rightExpression(op, left, right) {\n    if (op === \"=\") {\n      return assignmentExpression(\"=\", left, right);\n    } else {\n      return binaryExpression(op, left, right);\n    }\n  }\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nconst assignSuperThisVisitor = (0, _visitors.merge)([{\n  CallExpression(child, {\n    supers,\n    thisBinding\n  }) {\n    if (!child.get(\"callee\").isSuper()) return;\n    if (supers.has(child.node)) return;\n    supers.add(child.node);\n    child.replaceWithMultiple([child.node, assignmentExpression(\"=\", identifier(thisBinding), identifier(\"this\"))]);\n  }\n\n}, _helperEnvironmentVisitor.default]);\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return thisExpression();\n    thisEnvFn.traverse(assignSuperThisVisitor, {\n      supers: new WeakSet(),\n      thisBinding\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return arrowFunctionExpression([restElement(argsBinding)], callExpression(_super(), [spreadElement(identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = memberExpression(_super(), identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = memberExpression(_super(), identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = assignmentExpression(\"=\", fnBody, identifier(valueIdent.name));\n    }\n\n    return arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nconst getScopeInformationVisitor = (0, _visitors.merge)([{\n  ThisExpression(child, {\n    thisPaths\n  }) {\n    thisPaths.push(child);\n  },\n\n  JSXIdentifier(child, {\n    thisPaths\n  }) {\n    if (child.node.name !== \"this\") return;\n\n    if (!child.parentPath.isJSXMemberExpression({\n      object: child.node\n    }) && !child.parentPath.isJSXOpeningElement({\n      name: child.node\n    })) {\n      return;\n    }\n\n    thisPaths.push(child);\n  },\n\n  CallExpression(child, {\n    superCalls\n  }) {\n    if (child.get(\"callee\").isSuper()) superCalls.push(child);\n  },\n\n  MemberExpression(child, {\n    superProps\n  }) {\n    if (child.get(\"object\").isSuper()) superProps.push(child);\n  },\n\n  Identifier(child, {\n    argumentsPaths\n  }) {\n    if (!child.isReferencedIdentifier({\n      name: \"arguments\"\n    })) return;\n    let curr = child.scope;\n\n    do {\n      if (curr.hasOwnBinding(\"arguments\")) {\n        curr.rename(\"arguments\");\n        return;\n      }\n\n      if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n        break;\n      }\n    } while (curr = curr.parent);\n\n    argumentsPaths.push(child);\n  },\n\n  MetaProperty(child, {\n    newTargetPaths\n  }) {\n    if (!child.get(\"meta\").isIdentifier({\n      name: \"new\"\n    })) return;\n    if (!child.get(\"property\").isIdentifier({\n      name: \"target\"\n    })) return;\n    newTargetPaths.push(child);\n  }\n\n}, _helperEnvironmentVisitor.default]);\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse(getScopeInformationVisitor, {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._resolve = _resolve;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.equals = equals;\nexports.getSource = getSource;\nexports.has = has;\nexports.is = void 0;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.isNodeType = isNodeType;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.matchesPattern = matchesPattern;\nexports.referencesImport = referencesImport;\nexports.resolve = resolve;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  STATEMENT_OR_BLOCK_KEYS,\n  VISITOR_KEYS,\n  isBlockStatement,\n  isExpression,\n  isIdentifier,\n  isLiteral,\n  isStringLiteral,\n  isType,\n  matchesPattern: _matchesPattern\n} = _t;\n\nfunction matchesPattern(pattern, allowPartial) {\n  return _matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const {\n      type,\n      container\n    } = path;\n\n    if (!first && (path.isFunction() || type === \"StaticBlock\")) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram() && !path.isDoExpression());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if (this.isJSXMemberExpression() && this.node.property.name === importName || (this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  return _guessExecutionStatusRelativeToCached(this, target, new Map());\n}\n\nfunction _guessExecutionStatusRelativeToCached(base, target, cache) {\n  const funcParent = {\n    this: getOuterFunction(base),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return _guessExecutionStatusRelativeToDifferentFunctionsCached(base, funcParent.target, cache);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: base.getAncestry()\n  };\n  if (paths.target.indexOf(base) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new Set();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctionsInternal(base, target, cache) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    try {\n      const status = _guessExecutionStatusRelativeToCached(base, path, cache);\n\n      if (allStatus && allStatus !== status) {\n        return \"unknown\";\n      } else {\n        allStatus = status;\n      }\n    } finally {\n      executionOrderCheckedNodes.delete(path.node);\n    }\n  }\n\n  return allStatus;\n}\n\nfunction _guessExecutionStatusRelativeToDifferentFunctionsCached(base, target, cache) {\n  let nodeMap = cache.get(base.node);\n\n  if (!nodeMap) {\n    cache.set(base.node, nodeMap = new Map());\n  } else if (nodeMap.has(target.node)) {\n    return nodeMap.get(target.node);\n  }\n\n  const result = _guessExecutionStatusRelativeToDifferentFunctionsInternal(base, target, cache);\n\n  nodeMap.set(target.node, result);\n  return result;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._call = _call;\nexports._getQueueContexts = _getQueueContexts;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncParent = _resyncParent;\nexports._resyncRemoved = _resyncRemoved;\nexports.call = call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.requeue = requeue;\nexports.resync = resync;\nexports.setContext = setContext;\nexports.setKey = setKey;\nexports.setScope = setScope;\nexports.setup = setup;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.visit = visit;\n\nvar _traverseNode = require(\"../traverse-node\");\n\nvar _index = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction restoreContext(path, context) {\n  if (path.context !== context) {\n    path.context = context;\n    path.state = context.state;\n    path.opts = context.opts;\n  }\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  const currentContext = this.context;\n\n  if (this.shouldSkip || this.call(\"enter\")) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  restoreContext(this, currentContext);\n  this.debug(\"Recursing into...\");\n  this.shouldStop = (0, _traverseNode.traverseNode)(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n  restoreContext(this, currentContext);\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n\n  if ((this.key === \"key\" || this.listKey === \"decorators\") && path.isMethod()) {\n    path = path.parentPath;\n  }\n\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n\n  if (this.node === this.container[this.key]) {\n    return;\n  }\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\n\nvar _ = require(\"..\");\n\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._assertUnremoved = _assertUnremoved;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._markRemoved = _markRemoved;\nexports._remove = _remove;\nexports._removeFromScope = _removeFromScope;\nexports.remove = remove;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _t = require(\"@babel/types\");\n\nvar _t2 = _t;\nconst {\n  react\n} = _t;\nconst {\n  cloneNode,\n  jsxExpressionContainer,\n  variableDeclaration,\n  variableDeclarator\n} = _t2;\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._containerInsert = _containerInsert;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._verifyNodeList = _verifyNodeList;\nexports.hoist = hoist;\nexports.insertAfter = insertAfter;\nexports.insertBefore = insertBefore;\nexports.pushContainer = pushContainer;\nexports.unshiftContainer = unshiftContainer;\nexports.updateSiblingKeys = updateSiblingKeys;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  arrowFunctionExpression,\n  assertExpression,\n  assignmentExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  isAssignmentExpression,\n  isCallExpression,\n  isExpression,\n  isIdentifier,\n  isSequenceExpression,\n  isSuper,\n  thisExpression\n} = _t;\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nconst last = arr => arr[arr.length - 1];\n\nfunction isHiddenInSequenceExpression(path) {\n  return isSequenceExpression(path.parent) && (last(path.parent.expressions) !== path.node || isHiddenInSequenceExpression(path.parentPath));\n}\n\nfunction isAlmostConstantAssignment(node, scope) {\n  if (!isAssignmentExpression(node) || !isIdentifier(node.left)) {\n    return false;\n  }\n\n  const blockScope = scope.getBlockParent();\n  return blockScope.hasOwnBinding(node.left.name) && blockScope.getOwnBinding(node.left.name).constantViolations.length <= 1;\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  if (this.isSequenceExpression()) {\n    return last(this.get(\"expressions\")).insertAfter(nodes_);\n  }\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return isExpression(node) ? expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        assertExpression(node);\n        this.replaceWith(callExpression(arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (isHiddenInSequenceExpression(this)) {\n        nodes.unshift(node);\n      } else if (isCallExpression(node) && isSuper(node.callee)) {\n        nodes.unshift(node);\n        nodes.push(thisExpression());\n      } else if (isAlmostConstantAssignment(node, scope)) {\n        nodes.unshift(node);\n        nodes.push(cloneNode(node.left));\n      } else if (scope.isPure(node, true)) {\n        nodes.push(node);\n      } else {\n        if (parentPath.isMethod({\n          computed: true,\n          key: node\n        })) {\n          scope = scope.parent;\n        }\n\n        const temp = scope.generateDeclaredUidIdentifier();\n        nodes.unshift(expressionStatement(assignmentExpression(\"=\", cloneNode(temp), node)));\n        nodes.push(expressionStatement(cloneNode(temp)));\n      }\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.get = get;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getNextSibling = getNextSibling;\nexports.getOpposite = getOpposite;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getPrevSibling = getPrevSibling;\nexports.getSibling = getSibling;\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  getBindingIdentifiers: _getBindingIdentifiers,\n  getOuterBindingIdentifiers: _getOuterBindingIdentifiers,\n  isDeclaration,\n  numericLiteral,\n  unaryExpression\n} = _t;\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) {\n    records.push(..._getCompletionRecords(path, context));\n  }\n\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records.push(...breakCompletions);\n  }\n\n  records.push(...lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(unaryExpression(\"void\", numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  const completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n        newContext.shouldPopulateBreak = true;\n      } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions.push(...lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions.push(...statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions.push(...statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions.push(...statementCompletions);\n      } else {\n        lastNormalCompletions = [];\n\n        for (let i = 0; i < statementCompletions.length; i++) {\n          const c = statementCompletions[i];\n\n          if (c.type === BREAK_COMPLETION) {\n            completions.push(c);\n          }\n\n          if (c.type === NORMAL_COMPLETION) {\n            lastNormalCompletions.push(c);\n          }\n        }\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions.push(...pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    return getStatementListCompletion(path.get(\"body\"), context);\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    return completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    return getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    });\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return _getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return _getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  const search = [path];\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = _getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (isDeclaration(declaration)) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child)) {\n          search.push(...child);\n        } else if (child.node) {\n          search.push(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addComment = addComment;\nexports.addComments = addComments;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment: _addComment,\n  addComments: _addComments\n} = _t;\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  _addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  _addComments(this.node, type, comments);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_STOP = exports.SHOULD_SKIP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  hasNode() {\n    return this.node != null;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n{\n  NodePath.prototype._guessExecutionStatusRelativeToDifferentFunctions = NodePath_introspection._guessExecutionStatusRelativeTo;\n}\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  create(node, container, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.traverseNode = traverseNode;\n\nvar _context = require(\"./context\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction traverseNode(node, opts, scope, state, path, skipKeys) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return false;\n  const context = new _context.default(scope, opts, state, path);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n\n    if (context.visit(node, key)) {\n      return true;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar _t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _traverseNode = require(\"./traverse-node\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nconst {\n  VISITOR_KEYS,\n  removeProperties,\n  traverseFast\n} = _t;\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  (0, _traverseNode.traverseNode)(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, path, skipKeys) {\n  (0, _traverseNode.traverseNode)(node, opts, scope, state, path, skipKeys);\n};\n\ntraverse.clearNode = function (node, opts) {\n  removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"path\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"fs\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"os\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n", "module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n", "'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n", "var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n", "module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n", "var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n", "var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        }\n        return false;\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n", "var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n", "var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n", "var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"module\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "'use strict';\nconst path = require('path');\nconst Module = require('module');\nconst fs = require('fs');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n\tif (typeof fromDir !== 'string') {\n\t\tthrow new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n\t}\n\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n\t}\n\n\ttry {\n\t\tfromDir = fs.realpathSync(fromDir);\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\tfromDir = path.resolve(fromDir);\n\t\t} else if (silent) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tconst fromFile = path.join(fromDir, 'noop.js');\n\n\tconst resolveFileName = () => Module._resolveFilename(moduleId, {\n\t\tid: fromFile,\n\t\tfilename: fromFile,\n\t\tpaths: Module._nodeModulePaths(fromDir)\n\t});\n\n\tif (silent) {\n\t\ttry {\n\t\t\treturn resolveFileName();\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);\n", "'use strict';\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n", "'use strict';\nconst callsites = require('callsites');\n\nmodule.exports = filepath => {\n\tconst stacks = callsites();\n\n\tif (!filepath) {\n\t\treturn stacks[2].getFileName();\n\t}\n\n\tlet seenVal = false;\n\n\t// Skip the first stack as it's this function\n\tstacks.shift();\n\n\tfor (const stack of stacks) {\n\t\tconst parentFilepath = stack.getFileName();\n\n\t\tif (typeof parentFilepath !== 'string') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (parentFilepath === filepath) {\n\t\t\tseenVal = true;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Skip native modules\n\t\tif (parentFilepath === 'module.js') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (seenVal && parentFilepath !== filepath) {\n\t\t\treturn parentFilepath;\n\t\t}\n\t}\n};\n", "'use strict';\nconst path = require('path');\nconst resolveFrom = require('resolve-from');\nconst parentModule = require('parent-module');\n\nmodule.exports = moduleId => {\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tconst parentPath = parentModule(__filename);\n\n\tconst cwd = parentPath ? path.dirname(parentPath) : __dirname;\n\tconst filePath = resolveFrom(cwd, moduleId);\n\n\tconst oldModule = require.cache[filePath];\n\t// Delete itself from module parent\n\tif (oldModule && oldModule.parent) {\n\t\tlet i = oldModule.parent.children.length;\n\n\t\twhile (i--) {\n\t\t\tif (oldModule.parent.children[i].id === filePath) {\n\t\t\t\toldModule.parent.children.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete require.cache[filePath]; // Delete module from cache\n\n\tconst parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step\n\n\treturn parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require\n};\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"util\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj) {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && obj.splice instanceof Function);\n};\n", "'use strict';\n\nvar util = require('util');\nvar isArrayish = require('is-arrayish');\n\nvar errorEx = function errorEx(name, properties) {\n\tif (!name || name.constructor !== String) {\n\t\tproperties = name || {};\n\t\tname = Error.name;\n\t}\n\n\tvar errorExError = function ErrorEXError(message) {\n\t\tif (!this) {\n\t\t\treturn new ErrorEXError(message);\n\t\t}\n\n\t\tmessage = message instanceof Error\n\t\t\t? message.message\n\t\t\t: (message || this.message);\n\n\t\tError.call(this, message);\n\t\tError.captureStackTrace(this, errorExError);\n\n\t\tthis.name = name;\n\n\t\tObject.defineProperty(this, 'message', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: function () {\n\t\t\t\tvar newMessage = message.split(/\\r?\\n/g);\n\n\t\t\t\tfor (var key in properties) {\n\t\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\t\tif ('message' in modifier) {\n\t\t\t\t\t\tnewMessage = modifier.message(this[key], newMessage) || newMessage;\n\t\t\t\t\t\tif (!isArrayish(newMessage)) {\n\t\t\t\t\t\t\tnewMessage = [newMessage];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newMessage.join('\\n');\n\t\t\t},\n\t\t\tset: function (v) {\n\t\t\t\tmessage = v;\n\t\t\t}\n\t\t});\n\n\t\tvar overwrittenStack = null;\n\n\t\tvar stackDescriptor = Object.getOwnPropertyDescriptor(this, 'stack');\n\t\tvar stackGetter = stackDescriptor.get;\n\t\tvar stackValue = stackDescriptor.value;\n\t\tdelete stackDescriptor.value;\n\t\tdelete stackDescriptor.writable;\n\n\t\tstackDescriptor.set = function (newstack) {\n\t\t\toverwrittenStack = newstack;\n\t\t};\n\n\t\tstackDescriptor.get = function () {\n\t\t\tvar stack = (overwrittenStack || ((stackGetter)\n\t\t\t\t? stackGetter.call(this)\n\t\t\t\t: stackValue)).split(/\\r?\\n+/g);\n\n\t\t\t// starting in Node 7, the stack builder caches the message.\n\t\t\t// just replace it.\n\t\t\tif (!overwrittenStack) {\n\t\t\t\tstack[0] = this.name + ': ' + this.message;\n\t\t\t}\n\n\t\t\tvar lineCount = 1;\n\t\t\tfor (var key in properties) {\n\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\tif ('line' in modifier) {\n\t\t\t\t\tvar line = modifier.line(this[key]);\n\t\t\t\t\tif (line) {\n\t\t\t\t\t\tstack.splice(lineCount++, 0, '    ' + line);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ('stack' in modifier) {\n\t\t\t\t\tmodifier.stack(this[key], stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stack.join('\\n');\n\t\t};\n\n\t\tObject.defineProperty(this, 'stack', stackDescriptor);\n\t};\n\n\tif (Object.setPrototypeOf) {\n\t\tObject.setPrototypeOf(errorExError.prototype, Error.prototype);\n\t\tObject.setPrototypeOf(errorExError, Error);\n\t} else {\n\t\tutil.inherits(errorExError, Error);\n\t}\n\n\treturn errorExError;\n};\n\nerrorEx.append = function (str, def) {\n\treturn {\n\t\tmessage: function (v, message) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\tmessage[0] += ' ' + str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn message;\n\t\t}\n\t};\n};\n\nerrorEx.line = function (str, def) {\n\treturn {\n\t\tline: function (v) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\treturn str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t};\n};\n\nmodule.exports = errorEx;\n", "'use strict'\n\nconst hexify = char => {\n  const h = char.charCodeAt(0).toString(16).toUpperCase()\n  return '0x' + (h.length % 2 ? '0' : '') + h\n}\n\nconst parseError = (e, txt, context) => {\n  if (!txt) {\n    return {\n      message: e.message + ' while parsing empty string',\n      position: 0,\n    }\n  }\n  const badToken = e.message.match(/^Unexpected token (.) .*position\\s+(\\d+)/i)\n  const errIdx = badToken ? +badToken[2]\n    : e.message.match(/^Unexpected end of JSON.*/i) ? txt.length - 1\n    : null\n\n  const msg = badToken ? e.message.replace(/^Unexpected token ./, `Unexpected token ${\n      JSON.stringify(badToken[1])\n    } (${hexify(badToken[1])})`)\n    : e.message\n\n  if (errIdx !== null && errIdx !== undefined) {\n    const start = errIdx <= context ? 0\n      : errIdx - context\n\n    const end = errIdx + context >= txt.length ? txt.length\n      : errIdx + context\n\n    const slice = (start === 0 ? '' : '...') +\n      txt.slice(start, end) +\n      (end === txt.length ? '' : '...')\n\n    const near = txt === slice ? '' : 'near '\n\n    return {\n      message: msg + ` while parsing ${near}${JSON.stringify(slice)}`,\n      position: errIdx,\n    }\n  } else {\n    return {\n      message: msg + ` while parsing '${txt.slice(0, context * 2)}'`,\n      position: 0,\n    }\n  }\n}\n\nclass JSONParseError extends SyntaxError {\n  constructor (er, txt, context, caller) {\n    context = context || 20\n    const metadata = parseError(er, txt, context)\n    super(metadata.message)\n    Object.assign(this, metadata)\n    this.code = 'EJSONPARSE'\n    this.systemError = er\n    Error.captureStackTrace(this, caller || this.constructor)\n  }\n  get name () { return this.constructor.name }\n  set name (n) {}\n  get [Symbol.toStringTag] () { return this.constructor.name }\n}\n\nconst kIndent = Symbol.for('indent')\nconst kNewline = Symbol.for('newline')\n// only respect indentation if we got a line break, otherwise squash it\n// things other than objects and arrays aren't indented, so ignore those\n// Important: in both of these regexps, the $1 capture group is the newline\n// or undefined, and the $2 capture group is the indent, or undefined.\nconst formatRE = /^\\s*[{\\[]((?:\\r?\\n)+)([\\s\\t]*)/\nconst emptyRE = /^(?:\\{\\}|\\[\\])((?:\\r?\\n)+)?$/\n\nconst parseJson = (txt, reviver, context) => {\n  const parseText = stripBOM(txt)\n  context = context || 20\n  try {\n    // get the indentation so that we can save it back nicely\n    // if the file starts with {\" then we have an indent of '', ie, none\n    // otherwise, pick the indentation of the next line after the first \\n\n    // If the pattern doesn't match, then it means no indentation.\n    // JSON.stringify ignores symbols, so this is reasonably safe.\n    // if the string is '{}' or '[]', then use the default 2-space indent.\n    const [, newline = '\\n', indent = '  '] = parseText.match(emptyRE) ||\n      parseText.match(formatRE) ||\n      [, '', '']\n\n    const result = JSON.parse(parseText, reviver)\n    if (result && typeof result === 'object') {\n      result[kNewline] = newline\n      result[kIndent] = indent\n    }\n    return result\n  } catch (e) {\n    if (typeof txt !== 'string' && !Buffer.isBuffer(txt)) {\n      const isEmptyArray = Array.isArray(txt) && txt.length === 0\n      throw Object.assign(new TypeError(\n        `Cannot parse ${isEmptyArray ? 'an empty array' : String(txt)}`\n      ), {\n        code: 'EJSONPARSE',\n        systemError: e,\n      })\n    }\n\n    throw new JSONParseError(e, parseText, context, parseJson)\n  }\n}\n\n// Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n// because the buffer-to-string conversion in `fs.readFileSync()`\n// translates it to FEFF, the UTF-16 BOM.\nconst stripBOM = txt => String(txt).replace(/^\\uFEFF/, '')\n\nmodule.exports = parseJson\nparseJson.JSONParseError = JSONParseError\n\nparseJson.noExceptions = (txt, reviver) => {\n  try {\n    return JSON.parse(stripBOM(txt), reviver)\n  } catch (e) {}\n}\n", "\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n", "'use strict';\nconst errorEx = require('error-ex');\nconst fallback = require('json-parse-even-better-errors');\nconst {default: LinesAndColumns} = require('lines-and-columns');\nconst {codeFrameColumns} = require('@babel/code-frame');\n\nconst JSONError = errorEx('JSONError', {\n\tfileName: errorEx.append('in %s'),\n\tcodeFrame: errorEx.append('\\n\\n%s\\n')\n});\n\nconst parseJson = (string, reviver, filename) => {\n\tif (typeof reviver === 'string') {\n\t\tfilename = reviver;\n\t\treviver = null;\n\t}\n\n\ttry {\n\t\ttry {\n\t\t\treturn JSON.parse(string, reviver);\n\t\t} catch (error) {\n\t\t\tfallback(string, reviver);\n\t\t\tthrow error;\n\t\t}\n\t} catch (error) {\n\t\terror.message = error.message.replace(/\\n/g, '');\n\t\tconst indexMatch = error.message.match(/in JSON at position (\\d+) while parsing/);\n\n\t\tconst jsonError = new JSONError(error);\n\t\tif (filename) {\n\t\t\tjsonError.fileName = filename;\n\t\t}\n\n\t\tif (indexMatch && indexMatch.length > 0) {\n\t\t\tconst lines = new LinesAndColumns(string);\n\t\t\tconst index = Number(indexMatch[1]);\n\t\t\tconst location = lines.locationForIndex(index);\n\n\t\t\tconst codeFrame = codeFrameColumns(\n\t\t\t\tstring,\n\t\t\t\t{start: {line: location.line + 1, column: location.column + 1}},\n\t\t\t\t{highlightCode: true}\n\t\t\t);\n\n\t\t\tjsonError.codeFrame = codeFrame;\n\t\t}\n\n\t\tthrow jsonError;\n\t}\n};\n\nparseJson.JSONError = JSONError;\n\nmodule.exports = parseJson;\n", "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar Char = {\n  ANCHOR: '&',\n  COMMENT: '#',\n  TAG: '!',\n  DIRECTIVES_END: '-',\n  DOCUMENT_END: '.'\n};\nvar Type = {\n  ALIAS: 'ALIAS',\n  BLANK_LINE: 'BLANK_LINE',\n  BLOCK_FOLDED: 'BLOCK_FOLDED',\n  BLOCK_LITERAL: 'BLOCK_LITERAL',\n  COMMENT: 'COMMENT',\n  DIRECTIVE: 'DIRECTIVE',\n  DOCUMENT: 'DOCUMENT',\n  FLOW_MAP: 'FLOW_MAP',\n  FLOW_SEQ: 'FLOW_SEQ',\n  MAP: 'MAP',\n  MAP_KEY: 'MAP_KEY',\n  MAP_VALUE: 'MAP_VALUE',\n  PLAIN: 'PLAIN',\n  QUOTE_DOUBLE: 'QUOTE_DOUBLE',\n  QUOTE_SINGLE: 'QUOTE_SINGLE',\n  SEQ: 'SEQ',\n  SEQ_ITEM: 'SEQ_ITEM'\n};\nvar defaultTagPrefix = 'tag:yaml.org,2002:';\nvar defaultTags = {\n  MAP: 'tag:yaml.org,2002:map',\n  SEQ: 'tag:yaml.org,2002:seq',\n  STR: 'tag:yaml.org,2002:str'\n};\n\nfunction findLineStarts(src) {\n  var ls = [0];\n  var offset = src.indexOf('\\n');\n\n  while (offset !== -1) {\n    offset += 1;\n    ls.push(offset);\n    offset = src.indexOf('\\n', offset);\n  }\n\n  return ls;\n}\n\nfunction getSrcInfo(cst) {\n  var lineStarts, src;\n\n  if (typeof cst === 'string') {\n    lineStarts = findLineStarts(cst);\n    src = cst;\n  } else {\n    if (Array.isArray(cst)) cst = cst[0];\n\n    if (cst && cst.context) {\n      if (!cst.lineStarts) cst.lineStarts = findLineStarts(cst.context.src);\n      lineStarts = cst.lineStarts;\n      src = cst.context.src;\n    }\n  }\n\n  return {\n    lineStarts: lineStarts,\n    src: src\n  };\n}\n/**\n * @typedef {Object} LinePos - One-indexed position in the source\n * @property {number} line\n * @property {number} col\n */\n\n/**\n * Determine the line/col position matching a character offset.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns a one-indexed `{ line, col }` location if found, or\n * `undefined` otherwise.\n *\n * @param {number} offset\n * @param {string|Document|Document[]} cst\n * @returns {?LinePos}\n */\n\n\nfunction getLinePos(offset, cst) {\n  if (typeof offset !== 'number' || offset < 0) return null;\n\n  var _getSrcInfo = getSrcInfo(cst),\n      lineStarts = _getSrcInfo.lineStarts,\n      src = _getSrcInfo.src;\n\n  if (!lineStarts || !src || offset > src.length) return null;\n\n  for (var i = 0; i < lineStarts.length; ++i) {\n    var start = lineStarts[i];\n\n    if (offset < start) {\n      return {\n        line: i,\n        col: offset - lineStarts[i - 1] + 1\n      };\n    }\n\n    if (offset === start) return {\n      line: i + 1,\n      col: 1\n    };\n  }\n\n  var line = lineStarts.length;\n  return {\n    line: line,\n    col: offset - lineStarts[line - 1] + 1\n  };\n}\n/**\n * Get a specified line from the source.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns the line as a string if found, or `null` otherwise.\n *\n * @param {number} line One-indexed line number\n * @param {string|Document|Document[]} cst\n * @returns {?string}\n */\n\nfunction getLine(line, cst) {\n  var _getSrcInfo2 = getSrcInfo(cst),\n      lineStarts = _getSrcInfo2.lineStarts,\n      src = _getSrcInfo2.src;\n\n  if (!lineStarts || !(line >= 1) || line > lineStarts.length) return null;\n  var start = lineStarts[line - 1];\n  var end = lineStarts[line]; // undefined for last line; that's ok for slice()\n\n  while (end && end > start && src[end - 1] === '\\n') {\n    --end;\n  }\n\n  return src.slice(start, end);\n}\n/**\n * Pretty-print the starting line from the source indicated by the range `pos`\n *\n * Trims output to `maxWidth` chars while keeping the starting column visible,\n * using `\u2026` at either end to indicate dropped characters.\n *\n * Returns a two-line string (or `null`) with `\\n` as separator; the second line\n * will hold appropriately indented `^` marks indicating the column range.\n *\n * @param {Object} pos\n * @param {LinePos} pos.start\n * @param {LinePos} [pos.end]\n * @param {string|Document|Document[]*} cst\n * @param {number} [maxWidth=80]\n * @returns {?string}\n */\n\nfunction getPrettyContext(_ref, cst) {\n  var start = _ref.start,\n      end = _ref.end;\n  var maxWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;\n  var src = getLine(start.line, cst);\n  if (!src) return null;\n  var col = start.col;\n\n  if (src.length > maxWidth) {\n    if (col <= maxWidth - 10) {\n      src = src.substr(0, maxWidth - 1) + '\u2026';\n    } else {\n      var halfWidth = Math.round(maxWidth / 2);\n      if (src.length > col + halfWidth) src = src.substr(0, col + halfWidth - 1) + '\u2026';\n      col -= src.length - maxWidth;\n      src = '\u2026' + src.substr(1 - maxWidth);\n    }\n  }\n\n  var errLen = 1;\n  var errEnd = '';\n\n  if (end) {\n    if (end.line === start.line && col + (end.col - start.col) <= maxWidth + 1) {\n      errLen = end.col - start.col;\n    } else {\n      errLen = Math.min(src.length + 1, maxWidth) - col;\n      errEnd = '\u2026';\n    }\n  }\n\n  var offset = col > 1 ? ' '.repeat(col - 1) : '';\n  var err = '^'.repeat(errLen);\n  return \"\".concat(src, \"\\n\").concat(offset).concat(err).concat(errEnd);\n}\n\nvar Range = /*#__PURE__*/function () {\n  function Range(start, end) {\n    _classCallCheck(this, Range);\n\n    this.start = start;\n    this.end = end || start;\n  }\n\n  _createClass(Range, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return typeof this.start !== 'number' || !this.end || this.end <= this.start;\n    }\n    /**\n     * Set `origStart` and `origEnd` to point to the original source range for\n     * this node, which may differ due to dropped CR characters.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRange\",\n    value: function setOrigRange(cr, offset) {\n      var start = this.start,\n          end = this.end;\n\n      if (cr.length === 0 || end <= cr[0]) {\n        this.origStart = start;\n        this.origEnd = end;\n        return offset;\n      }\n\n      var i = offset;\n\n      while (i < cr.length) {\n        if (cr[i] > start) break;else ++i;\n      }\n\n      this.origStart = start + i;\n      var nextOffset = i;\n\n      while (i < cr.length) {\n        // if end was at \\n, it should now be at \\r\n        if (cr[i] >= end) break;else ++i;\n      }\n\n      this.origEnd = end + i;\n      return nextOffset;\n    }\n  }], [{\n    key: \"copy\",\n    value: function copy(orig) {\n      return new Range(orig.start, orig.end);\n    }\n  }]);\n\n  return Range;\n}();\n\n/** Root class of all nodes */\n\nvar Node = /*#__PURE__*/function () {\n  function Node(type, props, context) {\n    _classCallCheck(this, Node);\n\n    Object.defineProperty(this, 'context', {\n      value: context || null,\n      writable: true\n    });\n    this.error = null;\n    this.range = null;\n    this.valueRange = null;\n    this.props = props || [];\n    this.type = type;\n    this.value = null;\n  }\n\n  _createClass(Node, [{\n    key: \"getPropValue\",\n    value: function getPropValue(idx, key, skipKey) {\n      if (!this.context) return null;\n      var src = this.context.src;\n      var prop = this.props[idx];\n      return prop && src[prop.start] === key ? src.slice(prop.start + (skipKey ? 1 : 0), prop.end) : null;\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var anchor = this.getPropValue(i, Char.ANCHOR, true);\n        if (anchor != null) return anchor;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"comment\",\n    get: function get() {\n      var comments = [];\n\n      for (var i = 0; i < this.props.length; ++i) {\n        var comment = this.getPropValue(i, Char.COMMENT, true);\n        if (comment != null) comments.push(comment);\n      }\n\n      return comments.length > 0 ? comments.join('\\n') : null;\n    }\n  }, {\n    key: \"commentHasRequiredWhitespace\",\n    value: function commentHasRequiredWhitespace(start) {\n      var src = this.context.src;\n      if (this.header && start === this.header.end) return false;\n      if (!this.valueRange) return false;\n      var end = this.valueRange.end;\n      return start !== end || Node.atBlank(src, end - 1);\n    }\n  }, {\n    key: \"hasComment\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] === Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"hasProps\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] !== Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"jsonLike\",\n    get: function get() {\n      var jsonLikeTypes = [Type.FLOW_MAP, Type.FLOW_SEQ, Type.QUOTE_DOUBLE, Type.QUOTE_SINGLE];\n      return jsonLikeTypes.indexOf(this.type) !== -1;\n    }\n  }, {\n    key: \"rangeAsLinePos\",\n    get: function get() {\n      if (!this.range || !this.context) return undefined;\n      var start = getLinePos(this.range.start, this.context.root);\n      if (!start) return undefined;\n      var end = getLinePos(this.range.end, this.context.root);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }, {\n    key: \"rawValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      return this.context.src.slice(start, end);\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var tag = this.getPropValue(i, Char.TAG, false);\n\n        if (tag != null) {\n          if (tag[1] === '<') {\n            return {\n              verbatim: tag.slice(2, -1)\n            };\n          } else {\n            // eslint-disable-next-line no-unused-vars\n            var _tag$match = tag.match(/^(.*!)([^!]*)$/),\n                _tag$match2 = _slicedToArray(_tag$match, 3);\n                _tag$match2[0];\n                var handle = _tag$match2[1],\n                suffix = _tag$match2[2];\n\n            return {\n              handle: handle,\n              suffix: suffix\n            };\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"valueRangeContainsNewline\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return false;\n      var _this$valueRange2 = this.valueRange,\n          start = _this$valueRange2.start,\n          end = _this$valueRange2.end;\n      var src = this.context.src;\n\n      for (var i = start; i < end; ++i) {\n        if (src[i] === '\\n') return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseComment\",\n    value: function parseComment(start) {\n      var src = this.context.src;\n\n      if (src[start] === Char.COMMENT) {\n        var end = Node.endOfLine(src, start + 1);\n        var commentRange = new Range(start, end);\n        this.props.push(commentRange);\n        return end;\n      }\n\n      return start;\n    }\n    /**\n     * Populates the `origStart` and `origEnd` values of all ranges for this\n     * node. Extended by child classes to handle descendant nodes.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      if (this.range) offset = this.range.setOrigRange(cr, offset);\n      if (this.valueRange) this.valueRange.setOrigRange(cr, offset);\n      this.props.forEach(function (prop) {\n        return prop.setOrigRange(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }], [{\n    key: \"addStringTerminator\",\n    value: function addStringTerminator(src, offset, str) {\n      if (str[str.length - 1] === '\\n') return str;\n      var next = Node.endOfWhiteSpace(src, offset);\n      return next >= src.length || src[next] === '\\n' ? str + '\\n' : str;\n    } // ^(---|...)\n\n  }, {\n    key: \"atDocumentBoundary\",\n    value: function atDocumentBoundary(src, offset, sep) {\n      var ch0 = src[offset];\n      if (!ch0) return true;\n      var prev = src[offset - 1];\n      if (prev && prev !== '\\n') return false;\n\n      if (sep) {\n        if (ch0 !== sep) return false;\n      } else {\n        if (ch0 !== Char.DIRECTIVES_END && ch0 !== Char.DOCUMENT_END) return false;\n      }\n\n      var ch1 = src[offset + 1];\n      var ch2 = src[offset + 2];\n      if (ch1 !== ch0 || ch2 !== ch0) return false;\n      var ch3 = src[offset + 3];\n      return !ch3 || ch3 === '\\n' || ch3 === '\\t' || ch3 === ' ';\n    }\n  }, {\n    key: \"endOfIdentifier\",\n    value: function endOfIdentifier(src, offset) {\n      var ch = src[offset];\n      var isVerbatim = ch === '<';\n      var notOk = isVerbatim ? ['\\n', '\\t', ' ', '>'] : ['\\n', '\\t', ' ', '[', ']', '{', '}', ','];\n\n      while (ch && notOk.indexOf(ch) === -1) {\n        ch = src[offset += 1];\n      }\n\n      if (isVerbatim && ch === '>') offset += 1;\n      return offset;\n    }\n  }, {\n    key: \"endOfIndent\",\n    value: function endOfIndent(src, offset) {\n      var ch = src[offset];\n\n      while (ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfLine\",\n    value: function endOfLine(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfWhiteSpace\",\n    value: function endOfWhiteSpace(src, offset) {\n      var ch = src[offset];\n\n      while (ch === '\\t' || ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"startOfLine\",\n    value: function startOfLine(src, offset) {\n      var ch = src[offset - 1];\n      if (ch === '\\n') return offset;\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset -= 1];\n      }\n\n      return offset + 1;\n    }\n    /**\n     * End of indentation, or null if the line's indent level is not more\n     * than `indent`\n     *\n     * @param {string} src\n     * @param {number} indent\n     * @param {number} lineStart\n     * @returns {?number}\n     */\n\n  }, {\n    key: \"endOfBlockIndent\",\n    value: function endOfBlockIndent(src, indent, lineStart) {\n      var inEnd = Node.endOfIndent(src, lineStart);\n\n      if (inEnd > lineStart + indent) {\n        return inEnd;\n      } else {\n        var wsEnd = Node.endOfWhiteSpace(src, inEnd);\n        var ch = src[wsEnd];\n        if (!ch || ch === '\\n') return wsEnd;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"atBlank\",\n    value: function atBlank(src, offset, endAsBlank) {\n      var ch = src[offset];\n      return ch === '\\n' || ch === '\\t' || ch === ' ' || endAsBlank && !ch;\n    }\n  }, {\n    key: \"nextNodeIsIndented\",\n    value: function nextNodeIsIndented(ch, indentDiff, indicatorAsIndent) {\n      if (!ch || indentDiff < 0) return false;\n      if (indentDiff > 0) return true;\n      return indicatorAsIndent && ch === '-';\n    } // should be at line or string end, or at next non-whitespace char\n\n  }, {\n    key: \"normalizeOffset\",\n    value: function normalizeOffset(src, offset) {\n      var ch = src[offset];\n      return !ch ? offset : ch !== '\\n' && src[offset - 1] === '\\n' ? offset - 1 : Node.endOfWhiteSpace(src, offset);\n    } // fold single newline into space, multiple newlines to N - 1 newlines\n    // presumes src[offset] === '\\n'\n\n  }, {\n    key: \"foldNewline\",\n    value: function foldNewline(src, offset, indent) {\n      var inCount = 0;\n      var error = false;\n      var fold = '';\n      var ch = src[offset + 1];\n\n      while (ch === ' ' || ch === '\\t' || ch === '\\n') {\n        switch (ch) {\n          case '\\n':\n            inCount = 0;\n            offset += 1;\n            fold += '\\n';\n            break;\n\n          case '\\t':\n            if (inCount <= indent) error = true;\n            offset = Node.endOfWhiteSpace(src, offset + 2) - 1;\n            break;\n\n          case ' ':\n            inCount += 1;\n            offset += 1;\n            break;\n        }\n\n        ch = src[offset + 1];\n      }\n\n      if (!fold) fold = ' ';\n      if (ch && inCount <= indent) error = true;\n      return {\n        fold: fold,\n        offset: offset,\n        error: error\n      };\n    }\n  }]);\n\n  return Node;\n}();\n\nvar YAMLError = /*#__PURE__*/function (_Error) {\n  _inherits(YAMLError, _Error);\n\n  var _super = _createSuper(YAMLError);\n\n  function YAMLError(name, source, message) {\n    var _this;\n\n    _classCallCheck(this, YAMLError);\n\n    if (!message || !(source instanceof Node)) throw new Error(\"Invalid arguments for new \".concat(name));\n    _this = _super.call(this);\n    _this.name = name;\n    _this.message = message;\n    _this.source = source;\n    return _this;\n  }\n\n  _createClass(YAMLError, [{\n    key: \"makePretty\",\n    value: function makePretty() {\n      if (!this.source) return;\n      this.nodeType = this.source.type;\n      var cst = this.source.context && this.source.context.root;\n\n      if (typeof this.offset === 'number') {\n        this.range = new Range(this.offset, this.offset + 1);\n        var start = cst && getLinePos(this.offset, cst);\n\n        if (start) {\n          var end = {\n            line: start.line,\n            col: start.col + 1\n          };\n          this.linePos = {\n            start: start,\n            end: end\n          };\n        }\n\n        delete this.offset;\n      } else {\n        this.range = this.source.range;\n        this.linePos = this.source.rangeAsLinePos;\n      }\n\n      if (this.linePos) {\n        var _this$linePos$start = this.linePos.start,\n            line = _this$linePos$start.line,\n            col = _this$linePos$start.col;\n        this.message += \" at line \".concat(line, \", column \").concat(col);\n        var ctx = cst && getPrettyContext(this.linePos, cst);\n        if (ctx) this.message += \":\\n\\n\".concat(ctx, \"\\n\");\n      }\n\n      delete this.source;\n    }\n  }]);\n\n  return YAMLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar YAMLReferenceError = /*#__PURE__*/function (_YAMLError) {\n  _inherits(YAMLReferenceError, _YAMLError);\n\n  var _super2 = _createSuper(YAMLReferenceError);\n\n  function YAMLReferenceError(source, message) {\n    _classCallCheck(this, YAMLReferenceError);\n\n    return _super2.call(this, 'YAMLReferenceError', source, message);\n  }\n\n  return YAMLReferenceError;\n}(YAMLError);\nvar YAMLSemanticError = /*#__PURE__*/function (_YAMLError2) {\n  _inherits(YAMLSemanticError, _YAMLError2);\n\n  var _super3 = _createSuper(YAMLSemanticError);\n\n  function YAMLSemanticError(source, message) {\n    _classCallCheck(this, YAMLSemanticError);\n\n    return _super3.call(this, 'YAMLSemanticError', source, message);\n  }\n\n  return YAMLSemanticError;\n}(YAMLError);\nvar YAMLSyntaxError = /*#__PURE__*/function (_YAMLError3) {\n  _inherits(YAMLSyntaxError, _YAMLError3);\n\n  var _super4 = _createSuper(YAMLSyntaxError);\n\n  function YAMLSyntaxError(source, message) {\n    _classCallCheck(this, YAMLSyntaxError);\n\n    return _super4.call(this, 'YAMLSyntaxError', source, message);\n  }\n\n  return YAMLSyntaxError;\n}(YAMLError);\nvar YAMLWarning = /*#__PURE__*/function (_YAMLError4) {\n  _inherits(YAMLWarning, _YAMLError4);\n\n  var _super5 = _createSuper(YAMLWarning);\n\n  function YAMLWarning(source, message) {\n    _classCallCheck(this, YAMLWarning);\n\n    return _super5.call(this, 'YAMLWarning', source, message);\n  }\n\n  return YAMLWarning;\n}(YAMLError);\n\nvar PlainValue = /*#__PURE__*/function (_Node) {\n  _inherits(PlainValue, _Node);\n\n  var _super = _createSuper(PlainValue);\n\n  function PlainValue() {\n    _classCallCheck(this, PlainValue);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PlainValue, [{\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var src = this.context.src;\n      var ch = src[end - 1];\n\n      while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) {\n        ch = src[--end - 1];\n      }\n\n      var str = '';\n\n      for (var i = start; i < end; ++i) {\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          var _Node$foldNewline = Node.foldNewline(src, i, -1),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset;\n\n          str += fold;\n          i = offset;\n        } else if (_ch === ' ' || _ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (i < end && (next === ' ' || next === '\\t')) {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : _ch;\n        } else {\n          str += _ch;\n        }\n      }\n\n      var ch0 = src[start];\n\n      switch (ch0) {\n        case '\\t':\n          {\n            var msg = 'Plain value cannot start with a tab character';\n            var errors = [new YAMLSemanticError(this, msg)];\n            return {\n              errors: errors,\n              str: str\n            };\n          }\n\n        case '@':\n        case '`':\n          {\n            var _msg = \"Plain value cannot start with reserved character \".concat(ch0);\n\n            var _errors = [new YAMLSemanticError(this, _msg)];\n            return {\n              errors: _errors,\n              str: str\n            };\n          }\n\n        default:\n          return str;\n      }\n    }\n  }, {\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          inFlow = _this$context.inFlow,\n          src = _this$context.src;\n      var offset = start;\n      var valueEnd = start;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        if (Node.atDocumentBoundary(src, offset + 1)) break;\n        var end = Node.endOfBlockIndent(src, indent, offset + 1);\n        if (end === null || src[end] === '#') break;\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          valueEnd = PlainValue.endOfLine(src, end, inFlow);\n          offset = valueEnd;\n        }\n      }\n\n      if (this.valueRange.isEmpty()) this.valueRange.start = start;\n      this.valueRange.end = valueEnd;\n      return valueEnd;\n    }\n    /**\n     * Parses a plain value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * #comment\n     *\n     * first line\n     *\n     * first line #comment\n     *\n     * first line\n     * block\n     * lines\n     *\n     * #comment\n     * block\n     * lines\n     * ```\n     * where block lines are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar, may be `\\n`\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var inFlow = context.inFlow,\n          src = context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      if (ch && ch !== '#' && ch !== '\\n') {\n        offset = PlainValue.endOfLine(src, start, inFlow);\n      }\n\n      this.valueRange = new Range(start, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n\n      if (!this.hasComment || this.valueRange.isEmpty()) {\n        offset = this.parseBlockValue(offset);\n      }\n\n      return offset;\n    }\n  }], [{\n    key: \"endOfLine\",\n    value: function endOfLine(src, start, inFlow) {\n      var ch = src[start];\n      var offset = start;\n\n      while (ch && ch !== '\\n') {\n        if (inFlow && (ch === '[' || ch === ']' || ch === '{' || ch === '}' || ch === ',')) break;\n        var next = src[offset + 1];\n        if (ch === ':' && (!next || next === '\\n' || next === '\\t' || next === ' ' || inFlow && next === ',')) break;\n        if ((ch === ' ' || ch === '\\t') && next === '#') break;\n        offset += 1;\n        ch = next;\n      }\n\n      return offset;\n    }\n  }]);\n\n  return PlainValue;\n}(Node);\n\nexport { Char as C, Node as N, PlainValue as P, Range as R, Type as T, YAMLSyntaxError as Y, _createForOfIteratorHelper as _, _typeof as a, _createClass as b, _classCallCheck as c, defaultTagPrefix as d, _defineProperty as e, YAMLWarning as f, YAMLSemanticError as g, _slicedToArray as h, YAMLError as i, _inherits as j, _createSuper as k, _get as l, _getPrototypeOf as m, defaultTags as n, YAMLReferenceError as o, _assertThisInitialized as p, _toArray as q, _possibleConstructorReturn as r };\n", "import { j as _inherits, k as _createSuper, c as _classCallCheck, T as Type, b as _createClass, R as Range, N as Node, g as YAMLSemanticError, l as _get, m as _getPrototypeOf, Y as YAMLSyntaxError, C as Char, e as _defineProperty, P as PlainValue } from './PlainValue-b8036b75.js';\n\nvar BlankLine = /*#__PURE__*/function (_Node) {\n  _inherits(BlankLine, _Node);\n\n  var _super = _createSuper(BlankLine);\n\n  function BlankLine() {\n    _classCallCheck(this, BlankLine);\n\n    return _super.call(this, Type.BLANK_LINE);\n  }\n  /* istanbul ignore next */\n\n\n  _createClass(BlankLine, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      // This is never called from anywhere, but if it were,\n      // this is the value it should return.\n      return true;\n    }\n    /**\n     * Parses a blank line from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first \\n character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      this.range = new Range(start, start + 1);\n      return start + 1;\n    }\n  }]);\n\n  return BlankLine;\n}(Node);\n\nvar CollectionItem = /*#__PURE__*/function (_Node) {\n  _inherits(CollectionItem, _Node);\n\n  var _super = _createSuper(CollectionItem);\n\n  function CollectionItem(type, props) {\n    var _this;\n\n    _classCallCheck(this, CollectionItem);\n\n    _this = _super.call(this, type, props);\n    _this.node = null;\n    return _this;\n  }\n\n  _createClass(CollectionItem, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return !!this.node && this.node.includesTrailingLines;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var atLineStart = context.atLineStart,\n          lineStart = context.lineStart;\n      if (!atLineStart && this.type === Type.SEQ_ITEM) this.error = new YAMLSemanticError(this, 'Sequence items must not have preceding content on the same line');\n      var indent = atLineStart ? start - lineStart : context.indent;\n      var offset = Node.endOfWhiteSpace(src, start + 1);\n      var ch = src[offset];\n      var inlineComment = ch === '#';\n      var comments = [];\n      var blankLine = null;\n\n      while (ch === '\\n' || ch === '#') {\n        if (ch === '#') {\n          var _end = Node.endOfLine(src, offset + 1);\n\n          comments.push(new Range(offset, _end));\n          offset = _end;\n        } else {\n          atLineStart = true;\n          lineStart = offset + 1;\n          var wsEnd = Node.endOfWhiteSpace(src, lineStart);\n\n          if (src[wsEnd] === '\\n' && comments.length === 0) {\n            blankLine = new BlankLine();\n            lineStart = blankLine.parse({\n              src: src\n            }, lineStart);\n          }\n\n          offset = Node.endOfIndent(src, lineStart);\n        }\n\n        ch = src[offset];\n      }\n\n      if (Node.nextNodeIsIndented(ch, offset - (lineStart + indent), this.type !== Type.SEQ_ITEM)) {\n        this.node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: false,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n      } else if (ch && lineStart > start + 1) {\n        offset = lineStart - 1;\n      }\n\n      if (this.node) {\n        if (blankLine) {\n          // Only blank lines preceding non-empty nodes are captured. Note that\n          // this means that collection item range start indices do not always\n          // increase monotonically. -- eemeli/yaml#126\n          var items = context.parent.items || context.parent.contents;\n          if (items) items.push(blankLine);\n        }\n\n        if (comments.length) Array.prototype.push.apply(this.props, comments);\n        offset = this.node.range.end;\n      } else {\n        if (inlineComment) {\n          var c = comments[0];\n          this.props.push(c);\n          offset = c.end;\n        } else {\n          offset = Node.endOfLine(src, start + 1);\n        }\n      }\n\n      var end = this.node ? this.node.valueRange.end : offset;\n      this.valueRange = new Range(start, end);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(CollectionItem.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.node ? this.node.setOrigRanges(cr, offset) : offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          node = this.node,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = node ? src.slice(range.start, node.range.start) + String(node) : src.slice(range.start, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }]);\n\n  return CollectionItem;\n}(Node);\n\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inherits(Comment, _Node);\n\n  var _super = _createSuper(Comment);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    return _super.call(this, Type.COMMENT);\n  }\n  /**\n   * Parses a comment line from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  _createClass(Comment, [{\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseComment(start);\n      this.range = new Range(start, offset);\n      return offset;\n    }\n  }]);\n\n  return Comment;\n}(Node);\n\nfunction grabCollectionEndComments(node) {\n  var cnode = node;\n\n  while (cnode instanceof CollectionItem) {\n    cnode = cnode.node;\n  }\n\n  if (!(cnode instanceof Collection)) return null;\n  var len = cnode.items.length;\n  var ci = -1;\n\n  for (var i = len - 1; i >= 0; --i) {\n    var n = cnode.items[i];\n\n    if (n.type === Type.COMMENT) {\n      // Keep sufficiently indented comments with preceding node\n      var _n$context = n.context,\n          indent = _n$context.indent,\n          lineStart = _n$context.lineStart;\n      if (indent > 0 && n.range.start >= lineStart + indent) break;\n      ci = i;\n    } else if (n.type === Type.BLANK_LINE) ci = i;else break;\n  }\n\n  if (ci === -1) return null;\n  var ca = cnode.items.splice(ci, len - ci);\n  var prevEnd = ca[0].range.start;\n\n  while (true) {\n    cnode.range.end = prevEnd;\n    if (cnode.valueRange && cnode.valueRange.end > prevEnd) cnode.valueRange.end = prevEnd;\n    if (cnode === node) break;\n    cnode = cnode.context.parent;\n  }\n\n  return ca;\n}\nvar Collection = /*#__PURE__*/function (_Node) {\n  _inherits(Collection, _Node);\n\n  var _super = _createSuper(Collection);\n\n  function Collection(firstItem) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _super.call(this, firstItem.type === Type.SEQ_ITEM ? Type.SEQ : Type.MAP);\n\n    for (var i = firstItem.props.length - 1; i >= 0; --i) {\n      if (firstItem.props[i].start < firstItem.context.lineStart) {\n        // props on previous line are assumed by the collection\n        _this.props = firstItem.props.slice(0, i + 1);\n        firstItem.props = firstItem.props.slice(i + 1);\n        var itemRange = firstItem.props[0] || firstItem.valueRange;\n        firstItem.range.start = itemRange.start;\n        break;\n      }\n    }\n\n    _this.items = [firstItem];\n    var ec = grabCollectionEndComments(firstItem);\n    if (ec) Array.prototype.push.apply(_this.items, ec);\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.items.length > 0;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src; // It's easier to recalculate lineStart here rather than tracking down the\n      // last context from which to read it -- eemeli/yaml#2\n\n      var lineStart = Node.startOfLine(src, start);\n      var firstItem = this.items[0]; // First-item context needs to be correct for later comment handling\n      // -- eemeli/yaml#17\n\n      firstItem.context.parent = this;\n      this.valueRange = Range.copy(firstItem.valueRange);\n      var indent = firstItem.range.start - firstItem.context.lineStart;\n      var offset = start;\n      offset = Node.normalizeOffset(src, offset);\n      var ch = src[offset];\n      var atLineStart = Node.endOfWhiteSpace(src, lineStart) === offset;\n      var prevIncludesTrailingLines = false;\n\n      while (ch) {\n        while (ch === '\\n' || ch === '#') {\n          if (atLineStart && ch === '\\n' && !prevIncludesTrailingLines) {\n            var blankLine = new BlankLine();\n            offset = blankLine.parse({\n              src: src\n            }, offset);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n\n            this.items.push(blankLine);\n            offset -= 1; // blankLine.parse() consumes terminal newline\n          } else if (ch === '#') {\n            if (offset < lineStart + indent && !Collection.nextContentHasIndent(src, offset, indent)) {\n              return offset;\n            }\n\n            var comment = new Comment();\n            offset = comment.parse({\n              indent: indent,\n              lineStart: lineStart,\n              src: src\n            }, offset);\n            this.items.push(comment);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n          }\n\n          lineStart = offset + 1;\n          offset = Node.endOfIndent(src, lineStart);\n\n          if (Node.atBlank(src, offset)) {\n            var wsEnd = Node.endOfWhiteSpace(src, offset);\n            var next = src[wsEnd];\n\n            if (!next || next === '\\n' || next === '#') {\n              offset = wsEnd;\n            }\n          }\n\n          ch = src[offset];\n          atLineStart = true;\n        }\n\n        if (!ch) {\n          break;\n        }\n\n        if (offset !== lineStart + indent && (atLineStart || ch !== ':')) {\n          if (offset < lineStart + indent) {\n            if (lineStart > start) offset = lineStart;\n            break;\n          } else if (!this.error) {\n            var msg = 'All collection items must start at the same column';\n            this.error = new YAMLSyntaxError(this, msg);\n          }\n        }\n\n        if (firstItem.type === Type.SEQ_ITEM) {\n          if (ch !== '-') {\n            if (lineStart > start) offset = lineStart;\n            break;\n          }\n        } else if (ch === '-' && !this.error) {\n          // map key may start with -, as long as it's followed by a non-whitespace char\n          var _next = src[offset + 1];\n\n          if (!_next || _next === '\\n' || _next === '\\t' || _next === ' ') {\n            var _msg = 'A collection cannot be both a mapping and a sequence';\n            this.error = new YAMLSyntaxError(this, _msg);\n          }\n        }\n\n        var node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: true,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n        if (!node) return offset; // at next document start\n\n        this.items.push(node);\n        this.valueRange.end = node.valueRange.end;\n        offset = Node.normalizeOffset(src, node.range.end);\n        ch = src[offset];\n        atLineStart = false;\n        prevIncludesTrailingLines = node.includesTrailingLines; // Need to reset lineStart and atLineStart here if preceding node's range\n        // has advanced to check the current line's indentation level\n        // -- eemeli/yaml#10 & eemeli/yaml#38\n\n        if (ch) {\n          var ls = offset - 1;\n          var prev = src[ls];\n\n          while (prev === ' ' || prev === '\\t') {\n            prev = src[--ls];\n          }\n\n          if (prev === '\\n') {\n            lineStart = ls + 1;\n            atLineStart = true;\n          }\n        }\n\n        var ec = grabCollectionEndComments(node);\n        if (ec) Array.prototype.push.apply(this.items, ec);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(Collection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, items[0].range.start) + String(items[0]);\n\n      for (var i = 1; i < items.length; ++i) {\n        var item = items[i];\n        var _item$context = item.context,\n            atLineStart = _item$context.atLineStart,\n            indent = _item$context.indent;\n        if (atLineStart) for (var _i = 0; _i < indent; ++_i) {\n          str += ' ';\n        }\n        str += String(item);\n      }\n\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }], [{\n    key: \"nextContentHasIndent\",\n    value: function nextContentHasIndent(src, offset, indent) {\n      var lineStart = Node.endOfLine(src, offset) + 1;\n      offset = Node.endOfWhiteSpace(src, lineStart);\n      var ch = src[offset];\n      if (!ch) return false;\n      if (offset >= lineStart + indent) return true;\n      if (ch !== '#' && ch !== '\\n') return false;\n      return Collection.nextContentHasIndent(src, offset, indent);\n    }\n  }]);\n\n  return Collection;\n}(Node);\n\nvar Directive = /*#__PURE__*/function (_Node) {\n  _inherits(Directive, _Node);\n\n  var _super = _createSuper(Directive);\n\n  function Directive() {\n    var _this;\n\n    _classCallCheck(this, Directive);\n\n    _this = _super.call(this, Type.DIRECTIVE);\n    _this.name = null;\n    return _this;\n  }\n\n  _createClass(Directive, [{\n    key: \"parameters\",\n    get: function get() {\n      var raw = this.rawValue;\n      return raw ? raw.trim().split(/[ \\t]+/) : [];\n    }\n  }, {\n    key: \"parseName\",\n    value: function parseName(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '\\t' && ch !== ' ') {\n        ch = src[offset += 1];\n      }\n\n      this.name = src.slice(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parseParameters\",\n    value: function parseParameters(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '#') {\n        ch = src[offset += 1];\n      }\n\n      this.valueRange = new Range(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseName(start + 1);\n      offset = this.parseParameters(offset);\n      offset = this.parseComment(offset);\n      this.range = new Range(start, offset);\n      return offset;\n    }\n  }]);\n\n  return Directive;\n}(Node);\n\nvar Document = /*#__PURE__*/function (_Node) {\n  _inherits(Document, _Node);\n\n  var _super = _createSuper(Document);\n\n  function Document() {\n    var _this;\n\n    _classCallCheck(this, Document);\n\n    _this = _super.call(this, Type.DOCUMENT);\n    _this.directives = null;\n    _this.contents = null;\n    _this.directivesEndMarker = null;\n    _this.documentEndMarker = null;\n    return _this;\n  }\n\n  _createClass(Document, [{\n    key: \"parseDirectives\",\n    value: function parseDirectives(start) {\n      var src = this.context.src;\n      this.directives = [];\n      var atLineStart = true;\n      var hasDirectives = false;\n      var offset = start;\n\n      while (!Node.atDocumentBoundary(src, offset, Char.DIRECTIVES_END)) {\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n\n        switch (src[offset]) {\n          case '\\n':\n            if (atLineStart) {\n              var blankLine = new BlankLine();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.directives.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            break;\n\n          case '#':\n            {\n              var comment = new Comment();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.directives.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          case '%':\n            {\n              var directive = new Directive();\n              offset = directive.parse({\n                parent: this,\n                src: src\n              }, offset);\n              this.directives.push(directive);\n              hasDirectives = true;\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            if (hasDirectives) {\n              this.error = new YAMLSemanticError(this, 'Missing directives-end indicator line');\n            } else if (this.directives.length > 0) {\n              this.contents = this.directives;\n              this.directives = [];\n            }\n\n            return offset;\n        }\n      }\n\n      if (src[offset]) {\n        this.directivesEndMarker = new Range(offset, offset + 3);\n        return offset + 3;\n      }\n\n      if (hasDirectives) {\n        this.error = new YAMLSemanticError(this, 'Missing directives-end indicator line');\n      } else if (this.directives.length > 0) {\n        this.contents = this.directives;\n        this.directives = [];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"parseContents\",\n    value: function parseContents(start) {\n      var _this$context = this.context,\n          parseNode = _this$context.parseNode,\n          src = _this$context.src;\n      if (!this.contents) this.contents = [];\n      var lineStart = start;\n\n      while (src[lineStart - 1] === '-') {\n        lineStart -= 1;\n      }\n\n      var offset = Node.endOfWhiteSpace(src, start);\n      var atLineStart = lineStart === start;\n      this.valueRange = new Range(offset);\n\n      while (!Node.atDocumentBoundary(src, offset, Char.DOCUMENT_END)) {\n        switch (src[offset]) {\n          case '\\n':\n            if (atLineStart) {\n              var blankLine = new BlankLine();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.contents.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            lineStart = offset;\n            break;\n\n          case '#':\n            {\n              var comment = new Comment();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.contents.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            {\n              var iEnd = Node.endOfIndent(src, offset);\n              var context = {\n                atLineStart: atLineStart,\n                indent: -1,\n                inFlow: false,\n                inCollection: false,\n                lineStart: lineStart,\n                parent: this\n              };\n              var node = parseNode(context, iEnd);\n              if (!node) return this.valueRange.end = iEnd; // at next document start\n\n              this.contents.push(node);\n              offset = node.range.end;\n              atLineStart = false;\n              var ec = grabCollectionEndComments(node);\n              if (ec) Array.prototype.push.apply(this.contents, ec);\n            }\n        }\n\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n      }\n\n      this.valueRange.end = offset;\n\n      if (src[offset]) {\n        this.documentEndMarker = new Range(offset, offset + 3);\n        offset += 3;\n\n        if (src[offset]) {\n          offset = Node.endOfWhiteSpace(src, offset);\n\n          if (src[offset] === '#') {\n            var _comment = new Comment();\n\n            offset = _comment.parse({\n              src: src\n            }, offset);\n            this.contents.push(_comment);\n          }\n\n          switch (src[offset]) {\n            case '\\n':\n              offset += 1;\n              break;\n\n            case undefined:\n              break;\n\n            default:\n              this.error = new YAMLSyntaxError(this, 'Document end marker line cannot have a non-comment suffix');\n          }\n        }\n      }\n\n      return offset;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      context.root = this;\n      this.context = context;\n      var src = context.src;\n      var offset = src.charCodeAt(start) === 0xfeff ? start + 1 : start; // skip BOM\n\n      offset = this.parseDirectives(offset);\n      offset = this.parseContents(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(Document.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.directives.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.directivesEndMarker) offset = this.directivesEndMarker.setOrigRange(cr, offset);\n      this.contents.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.documentEndMarker) offset = this.documentEndMarker.setOrigRange(cr, offset);\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var contents = this.contents,\n          directives = this.directives,\n          value = this.value;\n      if (value != null) return value;\n      var str = directives.join('');\n\n      if (contents.length > 0) {\n        if (directives.length > 0 || contents[0].type === Type.COMMENT) str += '---\\n';\n        str += contents.join('');\n      }\n\n      if (str[str.length - 1] !== '\\n') str += '\\n';\n      return str;\n    }\n  }], [{\n    key: \"startCommentOrEndBlankLine\",\n    value: function startCommentOrEndBlankLine(src, start) {\n      var offset = Node.endOfWhiteSpace(src, start);\n      var ch = src[offset];\n      return ch === '#' || ch === '\\n' ? offset : start;\n    }\n  }]);\n\n  return Document;\n}(Node);\n\nvar Alias = /*#__PURE__*/function (_Node) {\n  _inherits(Alias, _Node);\n\n  var _super = _createSuper(Alias);\n\n  function Alias() {\n    _classCallCheck(this, Alias);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Alias, [{\n    key: \"parse\",\n    value:\n    /**\n     * Parses an *alias from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n    function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = Node.endOfIdentifier(src, start + 1);\n      this.valueRange = new Range(start + 1, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }]);\n\n  return Alias;\n}(Node);\n\nvar Chomp = {\n  CLIP: 'CLIP',\n  KEEP: 'KEEP',\n  STRIP: 'STRIP'\n};\nvar BlockValue = /*#__PURE__*/function (_Node) {\n  _inherits(BlockValue, _Node);\n\n  var _super = _createSuper(BlockValue);\n\n  function BlockValue(type, props) {\n    var _this;\n\n    _classCallCheck(this, BlockValue);\n\n    _this = _super.call(this, type, props);\n    _this.blockIndent = null;\n    _this.chomping = Chomp.CLIP;\n    _this.header = null;\n    return _this;\n  }\n\n  _createClass(BlockValue, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.chomping === Chomp.KEEP;\n    }\n  }, {\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (this.valueRange.isEmpty()) return '';\n      var lastNewLine = null;\n      var ch = src[end - 1];\n\n      while (ch === '\\n' || ch === '\\t' || ch === ' ') {\n        end -= 1;\n\n        if (end <= start) {\n          if (this.chomping === Chomp.KEEP) break;else return ''; // probably never happens\n        }\n\n        if (ch === '\\n') lastNewLine = end;\n        ch = src[end - 1];\n      }\n\n      var keepStart = end + 1;\n\n      if (lastNewLine) {\n        if (this.chomping === Chomp.KEEP) {\n          keepStart = lastNewLine;\n          end = this.valueRange.end;\n        } else {\n          end = lastNewLine;\n        }\n      }\n\n      var bi = indent + this.blockIndent;\n      var folded = this.type === Type.BLOCK_FOLDED;\n      var atStart = true;\n      var str = '';\n      var sep = '';\n      var prevMoreIndented = false;\n\n      for (var i = start; i < end; ++i) {\n        for (var j = 0; j < bi; ++j) {\n          if (src[i] !== ' ') break;\n          i += 1;\n        }\n\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          if (sep === '\\n') str += '\\n';else sep = '\\n';\n        } else {\n          var lineEnd = Node.endOfLine(src, i);\n          var line = src.slice(i, lineEnd);\n          i = lineEnd;\n\n          if (folded && (_ch === ' ' || _ch === '\\t') && i < keepStart) {\n            if (sep === ' ') sep = '\\n';else if (!prevMoreIndented && !atStart && sep === '\\n') sep = '\\n\\n';\n            str += sep + line; //+ ((lineEnd < end && src[lineEnd]) || '')\n\n            sep = lineEnd < end && src[lineEnd] || '';\n            prevMoreIndented = true;\n          } else {\n            str += sep + line;\n            sep = folded && i < keepStart ? ' ' : '\\n';\n            prevMoreIndented = false;\n          }\n\n          if (atStart && line !== '') atStart = false;\n        }\n      }\n\n      return this.chomping === Chomp.STRIP ? str : str + '\\n';\n    }\n  }, {\n    key: \"parseBlockHeader\",\n    value: function parseBlockHeader(start) {\n      var src = this.context.src;\n      var offset = start + 1;\n      var bi = '';\n\n      while (true) {\n        var ch = src[offset];\n\n        switch (ch) {\n          case '-':\n            this.chomping = Chomp.STRIP;\n            break;\n\n          case '+':\n            this.chomping = Chomp.KEEP;\n            break;\n\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            bi += ch;\n            break;\n\n          default:\n            this.blockIndent = Number(bi) || null;\n            this.header = new Range(start, offset);\n            return offset;\n        }\n\n        offset += 1;\n      }\n    }\n  }, {\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context2 = this.context,\n          indent = _this$context2.indent,\n          src = _this$context2.src;\n      var explicit = !!this.blockIndent;\n      var offset = start;\n      var valueEnd = start;\n      var minBlockIndent = 1;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        offset += 1;\n        if (Node.atDocumentBoundary(src, offset)) break;\n        var end = Node.endOfBlockIndent(src, indent, offset); // should not include tab?\n\n        if (end === null) break;\n        var _ch2 = src[end];\n        var lineIndent = end - (offset + indent);\n\n        if (!this.blockIndent) {\n          // no explicit block indent, none yet detected\n          if (src[end] !== '\\n') {\n            // first line with non-whitespace content\n            if (lineIndent < minBlockIndent) {\n              var msg = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n              this.error = new YAMLSemanticError(this, msg);\n            }\n\n            this.blockIndent = lineIndent;\n          } else if (lineIndent > minBlockIndent) {\n            // empty line with more whitespace\n            minBlockIndent = lineIndent;\n          }\n        } else if (_ch2 && _ch2 !== '\\n' && lineIndent < this.blockIndent) {\n          if (src[end] === '#') break;\n\n          if (!this.error) {\n            var _src = explicit ? 'explicit indentation indicator' : 'first line';\n\n            var _msg = \"Block scalars must not be less indented than their \".concat(_src);\n\n            this.error = new YAMLSemanticError(this, _msg);\n          }\n        }\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          offset = valueEnd = Node.endOfLine(src, end);\n        }\n      }\n\n      if (this.chomping !== Chomp.KEEP) {\n        offset = src[valueEnd] ? valueEnd + 1 : valueEnd;\n      }\n\n      this.valueRange = new Range(start + 1, offset);\n      return offset;\n    }\n    /**\n     * Parses a block value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * BS\n     * block\n     * lines\n     *\n     * BS #comment\n     * block\n     * lines\n     * ```\n     * where the block style BS matches the regexp `[|>][-+1-9]*` and block lines\n     * are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this block\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = this.parseBlockHeader(start);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      offset = this.parseBlockValue(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(BlockValue.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.header ? this.header.setOrigRange(cr, offset) : offset;\n    }\n  }]);\n\n  return BlockValue;\n}(Node);\n\nvar FlowCollection = /*#__PURE__*/function (_Node) {\n  _inherits(FlowCollection, _Node);\n\n  var _super = _createSuper(FlowCollection);\n\n  function FlowCollection(type, props) {\n    var _this;\n\n    _classCallCheck(this, FlowCollection);\n\n    _this = _super.call(this, type, props);\n    _this.items = null;\n    return _this;\n  }\n\n  _createClass(FlowCollection, [{\n    key: \"prevNodeIsJsonLike\",\n    value: function prevNodeIsJsonLike() {\n      var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items.length;\n      var node = this.items[idx - 1];\n      return !!node && (node.jsonLike || node.type === Type.COMMENT && this.prevNodeIsJsonLike(idx - 1));\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var indent = context.indent,\n          lineStart = context.lineStart;\n      var char = src[start]; // { or [\n\n      this.items = [{\n        char: char,\n        offset: start\n      }];\n      var offset = Node.endOfWhiteSpace(src, start + 1);\n      char = src[offset];\n\n      while (char && char !== ']' && char !== '}') {\n        switch (char) {\n          case '\\n':\n            {\n              lineStart = offset + 1;\n              var wsEnd = Node.endOfWhiteSpace(src, lineStart);\n\n              if (src[wsEnd] === '\\n') {\n                var blankLine = new BlankLine();\n                lineStart = blankLine.parse({\n                  src: src\n                }, lineStart);\n                this.items.push(blankLine);\n              }\n\n              offset = Node.endOfIndent(src, lineStart);\n\n              if (offset <= lineStart + indent) {\n                char = src[offset];\n\n                if (offset < lineStart + indent || char !== ']' && char !== '}') {\n                  var msg = 'Insufficient indentation in flow collection';\n                  this.error = new YAMLSemanticError(this, msg);\n                }\n              }\n            }\n            break;\n\n          case ',':\n            {\n              this.items.push({\n                char: char,\n                offset: offset\n              });\n              offset += 1;\n            }\n            break;\n\n          case '#':\n            {\n              var comment = new Comment();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.items.push(comment);\n            }\n            break;\n\n          case '?':\n          case ':':\n            {\n              var next = src[offset + 1];\n\n              if (next === '\\n' || next === '\\t' || next === ' ' || next === ',' || // in-flow : after JSON-like key does not need to be followed by whitespace\n              char === ':' && this.prevNodeIsJsonLike()) {\n                this.items.push({\n                  char: char,\n                  offset: offset\n                });\n                offset += 1;\n                break;\n              }\n            }\n          // fallthrough\n\n          default:\n            {\n              var node = parseNode({\n                atLineStart: false,\n                inCollection: false,\n                inFlow: true,\n                indent: -1,\n                lineStart: lineStart,\n                parent: this\n              }, offset);\n\n              if (!node) {\n                // at next document start\n                this.valueRange = new Range(start, offset);\n                return offset;\n              }\n\n              this.items.push(node);\n              offset = Node.normalizeOffset(src, node.range.end);\n            }\n        }\n\n        offset = Node.endOfWhiteSpace(src, offset);\n        char = src[offset];\n      }\n\n      this.valueRange = new Range(start, offset + 1);\n\n      if (char) {\n        this.items.push({\n          char: char,\n          offset: offset\n        });\n        offset = Node.endOfWhiteSpace(src, offset + 1);\n        offset = this.parseComment(offset);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(FlowCollection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        if (node instanceof Node) {\n          offset = node.setOrigRanges(cr, offset);\n        } else if (cr.length === 0) {\n          node.origOffset = node.offset;\n        } else {\n          var i = offset;\n\n          while (i < cr.length) {\n            if (cr[i] > node.offset) break;else ++i;\n          }\n\n          node.origOffset = node.offset + i;\n          offset = i;\n        }\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var nodes = items.filter(function (item) {\n        return item instanceof Node;\n      });\n      var str = '';\n      var prevEnd = range.start;\n      nodes.forEach(function (node) {\n        var prefix = src.slice(prevEnd, node.range.start);\n        prevEnd = node.range.end;\n        str += prefix + String(node);\n\n        if (str[str.length - 1] === '\\n' && src[prevEnd - 1] !== '\\n' && src[prevEnd] === '\\n') {\n          // Comment range does not include the terminal newline, but its\n          // stringified value does. Without this fix, newlines at comment ends\n          // get duplicated.\n          prevEnd += 1;\n        }\n      });\n      str += src.slice(prevEnd, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }]);\n\n  return FlowCollection;\n}(Node);\n\nvar QuoteDouble = /*#__PURE__*/function (_Node) {\n  _inherits(QuoteDouble, _Node);\n\n  var _super = _createSuper(QuoteDouble);\n\n  function QuoteDouble() {\n    _classCallCheck(this, QuoteDouble);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuoteDouble, [{\n    key: \"strValue\",\n    get:\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== '\"') errors.push(new YAMLSyntaxError(this, 'Missing closing \"quote')); // Using String#replace is too painful with escaped newlines preceded by\n      // escaped backslashes; also, this should be faster.\n\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (Node.atDocumentBoundary(src, i + 1)) errors.push(new YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = Node.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new YAMLSemanticError(this, 'Multi-line double-quoted string needs to be sufficiently indented'));\n        } else if (ch === '\\\\') {\n          i += 1;\n\n          switch (src[i]) {\n            case '0':\n              str += '\\0';\n              break;\n            // null character\n\n            case 'a':\n              str += '\\x07';\n              break;\n            // bell character\n\n            case 'b':\n              str += '\\b';\n              break;\n            // backspace\n\n            case 'e':\n              str += '\\x1b';\n              break;\n            // escape character\n\n            case 'f':\n              str += '\\f';\n              break;\n            // form feed\n\n            case 'n':\n              str += '\\n';\n              break;\n            // line feed\n\n            case 'r':\n              str += '\\r';\n              break;\n            // carriage return\n\n            case 't':\n              str += '\\t';\n              break;\n            // horizontal tab\n\n            case 'v':\n              str += '\\v';\n              break;\n            // vertical tab\n\n            case 'N':\n              str += \"\\x85\";\n              break;\n            // Unicode next line\n\n            case '_':\n              str += \"\\xA0\";\n              break;\n            // Unicode non-breaking space\n\n            case 'L':\n              str += \"\\u2028\";\n              break;\n            // Unicode line separator\n\n            case 'P':\n              str += \"\\u2029\";\n              break;\n            // Unicode paragraph separator\n\n            case ' ':\n              str += ' ';\n              break;\n\n            case '\"':\n              str += '\"';\n              break;\n\n            case '/':\n              str += '/';\n              break;\n\n            case '\\\\':\n              str += '\\\\';\n              break;\n\n            case '\\t':\n              str += '\\t';\n              break;\n\n            case 'x':\n              str += this.parseCharCode(i + 1, 2, errors);\n              i += 2;\n              break;\n\n            case 'u':\n              str += this.parseCharCode(i + 1, 4, errors);\n              i += 4;\n              break;\n\n            case 'U':\n              str += this.parseCharCode(i + 1, 8, errors);\n              i += 8;\n              break;\n\n            case '\\n':\n              // skip escaped newlines, but still trim the following line\n              while (src[i + 1] === ' ' || src[i + 1] === '\\t') {\n                i += 1;\n              }\n\n              break;\n\n            default:\n              errors.push(new YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(i - 1, 2))));\n              str += '\\\\' + src[i];\n          }\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n  }, {\n    key: \"parseCharCode\",\n    value: function parseCharCode(offset, length, errors) {\n      var src = this.context.src;\n      var cc = src.substr(offset, length);\n      var ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n      var code = ok ? parseInt(cc, 16) : NaN;\n\n      if (isNaN(code)) {\n        errors.push(new YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(offset - 2, length + 2))));\n        return src.substr(offset - 2, length + 2);\n      }\n\n      return String.fromCodePoint(code);\n    }\n    /**\n     * Parses a \"double quoted\" value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteDouble.endOfQuote(src, start + 1);\n      this.valueRange = new Range(start, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\"') {\n        offset += ch === '\\\\' ? 2 : 1;\n        ch = src[offset];\n      }\n\n      return offset + 1;\n    }\n  }]);\n\n  return QuoteDouble;\n}(Node);\n\nvar QuoteSingle = /*#__PURE__*/function (_Node) {\n  _inherits(QuoteSingle, _Node);\n\n  var _super = _createSuper(QuoteSingle);\n\n  function QuoteSingle() {\n    _classCallCheck(this, QuoteSingle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuoteSingle, [{\n    key: \"strValue\",\n    get:\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== \"'\") errors.push(new YAMLSyntaxError(this, \"Missing closing 'quote\"));\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (Node.atDocumentBoundary(src, i + 1)) errors.push(new YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = Node.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new YAMLSemanticError(this, 'Multi-line single-quoted string needs to be sufficiently indented'));\n        } else if (ch === \"'\") {\n          str += ch;\n          i += 1;\n          if (src[i] !== \"'\") errors.push(new YAMLSyntaxError(this, 'Unescaped single quote? This should not happen.'));\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n    /**\n     * Parses a 'single quoted' value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteSingle.endOfQuote(src, start + 1);\n      this.valueRange = new Range(start, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch) {\n        if (ch === \"'\") {\n          if (src[offset + 1] !== \"'\") break;\n          ch = src[offset += 2];\n        } else {\n          ch = src[offset += 1];\n        }\n      }\n\n      return offset + 1;\n    }\n  }]);\n\n  return QuoteSingle;\n}(Node);\n\nfunction createNewNode(type, props) {\n  switch (type) {\n    case Type.ALIAS:\n      return new Alias(type, props);\n\n    case Type.BLOCK_FOLDED:\n    case Type.BLOCK_LITERAL:\n      return new BlockValue(type, props);\n\n    case Type.FLOW_MAP:\n    case Type.FLOW_SEQ:\n      return new FlowCollection(type, props);\n\n    case Type.MAP_KEY:\n    case Type.MAP_VALUE:\n    case Type.SEQ_ITEM:\n      return new CollectionItem(type, props);\n\n    case Type.COMMENT:\n    case Type.PLAIN:\n      return new PlainValue(type, props);\n\n    case Type.QUOTE_DOUBLE:\n      return new QuoteDouble(type, props);\n\n    case Type.QUOTE_SINGLE:\n      return new QuoteSingle(type, props);\n\n    /* istanbul ignore next */\n\n    default:\n      return null;\n    // should never happen\n  }\n}\n/**\n * @param {boolean} atLineStart - Node starts at beginning of line\n * @param {boolean} inFlow - true if currently in a flow context\n * @param {boolean} inCollection - true if currently in a collection context\n * @param {number} indent - Current level of indentation\n * @param {number} lineStart - Start of the current line\n * @param {Node} parent - The parent of the node\n * @param {string} src - Source of the YAML document\n */\n\n\nvar ParseContext = /*#__PURE__*/function () {\n  function ParseContext() {\n    var _this = this;\n\n    var orig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        atLineStart = _ref.atLineStart,\n        inCollection = _ref.inCollection,\n        inFlow = _ref.inFlow,\n        indent = _ref.indent,\n        lineStart = _ref.lineStart,\n        parent = _ref.parent;\n\n    _classCallCheck(this, ParseContext);\n\n    _defineProperty(this, \"parseNode\", function (overlay, start) {\n      if (Node.atDocumentBoundary(_this.src, start)) return null;\n      var context = new ParseContext(_this, overlay);\n\n      var _context$parseProps = context.parseProps(start),\n          props = _context$parseProps.props,\n          type = _context$parseProps.type,\n          valueStart = _context$parseProps.valueStart;\n\n      var node = createNewNode(type, props);\n      var offset = node.parse(context, valueStart);\n      node.range = new Range(start, offset);\n      /* istanbul ignore if */\n\n      if (offset <= start) {\n        // This should never happen, but if it does, let's make sure to at least\n        // step one character forward to avoid a busy loop.\n        node.error = new Error(\"Node#parse consumed no characters\");\n        node.error.parseEnd = offset;\n        node.error.source = node;\n        node.range.end = start + 1;\n      }\n\n      if (context.nodeStartsCollection(node)) {\n        if (!node.error && !context.atLineStart && context.parent.type === Type.DOCUMENT) {\n          node.error = new YAMLSyntaxError(node, 'Block collection must not have preceding content here (e.g. directives-end indicator)');\n        }\n\n        var collection = new Collection(node);\n        offset = collection.parse(new ParseContext(context), offset);\n        collection.range = new Range(start, offset);\n        return collection;\n      }\n\n      return node;\n    });\n\n    this.atLineStart = atLineStart != null ? atLineStart : orig.atLineStart || false;\n    this.inCollection = inCollection != null ? inCollection : orig.inCollection || false;\n    this.inFlow = inFlow != null ? inFlow : orig.inFlow || false;\n    this.indent = indent != null ? indent : orig.indent;\n    this.lineStart = lineStart != null ? lineStart : orig.lineStart;\n    this.parent = parent != null ? parent : orig.parent || {};\n    this.root = orig.root;\n    this.src = orig.src;\n  }\n\n  _createClass(ParseContext, [{\n    key: \"nodeStartsCollection\",\n    value: function nodeStartsCollection(node) {\n      var inCollection = this.inCollection,\n          inFlow = this.inFlow,\n          src = this.src;\n      if (inCollection || inFlow) return false;\n      if (node instanceof CollectionItem) return true; // check for implicit key\n\n      var offset = node.range.end;\n      if (src[offset] === '\\n' || src[offset - 1] === '\\n') return false;\n      offset = Node.endOfWhiteSpace(src, offset);\n      return src[offset] === ':';\n    } // Anchor and tag are before type, which determines the node implementation\n    // class; hence this intermediate step.\n\n  }, {\n    key: \"parseProps\",\n    value: function parseProps(offset) {\n      var inFlow = this.inFlow,\n          parent = this.parent,\n          src = this.src;\n      var props = [];\n      var lineHasProps = false;\n      offset = this.atLineStart ? Node.endOfIndent(src, offset) : Node.endOfWhiteSpace(src, offset);\n      var ch = src[offset];\n\n      while (ch === Char.ANCHOR || ch === Char.COMMENT || ch === Char.TAG || ch === '\\n') {\n        if (ch === '\\n') {\n          var inEnd = offset;\n          var lineStart = void 0;\n\n          do {\n            lineStart = inEnd + 1;\n            inEnd = Node.endOfIndent(src, lineStart);\n          } while (src[inEnd] === '\\n');\n\n          var indentDiff = inEnd - (lineStart + this.indent);\n          var noIndicatorAsIndent = parent.type === Type.SEQ_ITEM && parent.context.atLineStart;\n          if (src[inEnd] !== '#' && !Node.nextNodeIsIndented(src[inEnd], indentDiff, !noIndicatorAsIndent)) break;\n          this.atLineStart = true;\n          this.lineStart = lineStart;\n          lineHasProps = false;\n          offset = inEnd;\n        } else if (ch === Char.COMMENT) {\n          var end = Node.endOfLine(src, offset + 1);\n          props.push(new Range(offset, end));\n          offset = end;\n        } else {\n          var _end = Node.endOfIdentifier(src, offset + 1);\n\n          if (ch === Char.TAG && src[_end] === ',' && /^[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+,\\d\\d\\d\\d(-\\d\\d){0,2}\\/\\S/.test(src.slice(offset + 1, _end + 13))) {\n            // Let's presume we're dealing with a YAML 1.0 domain tag here, rather\n            // than an empty but 'foo.bar' private-tagged node in a flow collection\n            // followed without whitespace by a plain string starting with a year\n            // or date divided by something.\n            _end = Node.endOfIdentifier(src, _end + 5);\n          }\n\n          props.push(new Range(offset, _end));\n          lineHasProps = true;\n          offset = Node.endOfWhiteSpace(src, _end);\n        }\n\n        ch = src[offset];\n      } // '- &a : b' has an anchor on an empty node\n\n\n      if (lineHasProps && ch === ':' && Node.atBlank(src, offset + 1, true)) offset -= 1;\n      var type = ParseContext.parseType(src, offset, inFlow);\n      return {\n        props: props,\n        type: type,\n        valueStart: offset\n      };\n    }\n    /**\n     * Parses a node from the source\n     * @param {ParseContext} overlay\n     * @param {number} start - Index of first non-whitespace character for the node\n     * @returns {?Node} - null if at a document boundary\n     */\n\n  }], [{\n    key: \"parseType\",\n    value: function parseType(src, offset, inFlow) {\n      switch (src[offset]) {\n        case '*':\n          return Type.ALIAS;\n\n        case '>':\n          return Type.BLOCK_FOLDED;\n\n        case '|':\n          return Type.BLOCK_LITERAL;\n\n        case '{':\n          return Type.FLOW_MAP;\n\n        case '[':\n          return Type.FLOW_SEQ;\n\n        case '?':\n          return !inFlow && Node.atBlank(src, offset + 1, true) ? Type.MAP_KEY : Type.PLAIN;\n\n        case ':':\n          return !inFlow && Node.atBlank(src, offset + 1, true) ? Type.MAP_VALUE : Type.PLAIN;\n\n        case '-':\n          return !inFlow && Node.atBlank(src, offset + 1, true) ? Type.SEQ_ITEM : Type.PLAIN;\n\n        case '\"':\n          return Type.QUOTE_DOUBLE;\n\n        case \"'\":\n          return Type.QUOTE_SINGLE;\n\n        default:\n          return Type.PLAIN;\n      }\n    }\n  }]);\n\n  return ParseContext;\n}();\n\n// Published as 'yaml/parse-cst'\nfunction parse(src) {\n  var cr = [];\n\n  if (src.indexOf('\\r') !== -1) {\n    src = src.replace(/\\r\\n?/g, function (match, offset) {\n      if (match.length > 1) cr.push(offset);\n      return '\\n';\n    });\n  }\n\n  var documents = [];\n  var offset = 0;\n\n  do {\n    var doc = new Document();\n    var context = new ParseContext({\n      src: src\n    });\n    offset = doc.parse(context, offset);\n    documents.push(doc);\n  } while (offset < src.length);\n\n  documents.setOrigRanges = function () {\n    if (cr.length === 0) return false;\n\n    for (var i = 1; i < cr.length; ++i) {\n      cr[i] -= i;\n    }\n\n    var crOffset = 0;\n\n    for (var _i = 0; _i < documents.length; ++_i) {\n      crOffset = documents[_i].setOrigRanges(cr, crOffset);\n    }\n\n    cr.splice(0, cr.length);\n    return true;\n  };\n\n  documents.toString = function () {\n    return documents.join('...\\n');\n  };\n\n  return documents;\n}\n\nexport { parse };\n", "import { c as _classCallCheck, j as _inherits, k as _createSuper, b as _createClass, e as _defineProperty, p as _assertThisInitialized, a as _typeof, q as _toArray, T as Type, _ as _createForOfIteratorHelper, l as _get, m as _getPrototypeOf, o as YAMLReferenceError, r as _possibleConstructorReturn, h as _slicedToArray, g as YAMLSemanticError, n as defaultTags, f as YAMLWarning, C as Char, Y as YAMLSyntaxError, P as PlainValue } from './PlainValue-b8036b75.js';\n\nfunction addCommentBefore(str, indent, comment) {\n  if (!comment) return str;\n  var cc = comment.replace(/[\\s\\S]^/gm, \"$&\".concat(indent, \"#\"));\n  return \"#\".concat(cc, \"\\n\").concat(indent).concat(str);\n}\nfunction addComment(str, indent, comment) {\n  return !comment ? str : comment.indexOf('\\n') === -1 ? \"\".concat(str, \" #\").concat(comment) : \"\".concat(str, \"\\n\") + comment.replace(/^/gm, \"\".concat(indent || '', \"#\"));\n}\n\nvar Node = function Node() {\n  _classCallCheck(this, Node);\n};\n\nfunction toJSON(value, arg, ctx) {\n  if (Array.isArray(value)) return value.map(function (v, i) {\n    return toJSON(v, String(i), ctx);\n  });\n\n  if (value && typeof value.toJSON === 'function') {\n    var anchor = ctx && ctx.anchors && ctx.anchors.get(value);\n    if (anchor) ctx.onCreate = function (res) {\n      anchor.res = res;\n      delete ctx.onCreate;\n    };\n    var res = value.toJSON(arg, ctx);\n    if (anchor && ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n\n  if ((!ctx || !ctx.keep) && typeof value === 'bigint') return Number(value);\n  return value;\n}\n\nvar Scalar = /*#__PURE__*/function (_Node) {\n  _inherits(Scalar, _Node);\n\n  var _super = _createSuper(Scalar);\n\n  function Scalar(value) {\n    var _this;\n\n    _classCallCheck(this, Scalar);\n\n    _this = _super.call(this);\n    _this.value = value;\n    return _this;\n  }\n\n  _createClass(Scalar, [{\n    key: \"toJSON\",\n    value: function toJSON$1(arg, ctx) {\n      return ctx && ctx.keep ? this.value : toJSON(this.value, arg, ctx);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return String(this.value);\n    }\n  }]);\n\n  return Scalar;\n}(Node);\n\nfunction collectionFromPath(schema, path, value) {\n  var v = value;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var k = path[i];\n\n    if (Number.isInteger(k) && k >= 0) {\n      var a = [];\n      a[k] = v;\n      v = a;\n    } else {\n      var o = {};\n      Object.defineProperty(o, k, {\n        value: v,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n      v = o;\n    }\n  }\n\n  return schema.createNode(v, false);\n} // null, undefined, or an empty non-string iterable (e.g. [])\n\n\nvar isEmptyPath = function isEmptyPath(path) {\n  return path == null || _typeof(path) === 'object' && path[Symbol.iterator]().next().done;\n};\nvar Collection = /*#__PURE__*/function (_Node) {\n  _inherits(Collection, _Node);\n\n  var _super = _createSuper(Collection);\n\n  function Collection(schema) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _this.schema = schema;\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      if (isEmptyPath(path)) this.add(value);else {\n        var _path = _toArray(path),\n            key = _path[0],\n            rest = _path.slice(1);\n\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.addIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n      }\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(_ref) {\n      var _ref2 = _toArray(_ref),\n          key = _ref2[0],\n          rest = _ref2.slice(1);\n\n      if (rest.length === 0) return this.delete(key);\n      var node = this.get(key, true);\n      if (node instanceof Collection) return node.deleteIn(rest);else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(_ref3, keepScalar) {\n      var _ref4 = _toArray(_ref3),\n          key = _ref4[0],\n          rest = _ref4.slice(1);\n\n      var node = this.get(key, true);\n      if (rest.length === 0) return !keepScalar && node instanceof Scalar ? node.value : node;else return node instanceof Collection ? node.getIn(rest, keepScalar) : undefined;\n    }\n  }, {\n    key: \"hasAllNullValues\",\n    value: function hasAllNullValues() {\n      return this.items.every(function (node) {\n        if (!node || node.type !== 'PAIR') return false;\n        var n = node.value;\n        return n == null || n instanceof Scalar && n.value == null && !n.commentBefore && !n.comment && !n.tag;\n      });\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(_ref5) {\n      var _ref6 = _toArray(_ref5),\n          key = _ref6[0],\n          rest = _ref6.slice(1);\n\n      if (rest.length === 0) return this.has(key);\n      var node = this.get(key, true);\n      return node instanceof Collection ? node.hasIn(rest) : false;\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(_ref7, value) {\n      var _ref8 = _toArray(_ref7),\n          key = _ref8[0],\n          rest = _ref8.slice(1);\n\n      if (rest.length === 0) {\n        this.set(key, value);\n      } else {\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.setIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n      }\n    } // overridden in implementations\n\n    /* istanbul ignore next */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return null;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, _ref9, onComment, onChompKeep) {\n      var _this2 = this;\n\n      var blockItem = _ref9.blockItem,\n          flowChars = _ref9.flowChars,\n          isMap = _ref9.isMap,\n          itemIndent = _ref9.itemIndent;\n      var _ctx = ctx,\n          indent = _ctx.indent,\n          indentStep = _ctx.indentStep,\n          stringify = _ctx.stringify;\n      var inFlow = this.type === Type.FLOW_MAP || this.type === Type.FLOW_SEQ || ctx.inFlow;\n      if (inFlow) itemIndent += indentStep;\n      var allNullValues = isMap && this.hasAllNullValues();\n      ctx = Object.assign({}, ctx, {\n        allNullValues: allNullValues,\n        indent: itemIndent,\n        inFlow: inFlow,\n        type: null\n      });\n      var chompKeep = false;\n      var hasItemWithNewLine = false;\n      var nodes = this.items.reduce(function (nodes, item, i) {\n        var comment;\n\n        if (item) {\n          if (!chompKeep && item.spaceBefore) nodes.push({\n            type: 'comment',\n            str: ''\n          });\n          if (item.commentBefore) item.commentBefore.match(/^.*$/gm).forEach(function (line) {\n            nodes.push({\n              type: 'comment',\n              str: \"#\".concat(line)\n            });\n          });\n          if (item.comment) comment = item.comment;\n          if (inFlow && (!chompKeep && item.spaceBefore || item.commentBefore || item.comment || item.key && (item.key.commentBefore || item.key.comment) || item.value && (item.value.commentBefore || item.value.comment))) hasItemWithNewLine = true;\n        }\n\n        chompKeep = false;\n        var str = stringify(item, ctx, function () {\n          return comment = null;\n        }, function () {\n          return chompKeep = true;\n        });\n        if (inFlow && !hasItemWithNewLine && str.includes('\\n')) hasItemWithNewLine = true;\n        if (inFlow && i < _this2.items.length - 1) str += ',';\n        str = addComment(str, itemIndent, comment);\n        if (chompKeep && (comment || inFlow)) chompKeep = false;\n        nodes.push({\n          type: 'item',\n          str: str\n        });\n        return nodes;\n      }, []);\n      var str;\n\n      if (nodes.length === 0) {\n        str = flowChars.start + flowChars.end;\n      } else if (inFlow) {\n        var start = flowChars.start,\n            end = flowChars.end;\n        var strings = nodes.map(function (n) {\n          return n.str;\n        });\n\n        if (hasItemWithNewLine || strings.reduce(function (sum, str) {\n          return sum + str.length + 2;\n        }, 2) > Collection.maxFlowStringSingleLineLength) {\n          str = start;\n\n          var _iterator = _createForOfIteratorHelper(strings),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var s = _step.value;\n              str += s ? \"\\n\".concat(indentStep).concat(indent).concat(s) : '\\n';\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          str += \"\\n\".concat(indent).concat(end);\n        } else {\n          str = \"\".concat(start, \" \").concat(strings.join(' '), \" \").concat(end);\n        }\n      } else {\n        var _strings = nodes.map(blockItem);\n\n        str = _strings.shift();\n\n        var _iterator2 = _createForOfIteratorHelper(_strings),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _s = _step2.value;\n            str += _s ? \"\\n\".concat(indent).concat(_s) : '\\n';\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      if (this.comment) {\n        str += '\\n' + this.comment.replace(/^/gm, \"\".concat(indent, \"#\"));\n        if (onComment) onComment();\n      } else if (chompKeep && onChompKeep) onChompKeep();\n\n      return str;\n    }\n  }]);\n\n  return Collection;\n}(Node);\n\n_defineProperty(Collection, \"maxFlowStringSingleLineLength\", 60);\n\nfunction asItemIndex(key) {\n  var idx = key instanceof Scalar ? key.value : key;\n  if (idx && typeof idx === 'string') idx = Number(idx);\n  return Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\n\nvar YAMLSeq = /*#__PURE__*/function (_Collection) {\n  _inherits(YAMLSeq, _Collection);\n\n  var _super = _createSuper(YAMLSeq);\n\n  function YAMLSeq() {\n    _classCallCheck(this, YAMLSeq);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(YAMLSeq, [{\n    key: \"add\",\n    value: function add(value) {\n      this.items.push(value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') return false;\n      var del = this.items.splice(idx, 1);\n      return del.length > 0;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') return undefined;\n      var it = this.items[idx];\n      return !keepScalar && it instanceof Scalar ? it.value : it;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      var idx = asItemIndex(key);\n      return typeof idx === 'number' && idx < this.items.length;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') throw new Error(\"Expected a valid index, not \".concat(key, \".\"));\n      this.items[idx] = value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON$1(_, ctx) {\n      var seq = [];\n      if (ctx && ctx.onCreate) ctx.onCreate(seq);\n      var i = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          seq.push(toJSON(item, String(i++), ctx));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return seq;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      return _get(_getPrototypeOf(YAMLSeq.prototype), \"toString\", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.type === 'comment' ? n.str : \"- \".concat(n.str);\n        },\n        flowChars: {\n          start: '[',\n          end: ']'\n        },\n        isMap: false,\n        itemIndent: (ctx.indent || '') + '  '\n      }, onComment, onChompKeep);\n    }\n  }]);\n\n  return YAMLSeq;\n}(Collection);\n\nvar stringifyKey = function stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return '';\n  if (_typeof(jsKey) !== 'object') return String(jsKey);\n  if (key instanceof Node && ctx && ctx.doc) return key.toString({\n    anchors: Object.create(null),\n    doc: ctx.doc,\n    indent: '',\n    indentStep: ctx.indentStep,\n    inFlow: true,\n    inStringifyKey: true,\n    stringify: ctx.stringify\n  });\n  return JSON.stringify(jsKey);\n};\n\nvar Pair = /*#__PURE__*/function (_Node) {\n  _inherits(Pair, _Node);\n\n  var _super = _createSuper(Pair);\n\n  function Pair(key) {\n    var _this;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Pair);\n\n    _this = _super.call(this);\n    _this.key = key;\n    _this.value = value;\n    _this.type = Pair.Type.PAIR;\n    return _this;\n  }\n\n  _createClass(Pair, [{\n    key: \"commentBefore\",\n    get: function get() {\n      return this.key instanceof Node ? this.key.commentBefore : undefined;\n    },\n    set: function set(cb) {\n      if (this.key == null) this.key = new Scalar(null);\n      if (this.key instanceof Node) this.key.commentBefore = cb;else {\n        var msg = 'Pair.commentBefore is an alias for Pair.key.commentBefore. To set it, the key must be a Node.';\n        throw new Error(msg);\n      }\n    }\n  }, {\n    key: \"addToJSMap\",\n    value: function addToJSMap(ctx, map) {\n      var key = toJSON(this.key, '', ctx);\n\n      if (map instanceof Map) {\n        var value = toJSON(this.value, key, ctx);\n        map.set(key, value);\n      } else if (map instanceof Set) {\n        map.add(key);\n      } else {\n        var stringKey = stringifyKey(this.key, key, ctx);\n\n        var _value = toJSON(this.value, stringKey, ctx);\n\n        if (stringKey in map) Object.defineProperty(map, stringKey, {\n          value: _value,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        });else map[stringKey] = _value;\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      var pair = ctx && ctx.mapAsMap ? new Map() : {};\n      return this.addToJSMap(ctx, pair);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx || !ctx.doc) return JSON.stringify(this);\n      var _ctx$doc$options = ctx.doc.options,\n          indentSize = _ctx$doc$options.indent,\n          indentSeq = _ctx$doc$options.indentSeq,\n          simpleKeys = _ctx$doc$options.simpleKeys;\n      var key = this.key,\n          value = this.value;\n      var keyComment = key instanceof Node && key.comment;\n\n      if (simpleKeys) {\n        if (keyComment) {\n          throw new Error('With simple keys, key nodes cannot have comments');\n        }\n\n        if (key instanceof Collection) {\n          var msg = 'With simple keys, collection cannot be used as a key value';\n          throw new Error(msg);\n        }\n      }\n\n      var explicitKey = !simpleKeys && (!key || keyComment || (key instanceof Node ? key instanceof Collection || key.type === Type.BLOCK_FOLDED || key.type === Type.BLOCK_LITERAL : _typeof(key) === 'object'));\n      var _ctx = ctx,\n          doc = _ctx.doc,\n          indent = _ctx.indent,\n          indentStep = _ctx.indentStep,\n          stringify = _ctx.stringify;\n      ctx = Object.assign({}, ctx, {\n        implicitKey: !explicitKey,\n        indent: indent + indentStep\n      });\n      var chompKeep = false;\n      var str = stringify(key, ctx, function () {\n        return keyComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      str = addComment(str, ctx.indent, keyComment);\n\n      if (!explicitKey && str.length > 1024) {\n        if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n      }\n\n      if (ctx.allNullValues && !simpleKeys) {\n        if (this.comment) {\n          str = addComment(str, ctx.indent, this.comment);\n          if (onComment) onComment();\n        } else if (chompKeep && !keyComment && onChompKeep) onChompKeep();\n\n        return ctx.inFlow && !explicitKey ? str : \"? \".concat(str);\n      }\n\n      str = explicitKey ? \"? \".concat(str, \"\\n\").concat(indent, \":\") : \"\".concat(str, \":\");\n\n      if (this.comment) {\n        // expected (but not strictly required) to be a single-line comment\n        str = addComment(str, ctx.indent, this.comment);\n        if (onComment) onComment();\n      }\n\n      var vcb = '';\n      var valueComment = null;\n\n      if (value instanceof Node) {\n        if (value.spaceBefore) vcb = '\\n';\n\n        if (value.commentBefore) {\n          var cs = value.commentBefore.replace(/^/gm, \"\".concat(ctx.indent, \"#\"));\n          vcb += \"\\n\".concat(cs);\n        }\n\n        valueComment = value.comment;\n      } else if (value && _typeof(value) === 'object') {\n        value = doc.schema.createNode(value, true);\n      }\n\n      ctx.implicitKey = false;\n      if (!explicitKey && !this.comment && value instanceof Scalar) ctx.indentAtStart = str.length + 1;\n      chompKeep = false;\n\n      if (!indentSeq && indentSize >= 2 && !ctx.inFlow && !explicitKey && value instanceof YAMLSeq && value.type !== Type.FLOW_SEQ && !value.tag && !doc.anchors.getName(value)) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n      }\n\n      var valueStr = stringify(value, ctx, function () {\n        return valueComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      var ws = ' ';\n\n      if (vcb || this.comment) {\n        ws = \"\".concat(vcb, \"\\n\").concat(ctx.indent);\n      } else if (!explicitKey && value instanceof Collection) {\n        var flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n')) ws = \"\\n\".concat(ctx.indent);\n      } else if (valueStr[0] === '\\n') ws = '';\n\n      if (chompKeep && !valueComment && onChompKeep) onChompKeep();\n      return addComment(str + ws + valueStr, ctx.indent, valueComment);\n    }\n  }]);\n\n  return Pair;\n}(Node);\n\n_defineProperty(Pair, \"Type\", {\n  PAIR: 'PAIR',\n  MERGE_PAIR: 'MERGE_PAIR'\n});\n\nvar getAliasCount = function getAliasCount(node, anchors) {\n  if (node instanceof Alias) {\n    var anchor = anchors.get(node.source);\n    return anchor.count * anchor.aliasCount;\n  } else if (node instanceof Collection) {\n    var count = 0;\n\n    var _iterator = _createForOfIteratorHelper(node.items),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var c = getAliasCount(item, anchors);\n        if (c > count) count = c;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return count;\n  } else if (node instanceof Pair) {\n    var kc = getAliasCount(node.key, anchors);\n    var vc = getAliasCount(node.value, anchors);\n    return Math.max(kc, vc);\n  }\n\n  return 1;\n};\n\nvar Alias = /*#__PURE__*/function (_Node) {\n  _inherits(Alias, _Node);\n\n  var _super = _createSuper(Alias);\n\n  function Alias(source) {\n    var _this;\n\n    _classCallCheck(this, Alias);\n\n    _this = _super.call(this);\n    _this.source = source;\n    _this.type = Type.ALIAS;\n    return _this;\n  }\n\n  _createClass(Alias, [{\n    key: \"tag\",\n    set: function set(t) {\n      throw new Error('Alias nodes cannot have tags');\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON$1(arg, ctx) {\n      if (!ctx) return toJSON(this.source, arg, ctx);\n      var anchors = ctx.anchors,\n          maxAliasCount = ctx.maxAliasCount;\n      var anchor = anchors.get(this.source);\n      /* istanbul ignore if */\n\n      if (!anchor || anchor.res === undefined) {\n        var msg = 'This should not happen: Alias anchor was not resolved?';\n        if (this.cstNode) throw new YAMLReferenceError(this.cstNode, msg);else throw new ReferenceError(msg);\n      }\n\n      if (maxAliasCount >= 0) {\n        anchor.count += 1;\n        if (anchor.aliasCount === 0) anchor.aliasCount = getAliasCount(this.source, anchors);\n\n        if (anchor.count * anchor.aliasCount > maxAliasCount) {\n          var _msg = 'Excessive alias count indicates a resource exhaustion attack';\n          if (this.cstNode) throw new YAMLReferenceError(this.cstNode, _msg);else throw new ReferenceError(_msg);\n        }\n      }\n\n      return anchor.res;\n    } // Only called when stringifying an alias mapping key while constructing\n    // Object output.\n\n  }, {\n    key: \"toString\",\n    value: function toString(ctx) {\n      return Alias.stringify(this, ctx);\n    }\n  }], [{\n    key: \"stringify\",\n    value: function stringify(_ref, _ref2) {\n      var range = _ref.range,\n          source = _ref.source;\n      var anchors = _ref2.anchors,\n          doc = _ref2.doc,\n          implicitKey = _ref2.implicitKey,\n          inStringifyKey = _ref2.inStringifyKey;\n      var anchor = Object.keys(anchors).find(function (a) {\n        return anchors[a] === source;\n      });\n      if (!anchor && inStringifyKey) anchor = doc.anchors.getName(source) || doc.anchors.newName();\n      if (anchor) return \"*\".concat(anchor).concat(implicitKey ? ' ' : '');\n      var msg = doc.anchors.getName(source) ? 'Alias node must be after source node' : 'Source node not found for alias node';\n      throw new Error(\"\".concat(msg, \" [\").concat(range, \"]\"));\n    }\n  }]);\n\n  return Alias;\n}(Node);\n\n_defineProperty(Alias, \"default\", true);\n\nfunction findPair(items, key) {\n  var k = key instanceof Scalar ? key.value : key;\n\n  var _iterator = _createForOfIteratorHelper(items),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var it = _step.value;\n\n      if (it instanceof Pair) {\n        if (it.key === key || it.key === k) return it;\n        if (it.key && it.key.value === k) return it;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return undefined;\n}\nvar YAMLMap = /*#__PURE__*/function (_Collection) {\n  _inherits(YAMLMap, _Collection);\n\n  var _super = _createSuper(YAMLMap);\n\n  function YAMLMap() {\n    _classCallCheck(this, YAMLMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(YAMLMap, [{\n    key: \"add\",\n    value: function add(pair, overwrite) {\n      if (!pair) pair = new Pair(pair);else if (!(pair instanceof Pair)) pair = new Pair(pair.key || pair, pair.value);\n      var prev = findPair(this.items, pair.key);\n      var sortEntries = this.schema && this.schema.sortMapEntries;\n\n      if (prev) {\n        if (overwrite) prev.value = pair.value;else throw new Error(\"Key \".concat(pair.key, \" already set\"));\n      } else if (sortEntries) {\n        var i = this.items.findIndex(function (item) {\n          return sortEntries(pair, item) < 0;\n        });\n        if (i === -1) this.items.push(pair);else this.items.splice(i, 0, pair);\n      } else {\n        this.items.push(pair);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var it = findPair(this.items, key);\n      if (!it) return false;\n      var del = this.items.splice(this.items.indexOf(it), 1);\n      return del.length > 0;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      var it = findPair(this.items, key);\n      var node = it && it.value;\n      return !keepScalar && node instanceof Scalar ? node.value : node;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return !!findPair(this.items, key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param {*} arg ignored\n     * @param {*} ctx Conversion context, originally set in Document#toJSON()\n     * @param {Class} Type If set, forces the returned collection type\n     * @returns {*} Instance of Type, Map, or Object\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx, Type) {\n      var map = Type ? new Type() : ctx && ctx.mapAsMap ? new Map() : {};\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n      var _iterator2 = _createForOfIteratorHelper(this.items),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          item.addToJSMap(ctx, map);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n\n      var _iterator3 = _createForOfIteratorHelper(this.items),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n          if (!(item instanceof Pair)) throw new Error(\"Map items must all be pairs; found \".concat(JSON.stringify(item), \" instead\"));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return _get(_getPrototypeOf(YAMLMap.prototype), \"toString\", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.str;\n        },\n        flowChars: {\n          start: '{',\n          end: '}'\n        },\n        isMap: true,\n        itemIndent: ctx.indent || ''\n      }, onComment, onChompKeep);\n    }\n  }]);\n\n  return YAMLMap;\n}(Collection);\n\nvar MERGE_KEY = '<<';\nvar Merge = /*#__PURE__*/function (_Pair) {\n  _inherits(Merge, _Pair);\n\n  var _super = _createSuper(Merge);\n\n  function Merge(pair) {\n    var _this;\n\n    _classCallCheck(this, Merge);\n\n    if (pair instanceof Pair) {\n      var seq = pair.value;\n\n      if (!(seq instanceof YAMLSeq)) {\n        seq = new YAMLSeq();\n        seq.items.push(pair.value);\n        seq.range = pair.value.range;\n      }\n\n      _this = _super.call(this, pair.key, seq);\n      _this.range = pair.range;\n    } else {\n      _this = _super.call(this, new Scalar(MERGE_KEY), new YAMLSeq());\n    }\n\n    _this.type = Pair.Type.MERGE_PAIR;\n    return _possibleConstructorReturn(_this);\n  } // If the value associated with a merge key is a single mapping node, each of\n  // its key/value pairs is inserted into the current mapping, unless the key\n  // already exists in it. If the value associated with the merge key is a\n  // sequence, then this sequence is expected to contain mapping nodes and each\n  // of these nodes is merged in turn according to its order in the sequence.\n  // Keys in mapping nodes earlier in the sequence override keys specified in\n  // later mapping nodes. -- http://yaml.org/type/merge.html\n\n\n  _createClass(Merge, [{\n    key: \"addToJSMap\",\n    value: function addToJSMap(ctx, map) {\n      var _iterator = _createForOfIteratorHelper(this.value.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var source = _step.value.source;\n          if (!(source instanceof YAMLMap)) throw new Error('Merge sources must be maps');\n          var srcMap = source.toJSON(null, ctx, Map);\n\n          var _iterator2 = _createForOfIteratorHelper(srcMap),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _step2$value = _slicedToArray(_step2.value, 2),\n                  key = _step2$value[0],\n                  value = _step2$value[1];\n\n              if (map instanceof Map) {\n                if (!map.has(key)) map.set(key, value);\n              } else if (map instanceof Set) {\n                map.add(key);\n              } else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n                Object.defineProperty(map, key, {\n                  value: value,\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                });\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment) {\n      var seq = this.value;\n      if (seq.items.length > 1) return _get(_getPrototypeOf(Merge.prototype), \"toString\", this).call(this, ctx, onComment);\n      this.value = seq.items[0];\n\n      var str = _get(_getPrototypeOf(Merge.prototype), \"toString\", this).call(this, ctx, onComment);\n\n      this.value = seq;\n      return str;\n    }\n  }]);\n\n  return Merge;\n}(Pair);\n\nvar binaryOptions = {\n  defaultType: Type.BLOCK_LITERAL,\n  lineWidth: 76\n};\nvar boolOptions = {\n  trueStr: 'true',\n  falseStr: 'false'\n};\nvar intOptions = {\n  asBigInt: false\n};\nvar nullOptions = {\n  nullStr: 'null'\n};\nvar strOptions = {\n  defaultType: Type.PLAIN,\n  doubleQuoted: {\n    jsonEncoding: false,\n    minMultiLineLength: 40\n  },\n  fold: {\n    lineWidth: 80,\n    minContentWidth: 20\n  }\n};\n\nfunction resolveScalar(str, tags, scalarFallback) {\n  var _iterator = _createForOfIteratorHelper(tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          format = _step$value.format,\n          test = _step$value.test,\n          resolve = _step$value.resolve;\n\n      if (test) {\n        var match = str.match(test);\n\n        if (match) {\n          var res = resolve.apply(null, match);\n          if (!(res instanceof Scalar)) res = new Scalar(res);\n          if (format) res.format = format;\n          return res;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (scalarFallback) str = scalarFallback(str);\n  return new Scalar(str);\n}\n\nvar FOLD_FLOW = 'flow';\nvar FOLD_BLOCK = 'block';\nvar FOLD_QUOTED = 'quoted'; // presumes i+1 is at the start of a line\n// returns index of last newline in more-indented block\n\nvar consumeMoreIndentedLines = function consumeMoreIndentedLines(text, i) {\n  var ch = text[i + 1];\n\n  while (ch === ' ' || ch === '\\t') {\n    do {\n      ch = text[i += 1];\n    } while (ch && ch !== '\\n');\n\n    ch = text[i + 1];\n  }\n\n  return i;\n};\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n *\n * @param {string} text\n * @param {string} indent\n * @param {string} [mode='flow'] `'block'` prevents more-indented lines\n *   from being folded; `'quoted'` allows for `\\` escapes, including escaped\n *   newlines\n * @param {Object} options\n * @param {number} [options.indentAtStart] Accounts for leading contents on\n *   the first line, defaulting to `indent.length`\n * @param {number} [options.lineWidth=80]\n * @param {number} [options.minContentWidth=20] Allow highly indented lines to\n *   stretch the line width or indent content from the start\n * @param {function} options.onFold Called once if the text is folded\n * @param {function} options.onFold Called once if any line of text exceeds\n *   lineWidth characters\n */\n\n\nfunction foldFlowLines(text, indent, mode, _ref) {\n  var indentAtStart = _ref.indentAtStart,\n      _ref$lineWidth = _ref.lineWidth,\n      lineWidth = _ref$lineWidth === void 0 ? 80 : _ref$lineWidth,\n      _ref$minContentWidth = _ref.minContentWidth,\n      minContentWidth = _ref$minContentWidth === void 0 ? 20 : _ref$minContentWidth,\n      onFold = _ref.onFold,\n      onOverflow = _ref.onOverflow;\n  if (!lineWidth || lineWidth < 0) return text;\n  var endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n  if (text.length <= endStep) return text;\n  var folds = [];\n  var escapedFolds = {};\n  var end = lineWidth - indent.length;\n\n  if (typeof indentAtStart === 'number') {\n    if (indentAtStart > lineWidth - Math.max(2, minContentWidth)) folds.push(0);else end = lineWidth - indentAtStart;\n  }\n\n  var split = undefined;\n  var prev = undefined;\n  var overflow = false;\n  var i = -1;\n  var escStart = -1;\n  var escEnd = -1;\n\n  if (mode === FOLD_BLOCK) {\n    i = consumeMoreIndentedLines(text, i);\n    if (i !== -1) end = i + endStep;\n  }\n\n  for (var ch; ch = text[i += 1];) {\n    if (mode === FOLD_QUOTED && ch === '\\\\') {\n      escStart = i;\n\n      switch (text[i + 1]) {\n        case 'x':\n          i += 3;\n          break;\n\n        case 'u':\n          i += 5;\n          break;\n\n        case 'U':\n          i += 9;\n          break;\n\n        default:\n          i += 1;\n      }\n\n      escEnd = i;\n    }\n\n    if (ch === '\\n') {\n      if (mode === FOLD_BLOCK) i = consumeMoreIndentedLines(text, i);\n      end = i + endStep;\n      split = undefined;\n    } else {\n      if (ch === ' ' && prev && prev !== ' ' && prev !== '\\n' && prev !== '\\t') {\n        // space surrounded by non-space can be replaced with newline + indent\n        var next = text[i + 1];\n        if (next && next !== ' ' && next !== '\\n' && next !== '\\t') split = i;\n      }\n\n      if (i >= end) {\n        if (split) {\n          folds.push(split);\n          end = split + endStep;\n          split = undefined;\n        } else if (mode === FOLD_QUOTED) {\n          // white-space collected at end may stretch past lineWidth\n          while (prev === ' ' || prev === '\\t') {\n            prev = ch;\n            ch = text[i += 1];\n            overflow = true;\n          } // Account for newline escape, but don't break preceding escape\n\n\n          var j = i > escEnd + 1 ? i - 2 : escStart - 1; // Bail out if lineWidth & minContentWidth are shorter than an escape string\n\n          if (escapedFolds[j]) return text;\n          folds.push(j);\n          escapedFolds[j] = true;\n          end = j + endStep;\n          split = undefined;\n        } else {\n          overflow = true;\n        }\n      }\n    }\n\n    prev = ch;\n  }\n\n  if (overflow && onOverflow) onOverflow();\n  if (folds.length === 0) return text;\n  if (onFold) onFold();\n  var res = text.slice(0, folds[0]);\n\n  for (var _i = 0; _i < folds.length; ++_i) {\n    var fold = folds[_i];\n\n    var _end = folds[_i + 1] || text.length;\n\n    if (fold === 0) res = \"\\n\".concat(indent).concat(text.slice(0, _end));else {\n      if (mode === FOLD_QUOTED && escapedFolds[fold]) res += \"\".concat(text[fold], \"\\\\\");\n      res += \"\\n\".concat(indent).concat(text.slice(fold + 1, _end));\n    }\n  }\n\n  return res;\n}\n\nvar getFoldOptions = function getFoldOptions(_ref) {\n  var indentAtStart = _ref.indentAtStart;\n  return indentAtStart ? Object.assign({\n    indentAtStart: indentAtStart\n  }, strOptions.fold) : strOptions.fold;\n}; // Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\n\n\nvar containsDocumentMarker = function containsDocumentMarker(str) {\n  return /^(%|---|\\.\\.\\.)/m.test(str);\n};\n\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n  if (!lineWidth || lineWidth < 0) return false;\n  var limit = lineWidth - indentLength;\n  var strLen = str.length;\n  if (strLen <= limit) return false;\n\n  for (var i = 0, start = 0; i < strLen; ++i) {\n    if (str[i] === '\\n') {\n      if (i - start > limit) return true;\n      start = i + 1;\n      if (strLen - start <= limit) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction doubleQuotedString(value, ctx) {\n  var implicitKey = ctx.implicitKey;\n  var _strOptions$doubleQuo = strOptions.doubleQuoted,\n      jsonEncoding = _strOptions$doubleQuo.jsonEncoding,\n      minMultiLineLength = _strOptions$doubleQuo.minMultiLineLength;\n  var json = JSON.stringify(value);\n  if (jsonEncoding) return json;\n  var indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  var str = '';\n  var start = 0;\n\n  for (var i = 0, ch = json[i]; ch; ch = json[++i]) {\n    if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n      // space before newline needs to be escaped to not be folded\n      str += json.slice(start, i) + '\\\\ ';\n      i += 1;\n      start = i;\n      ch = '\\\\';\n    }\n\n    if (ch === '\\\\') switch (json[i + 1]) {\n      case 'u':\n        {\n          str += json.slice(start, i);\n          var code = json.substr(i + 2, 4);\n\n          switch (code) {\n            case '0000':\n              str += '\\\\0';\n              break;\n\n            case '0007':\n              str += '\\\\a';\n              break;\n\n            case '000b':\n              str += '\\\\v';\n              break;\n\n            case '001b':\n              str += '\\\\e';\n              break;\n\n            case '0085':\n              str += '\\\\N';\n              break;\n\n            case '00a0':\n              str += '\\\\_';\n              break;\n\n            case '2028':\n              str += '\\\\L';\n              break;\n\n            case '2029':\n              str += '\\\\P';\n              break;\n\n            default:\n              if (code.substr(0, 2) === '00') str += '\\\\x' + code.substr(2);else str += json.substr(i, 6);\n          }\n\n          i += 5;\n          start = i + 1;\n        }\n        break;\n\n      case 'n':\n        if (implicitKey || json[i + 2] === '\"' || json.length < minMultiLineLength) {\n          i += 1;\n        } else {\n          // folding will eat first newline\n          str += json.slice(start, i) + '\\n\\n';\n\n          while (json[i + 2] === '\\\\' && json[i + 3] === 'n' && json[i + 4] !== '\"') {\n            str += '\\n';\n            i += 2;\n          }\n\n          str += indent; // space after newline needs to be escaped to not be folded\n\n          if (json[i + 2] === ' ') str += '\\\\';\n          i += 1;\n          start = i + 1;\n        }\n\n        break;\n\n      default:\n        i += 1;\n    }\n  }\n\n  str = start ? str + json.slice(start) : json;\n  return implicitKey ? str : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\n\nfunction singleQuotedString(value, ctx) {\n  if (ctx.implicitKey) {\n    if (/\\n/.test(value)) return doubleQuotedString(value, ctx);\n  } else {\n    // single quoted string can't have leading or trailing whitespace around newline\n    if (/[ \\t]\\n|\\n[ \\t]/.test(value)) return doubleQuotedString(value, ctx);\n  }\n\n  var indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  var res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, \"$&\\n\".concat(indent)) + \"'\";\n  return ctx.implicitKey ? res : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\n\nfunction blockString(_ref2, ctx, onComment, onChompKeep) {\n  var comment = _ref2.comment,\n      type = _ref2.type,\n      value = _ref2.value;\n\n  // 1. Block can't end in whitespace unless the last line is non-empty.\n  // 2. Strings consisting of only whitespace are best rendered explicitly.\n  if (/\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  var indent = ctx.indent || (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n  var indentSize = indent ? '2' : '1'; // root is at -1\n\n  var literal = type === Type.BLOCK_FOLDED ? false : type === Type.BLOCK_LITERAL ? true : !lineLengthOverLimit(value, strOptions.fold.lineWidth, indent.length);\n  var header = literal ? '|' : '>';\n  if (!value) return header + '\\n';\n  var wsStart = '';\n  var wsEnd = '';\n  value = value.replace(/[\\n\\t ]*$/, function (ws) {\n    var n = ws.indexOf('\\n');\n\n    if (n === -1) {\n      header += '-'; // strip\n    } else if (value === ws || n !== ws.length - 1) {\n      header += '+'; // keep\n\n      if (onChompKeep) onChompKeep();\n    }\n\n    wsEnd = ws.replace(/\\n$/, '');\n    return '';\n  }).replace(/^[\\n ]*/, function (ws) {\n    if (ws.indexOf(' ') !== -1) header += indentSize;\n    var m = ws.match(/ +$/);\n\n    if (m) {\n      wsStart = ws.slice(0, -m[0].length);\n      return m[0];\n    } else {\n      wsStart = ws;\n      return '';\n    }\n  });\n  if (wsEnd) wsEnd = wsEnd.replace(/\\n+(?!\\n|$)/g, \"$&\".concat(indent));\n  if (wsStart) wsStart = wsStart.replace(/\\n+/g, \"$&\".concat(indent));\n\n  if (comment) {\n    header += ' #' + comment.replace(/ ?[\\r\\n]+/g, ' ');\n    if (onComment) onComment();\n  }\n\n  if (!value) return \"\".concat(header).concat(indentSize, \"\\n\").concat(indent).concat(wsEnd);\n\n  if (literal) {\n    value = value.replace(/\\n+/g, \"$&\".concat(indent));\n    return \"\".concat(header, \"\\n\").concat(indent).concat(wsStart).concat(value).concat(wsEnd);\n  }\n\n  value = value.replace(/\\n+/g, '\\n$&').replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n  //         ^ ind.line  ^ empty     ^ capture next empty lines only at end of indent\n  .replace(/\\n+/g, \"$&\".concat(indent));\n  var body = foldFlowLines(\"\".concat(wsStart).concat(value).concat(wsEnd), indent, FOLD_BLOCK, strOptions.fold);\n  return \"\".concat(header, \"\\n\").concat(indent).concat(body);\n}\n\nfunction plainString(item, ctx, onComment, onChompKeep) {\n  var comment = item.comment,\n      type = item.type,\n      value = item.value;\n  var actualString = ctx.actualString,\n      implicitKey = ctx.implicitKey,\n      indent = ctx.indent,\n      inFlow = ctx.inFlow;\n\n  if (implicitKey && /[\\n[\\]{},]/.test(value) || inFlow && /[[\\]{},]/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  if (!value || /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n    // not allowed:\n    // - empty string, '-' or '?'\n    // - start with an indicator character (except [?:-]) or /[?-] /\n    // - '\\n ', ': ' or ' \\n' anywhere\n    // - '#' not preceded by a non-space char\n    // - end with ' ' or ':'\n    return implicitKey || inFlow || value.indexOf('\\n') === -1 ? value.indexOf('\"') !== -1 && value.indexOf(\"'\") === -1 ? singleQuotedString(value, ctx) : doubleQuotedString(value, ctx) : blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (!implicitKey && !inFlow && type !== Type.PLAIN && value.indexOf('\\n') !== -1) {\n    // Where allowed & type not set explicitly, prefer block style for multiline strings\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (indent === '' && containsDocumentMarker(value)) {\n    ctx.forceBlockIndent = true;\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  var str = value.replace(/\\n+/g, \"$&\\n\".concat(indent)); // Verify that output will be parsed as a string, as e.g. plain numbers and\n  // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n  // and others in v1.1.\n\n  if (actualString) {\n    var tags = ctx.doc.schema.tags;\n    var resolved = resolveScalar(str, tags, tags.scalarFallback).value;\n    if (typeof resolved !== 'string') return doubleQuotedString(value, ctx);\n  }\n\n  var body = implicitKey ? str : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n\n  if (comment && !inFlow && (body.indexOf('\\n') !== -1 || comment.indexOf('\\n') !== -1)) {\n    if (onComment) onComment();\n    return addCommentBefore(body, indent, comment);\n  }\n\n  return body;\n}\n\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n  var defaultType = strOptions.defaultType;\n  var implicitKey = ctx.implicitKey,\n      inFlow = ctx.inFlow;\n  var _item = item,\n      type = _item.type,\n      value = _item.value;\n\n  if (typeof value !== 'string') {\n    value = String(value);\n    item = Object.assign({}, item, {\n      value: value\n    });\n  }\n\n  var _stringify = function _stringify(_type) {\n    switch (_type) {\n      case Type.BLOCK_FOLDED:\n      case Type.BLOCK_LITERAL:\n        return blockString(item, ctx, onComment, onChompKeep);\n\n      case Type.QUOTE_DOUBLE:\n        return doubleQuotedString(value, ctx);\n\n      case Type.QUOTE_SINGLE:\n        return singleQuotedString(value, ctx);\n\n      case Type.PLAIN:\n        return plainString(item, ctx, onComment, onChompKeep);\n\n      default:\n        return null;\n    }\n  };\n\n  if (type !== Type.QUOTE_DOUBLE && /[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f]/.test(value)) {\n    // force double quotes on control characters\n    type = Type.QUOTE_DOUBLE;\n  } else if ((implicitKey || inFlow) && (type === Type.BLOCK_FOLDED || type === Type.BLOCK_LITERAL)) {\n    // should not happen; blocks are not valid inside flow containers\n    type = Type.QUOTE_DOUBLE;\n  }\n\n  var res = _stringify(type);\n\n  if (res === null) {\n    res = _stringify(defaultType);\n    if (res === null) throw new Error(\"Unsupported default string type \".concat(defaultType));\n  }\n\n  return res;\n}\n\nfunction stringifyNumber(_ref) {\n  var format = _ref.format,\n      minFractionDigits = _ref.minFractionDigits,\n      tag = _ref.tag,\n      value = _ref.value;\n  if (typeof value === 'bigint') return String(value);\n  if (!isFinite(value)) return isNaN(value) ? '.nan' : value < 0 ? '-.inf' : '.inf';\n  var n = JSON.stringify(value);\n\n  if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\\d/.test(n)) {\n    var i = n.indexOf('.');\n\n    if (i < 0) {\n      i = n.length;\n      n += '.';\n    }\n\n    var d = minFractionDigits - (n.length - i - 1);\n\n    while (d-- > 0) {\n      n += '0';\n    }\n  }\n\n  return n;\n}\n\nfunction checkFlowCollectionEnd(errors, cst) {\n  var char, name;\n\n  switch (cst.type) {\n    case Type.FLOW_MAP:\n      char = '}';\n      name = 'flow map';\n      break;\n\n    case Type.FLOW_SEQ:\n      char = ']';\n      name = 'flow sequence';\n      break;\n\n    default:\n      errors.push(new YAMLSemanticError(cst, 'Not a flow collection!?'));\n      return;\n  }\n\n  var lastItem;\n\n  for (var i = cst.items.length - 1; i >= 0; --i) {\n    var item = cst.items[i];\n\n    if (!item || item.type !== Type.COMMENT) {\n      lastItem = item;\n      break;\n    }\n  }\n\n  if (lastItem && lastItem.char !== char) {\n    var msg = \"Expected \".concat(name, \" to end with \").concat(char);\n    var err;\n\n    if (typeof lastItem.offset === 'number') {\n      err = new YAMLSemanticError(cst, msg);\n      err.offset = lastItem.offset + 1;\n    } else {\n      err = new YAMLSemanticError(lastItem, msg);\n      if (lastItem.range && lastItem.range.end) err.offset = lastItem.range.end - lastItem.range.start;\n    }\n\n    errors.push(err);\n  }\n}\nfunction checkFlowCommentSpace(errors, comment) {\n  var prev = comment.context.src[comment.range.start - 1];\n\n  if (prev !== '\\n' && prev !== '\\t' && prev !== ' ') {\n    var msg = 'Comments must be separated from other tokens by white space characters';\n    errors.push(new YAMLSemanticError(comment, msg));\n  }\n}\nfunction getLongKeyError(source, key) {\n  var sk = String(key);\n  var k = sk.substr(0, 8) + '...' + sk.substr(-8);\n  return new YAMLSemanticError(source, \"The \\\"\".concat(k, \"\\\" key is too long\"));\n}\nfunction resolveComments(collection, comments) {\n  var _iterator = _createForOfIteratorHelper(comments),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          afterKey = _step$value.afterKey,\n          before = _step$value.before,\n          comment = _step$value.comment;\n      var item = collection.items[before];\n\n      if (!item) {\n        if (comment !== undefined) {\n          if (collection.comment) collection.comment += '\\n' + comment;else collection.comment = comment;\n        }\n      } else {\n        if (afterKey && item.value) item = item.value;\n\n        if (comment === undefined) {\n          if (afterKey || !item.commentBefore) item.spaceBefore = true;\n        } else {\n          if (item.commentBefore) item.commentBefore += '\\n' + comment;else item.commentBefore = comment;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\n// on error, will return { str: string, errors: Error[] }\nfunction resolveString(doc, node) {\n  var res = node.strValue;\n  if (!res) return '';\n  if (typeof res === 'string') return res;\n  res.errors.forEach(function (error) {\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n  });\n  return res.str;\n}\n\nfunction resolveTagHandle(doc, node) {\n  var _node$tag = node.tag,\n      handle = _node$tag.handle,\n      suffix = _node$tag.suffix;\n  var prefix = doc.tagPrefixes.find(function (p) {\n    return p.handle === handle;\n  });\n\n  if (!prefix) {\n    var dtp = doc.getDefaults().tagPrefixes;\n    if (dtp) prefix = dtp.find(function (p) {\n      return p.handle === handle;\n    });\n    if (!prefix) throw new YAMLSemanticError(node, \"The \".concat(handle, \" tag handle is non-default and was not declared.\"));\n  }\n\n  if (!suffix) throw new YAMLSemanticError(node, \"The \".concat(handle, \" tag has no suffix.\"));\n\n  if (handle === '!' && (doc.version || doc.options.version) === '1.0') {\n    if (suffix[0] === '^') {\n      doc.warnings.push(new YAMLWarning(node, 'YAML 1.0 ^ tag expansion is not supported'));\n      return suffix;\n    }\n\n    if (/[:/]/.test(suffix)) {\n      // word/foo -> tag:word.yaml.org,2002:foo\n      var vocab = suffix.match(/^([a-z0-9-]+)\\/(.*)/i);\n      return vocab ? \"tag:\".concat(vocab[1], \".yaml.org,2002:\").concat(vocab[2]) : \"tag:\".concat(suffix);\n    }\n  }\n\n  return prefix.prefix + decodeURIComponent(suffix);\n}\n\nfunction resolveTagName(doc, node) {\n  var tag = node.tag,\n      type = node.type;\n  var nonSpecific = false;\n\n  if (tag) {\n    var handle = tag.handle,\n        suffix = tag.suffix,\n        verbatim = tag.verbatim;\n\n    if (verbatim) {\n      if (verbatim !== '!' && verbatim !== '!!') return verbatim;\n      var msg = \"Verbatim tags aren't resolved, so \".concat(verbatim, \" is invalid.\");\n      doc.errors.push(new YAMLSemanticError(node, msg));\n    } else if (handle === '!' && !suffix) {\n      nonSpecific = true;\n    } else {\n      try {\n        return resolveTagHandle(doc, node);\n      } catch (error) {\n        doc.errors.push(error);\n      }\n    }\n  }\n\n  switch (type) {\n    case Type.BLOCK_FOLDED:\n    case Type.BLOCK_LITERAL:\n    case Type.QUOTE_DOUBLE:\n    case Type.QUOTE_SINGLE:\n      return defaultTags.STR;\n\n    case Type.FLOW_MAP:\n    case Type.MAP:\n      return defaultTags.MAP;\n\n    case Type.FLOW_SEQ:\n    case Type.SEQ:\n      return defaultTags.SEQ;\n\n    case Type.PLAIN:\n      return nonSpecific ? defaultTags.STR : null;\n\n    default:\n      return null;\n  }\n}\n\nfunction resolveByTagName(doc, node, tagName) {\n  var tags = doc.schema.tags;\n  var matchWithTest = [];\n\n  var _iterator = _createForOfIteratorHelper(tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tag = _step.value;\n\n      if (tag.tag === tagName) {\n        if (tag.test) matchWithTest.push(tag);else {\n          var res = tag.resolve(doc, node);\n          return res instanceof Collection ? res : new Scalar(res);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var str = resolveString(doc, node);\n  if (typeof str === 'string' && matchWithTest.length > 0) return resolveScalar(str, matchWithTest, tags.scalarFallback);\n  return null;\n}\n\nfunction getFallbackTagName(_ref) {\n  var type = _ref.type;\n\n  switch (type) {\n    case Type.FLOW_MAP:\n    case Type.MAP:\n      return defaultTags.MAP;\n\n    case Type.FLOW_SEQ:\n    case Type.SEQ:\n      return defaultTags.SEQ;\n\n    default:\n      return defaultTags.STR;\n  }\n}\n\nfunction resolveTag(doc, node, tagName) {\n  try {\n    var res = resolveByTagName(doc, node, tagName);\n\n    if (res) {\n      if (tagName && node.tag) res.tag = tagName;\n      return res;\n    }\n  } catch (error) {\n    /* istanbul ignore if */\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n    return null;\n  }\n\n  try {\n    var fallback = getFallbackTagName(node);\n    if (!fallback) throw new Error(\"The tag \".concat(tagName, \" is unavailable\"));\n    var msg = \"The tag \".concat(tagName, \" is unavailable, falling back to \").concat(fallback);\n    doc.warnings.push(new YAMLWarning(node, msg));\n\n    var _res = resolveByTagName(doc, node, fallback);\n\n    _res.tag = tagName;\n    return _res;\n  } catch (error) {\n    var refError = new YAMLReferenceError(node, error.message);\n    refError.stack = error.stack;\n    doc.errors.push(refError);\n    return null;\n  }\n}\n\nvar isCollectionItem = function isCollectionItem(node) {\n  if (!node) return false;\n  var type = node.type;\n  return type === Type.MAP_KEY || type === Type.MAP_VALUE || type === Type.SEQ_ITEM;\n};\n\nfunction resolveNodeProps(errors, node) {\n  var comments = {\n    before: [],\n    after: []\n  };\n  var hasAnchor = false;\n  var hasTag = false;\n  var props = isCollectionItem(node.context.parent) ? node.context.parent.props.concat(node.props) : node.props;\n\n  var _iterator = _createForOfIteratorHelper(props),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          start = _step$value.start,\n          end = _step$value.end;\n\n      switch (node.context.src[start]) {\n        case Char.COMMENT:\n          {\n            if (!node.commentHasRequiredWhitespace(start)) {\n              var msg = 'Comments must be separated from other tokens by white space characters';\n              errors.push(new YAMLSemanticError(node, msg));\n            }\n\n            var header = node.header,\n                valueRange = node.valueRange;\n            var cc = valueRange && (start > valueRange.start || header && start > header.start) ? comments.after : comments.before;\n            cc.push(node.context.src.slice(start + 1, end));\n            break;\n          }\n        // Actual anchor & tag resolution is handled by schema, here we just complain\n\n        case Char.ANCHOR:\n          if (hasAnchor) {\n            var _msg = 'A node can have at most one anchor';\n            errors.push(new YAMLSemanticError(node, _msg));\n          }\n\n          hasAnchor = true;\n          break;\n\n        case Char.TAG:\n          if (hasTag) {\n            var _msg2 = 'A node can have at most one tag';\n            errors.push(new YAMLSemanticError(node, _msg2));\n          }\n\n          hasTag = true;\n          break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    comments: comments,\n    hasAnchor: hasAnchor,\n    hasTag: hasTag\n  };\n}\n\nfunction resolveNodeValue(doc, node) {\n  var anchors = doc.anchors,\n      errors = doc.errors,\n      schema = doc.schema;\n\n  if (node.type === Type.ALIAS) {\n    var name = node.rawValue;\n    var src = anchors.getNode(name);\n\n    if (!src) {\n      var msg = \"Aliased anchor not found: \".concat(name);\n      errors.push(new YAMLReferenceError(node, msg));\n      return null;\n    } // Lazy resolution for circular references\n\n\n    var res = new Alias(src);\n\n    anchors._cstAliases.push(res);\n\n    return res;\n  }\n\n  var tagName = resolveTagName(doc, node);\n  if (tagName) return resolveTag(doc, node, tagName);\n\n  if (node.type !== Type.PLAIN) {\n    var _msg3 = \"Failed to resolve \".concat(node.type, \" node here\");\n\n    errors.push(new YAMLSyntaxError(node, _msg3));\n    return null;\n  }\n\n  try {\n    var str = resolveString(doc, node);\n    return resolveScalar(str, schema.tags, schema.tags.scalarFallback);\n  } catch (error) {\n    if (!error.source) error.source = node;\n    errors.push(error);\n    return null;\n  }\n} // sets node.resolved on success\n\n\nfunction resolveNode(doc, node) {\n  if (!node) return null;\n  if (node.error) doc.errors.push(node.error);\n\n  var _resolveNodeProps = resolveNodeProps(doc.errors, node),\n      comments = _resolveNodeProps.comments,\n      hasAnchor = _resolveNodeProps.hasAnchor,\n      hasTag = _resolveNodeProps.hasTag;\n\n  if (hasAnchor) {\n    var anchors = doc.anchors;\n    var name = node.anchor;\n    var prev = anchors.getNode(name); // At this point, aliases for any preceding node with the same anchor\n    // name have already been resolved, so it may safely be renamed.\n\n    if (prev) anchors.map[anchors.newName(name)] = prev; // During parsing, we need to store the CST node in anchors.map as\n    // anchors need to be available during resolution to allow for\n    // circular references.\n\n    anchors.map[name] = node;\n  }\n\n  if (node.type === Type.ALIAS && (hasAnchor || hasTag)) {\n    var msg = 'An alias node must not specify any properties';\n    doc.errors.push(new YAMLSemanticError(node, msg));\n  }\n\n  var res = resolveNodeValue(doc, node);\n\n  if (res) {\n    res.range = [node.range.start, node.range.end];\n    if (doc.options.keepCstNodes) res.cstNode = node;\n    if (doc.options.keepNodeTypes) res.type = node.type;\n    var cb = comments.before.join('\\n');\n\n    if (cb) {\n      res.commentBefore = res.commentBefore ? \"\".concat(res.commentBefore, \"\\n\").concat(cb) : cb;\n    }\n\n    var ca = comments.after.join('\\n');\n    if (ca) res.comment = res.comment ? \"\".concat(res.comment, \"\\n\").concat(ca) : ca;\n  }\n\n  return node.resolved = res;\n}\n\nfunction resolveMap(doc, cst) {\n  if (cst.type !== Type.MAP && cst.type !== Type.FLOW_MAP) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a mapping\");\n    doc.errors.push(new YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === Type.FLOW_MAP ? resolveFlowMapItems(doc, cst) : resolveBlockMapItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var map = new YAMLMap();\n  map.items = items;\n  resolveComments(map, comments);\n  var hasCollectionKey = false;\n\n  for (var i = 0; i < items.length; ++i) {\n    var iKey = items[i].key;\n    if (iKey instanceof Collection) hasCollectionKey = true;\n\n    if (doc.schema.merge && iKey && iKey.value === MERGE_KEY) {\n      items[i] = new Merge(items[i]);\n      var sources = items[i].value.items;\n      var error = null;\n      sources.some(function (node) {\n        if (node instanceof Alias) {\n          // During parsing, alias sources are CST nodes; to account for\n          // circular references their resolved values can't be used here.\n          var type = node.source.type;\n          if (type === Type.MAP || type === Type.FLOW_MAP) return false;\n          return error = 'Merge nodes aliases can only point to maps';\n        }\n\n        return error = 'Merge nodes can only have Alias nodes as values';\n      });\n      if (error) doc.errors.push(new YAMLSemanticError(cst, error));\n    } else {\n      for (var j = i + 1; j < items.length; ++j) {\n        var jKey = items[j].key;\n\n        if (iKey === jKey || iKey && jKey && Object.prototype.hasOwnProperty.call(iKey, 'value') && iKey.value === jKey.value) {\n          var _msg = \"Map keys must be unique; \\\"\".concat(iKey, \"\\\" is repeated\");\n\n          doc.errors.push(new YAMLSemanticError(cst, _msg));\n          break;\n        }\n      }\n    }\n  }\n\n  if (hasCollectionKey && !doc.options.mapAsMap) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = map;\n  return map;\n}\n\nvar valueHasPairComment = function valueHasPairComment(_ref2) {\n  var _ref2$context = _ref2.context,\n      lineStart = _ref2$context.lineStart,\n      node = _ref2$context.node,\n      src = _ref2$context.src,\n      props = _ref2.props;\n  if (props.length === 0) return false;\n  var start = props[0].start;\n  if (node && start > node.valueRange.start) return false;\n  if (src[start] !== Char.COMMENT) return false;\n\n  for (var i = lineStart; i < start; ++i) {\n    if (src[i] === '\\n') return false;\n  }\n\n  return true;\n};\n\nfunction resolvePairComment(item, pair) {\n  if (!valueHasPairComment(item)) return;\n  var comment = item.getPropValue(0, Char.COMMENT, true);\n  var found = false;\n  var cb = pair.value.commentBefore;\n\n  if (cb && cb.startsWith(comment)) {\n    pair.value.commentBefore = cb.substr(comment.length + 1);\n    found = true;\n  } else {\n    var cc = pair.value.comment;\n\n    if (!item.node && cc && cc.startsWith(comment)) {\n      pair.value.comment = cc.substr(comment.length + 1);\n      found = true;\n    }\n  }\n\n  if (found) pair.comment = comment;\n}\n\nfunction resolveBlockMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var keyStart = null;\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case Type.BLANK_LINE:\n        comments.push({\n          afterKey: !!key,\n          before: items.length\n        });\n        break;\n\n      case Type.COMMENT:\n        comments.push({\n          afterKey: !!key,\n          before: items.length,\n          comment: item.comment\n        });\n        break;\n\n      case Type.MAP_KEY:\n        if (key !== undefined) items.push(new Pair(key));\n        if (item.error) doc.errors.push(item.error);\n        key = resolveNode(doc, item.node);\n        keyStart = null;\n        break;\n\n      case Type.MAP_VALUE:\n        {\n          if (key === undefined) key = null;\n          if (item.error) doc.errors.push(item.error);\n\n          if (!item.context.atLineStart && item.node && item.node.type === Type.MAP && !item.node.context.atLineStart) {\n            var msg = 'Nested mappings are not allowed in compact mappings';\n            doc.errors.push(new YAMLSemanticError(item.node, msg));\n          }\n\n          var valueNode = item.node;\n\n          if (!valueNode && item.props.length > 0) {\n            // Comments on an empty mapping value need to be preserved, so we\n            // need to construct a minimal empty node here to use instead of the\n            // missing `item.node`. -- eemeli/yaml#19\n            valueNode = new PlainValue(Type.PLAIN, []);\n            valueNode.context = {\n              parent: item,\n              src: item.context.src\n            };\n            var pos = item.range.start + 1;\n            valueNode.range = {\n              start: pos,\n              end: pos\n            };\n            valueNode.valueRange = {\n              start: pos,\n              end: pos\n            };\n\n            if (typeof item.range.origStart === 'number') {\n              var origPos = item.range.origStart + 1;\n              valueNode.range.origStart = valueNode.range.origEnd = origPos;\n              valueNode.valueRange.origStart = valueNode.valueRange.origEnd = origPos;\n            }\n          }\n\n          var pair = new Pair(key, resolveNode(doc, valueNode));\n          resolvePairComment(item, pair);\n          items.push(pair);\n\n          if (key && typeof keyStart === 'number') {\n            if (item.range.start > keyStart + 1024) doc.errors.push(getLongKeyError(cst, key));\n          }\n\n          key = undefined;\n          keyStart = null;\n        }\n        break;\n\n      default:\n        if (key !== undefined) items.push(new Pair(key));\n        key = resolveNode(doc, item);\n        keyStart = item.range.start;\n        if (item.error) doc.errors.push(item.error);\n\n        next: for (var j = i + 1;; ++j) {\n          var nextItem = cst.items[j];\n\n          switch (nextItem && nextItem.type) {\n            case Type.BLANK_LINE:\n            case Type.COMMENT:\n              continue next;\n\n            case Type.MAP_VALUE:\n              break next;\n\n            default:\n              {\n                var _msg2 = 'Implicit map keys need to be followed by map values';\n                doc.errors.push(new YAMLSemanticError(item, _msg2));\n                break next;\n              }\n          }\n        }\n\n        if (item.valueRangeContainsNewline) {\n          var _msg3 = 'Implicit map keys need to be on a single line';\n          doc.errors.push(new YAMLSemanticError(item, _msg3));\n        }\n\n    }\n  }\n\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var explicitKey = false;\n  var next = '{';\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char === '?' && key === undefined && !explicitKey) {\n        explicitKey = true;\n        next = ':';\n        continue;\n      }\n\n      if (char === ':') {\n        if (key === undefined) key = null;\n\n        if (next === ':') {\n          next = ',';\n          continue;\n        }\n      } else {\n        if (explicitKey) {\n          if (key === undefined && char !== ',') key = null;\n          explicitKey = false;\n        }\n\n        if (key !== undefined) {\n          items.push(new Pair(key));\n          key = undefined;\n\n          if (char === ',') {\n            next = ':';\n            continue;\n          }\n        }\n      }\n\n      if (char === '}') {\n        if (i === cst.items.length - 1) continue;\n      } else if (char === next) {\n        next = ':';\n        continue;\n      }\n\n      var msg = \"Flow map contains an unexpected \".concat(char);\n      var err = new YAMLSyntaxError(cst, msg);\n      err.offset = offset;\n      doc.errors.push(err);\n    } else if (item.type === Type.BLANK_LINE) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length\n      });\n    } else if (item.type === Type.COMMENT) {\n      checkFlowCommentSpace(doc.errors, item);\n      comments.push({\n        afterKey: !!key,\n        before: items.length,\n        comment: item.comment\n      });\n    } else if (key === undefined) {\n      if (next === ',') doc.errors.push(new YAMLSemanticError(item, 'Separator , missing in flow map'));\n      key = resolveNode(doc, item);\n    } else {\n      if (next !== ',') doc.errors.push(new YAMLSemanticError(item, 'Indicator : missing in flow map entry'));\n      items.push(new Pair(key, resolveNode(doc, item)));\n      key = undefined;\n      explicitKey = false;\n    }\n  }\n\n  checkFlowCollectionEnd(doc.errors, cst);\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveSeq(doc, cst) {\n  if (cst.type !== Type.SEQ && cst.type !== Type.FLOW_SEQ) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a sequence\");\n    doc.errors.push(new YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === Type.FLOW_SEQ ? resolveFlowSeqItems(doc, cst) : resolveBlockSeqItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var seq = new YAMLSeq();\n  seq.items = items;\n  resolveComments(seq, comments);\n\n  if (!doc.options.mapAsMap && items.some(function (it) {\n    return it instanceof Pair && it.key instanceof Collection;\n  })) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = seq;\n  return seq;\n}\n\nfunction resolveBlockSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case Type.BLANK_LINE:\n        comments.push({\n          before: items.length\n        });\n        break;\n\n      case Type.COMMENT:\n        comments.push({\n          comment: item.comment,\n          before: items.length\n        });\n        break;\n\n      case Type.SEQ_ITEM:\n        if (item.error) doc.errors.push(item.error);\n        items.push(resolveNode(doc, item.node));\n\n        if (item.hasProps) {\n          var msg = 'Sequence items cannot have tags or anchors before the - indicator';\n          doc.errors.push(new YAMLSemanticError(item, msg));\n        }\n\n        break;\n\n      default:\n        if (item.error) doc.errors.push(item.error);\n        doc.errors.push(new YAMLSyntaxError(item, \"Unexpected \".concat(item.type, \" node in sequence\")));\n    }\n  }\n\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var explicitKey = false;\n  var key = undefined;\n  var keyStart = null;\n  var next = '[';\n  var prevItem = null;\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char !== ':' && (explicitKey || key !== undefined)) {\n        if (explicitKey && key === undefined) key = next ? items.pop() : null;\n        items.push(new Pair(key));\n        explicitKey = false;\n        key = undefined;\n        keyStart = null;\n      }\n\n      if (char === next) {\n        next = null;\n      } else if (!next && char === '?') {\n        explicitKey = true;\n      } else if (next !== '[' && char === ':' && key === undefined) {\n        if (next === ',') {\n          key = items.pop();\n\n          if (key instanceof Pair) {\n            var msg = 'Chaining flow sequence pairs is invalid';\n            var err = new YAMLSemanticError(cst, msg);\n            err.offset = offset;\n            doc.errors.push(err);\n          }\n\n          if (!explicitKey && typeof keyStart === 'number') {\n            var keyEnd = item.range ? item.range.start : item.offset;\n            if (keyEnd > keyStart + 1024) doc.errors.push(getLongKeyError(cst, key));\n            var src = prevItem.context.src;\n\n            for (var _i = keyStart; _i < keyEnd; ++_i) {\n              if (src[_i] === '\\n') {\n                var _msg = 'Implicit keys of flow sequence pairs need to be on a single line';\n                doc.errors.push(new YAMLSemanticError(prevItem, _msg));\n                break;\n              }\n            }\n          }\n        } else {\n          key = null;\n        }\n\n        keyStart = null;\n        explicitKey = false;\n        next = null;\n      } else if (next === '[' || char !== ']' || i < cst.items.length - 1) {\n        var _msg2 = \"Flow sequence contains an unexpected \".concat(char);\n\n        var _err = new YAMLSyntaxError(cst, _msg2);\n\n        _err.offset = offset;\n        doc.errors.push(_err);\n      }\n    } else if (item.type === Type.BLANK_LINE) {\n      comments.push({\n        before: items.length\n      });\n    } else if (item.type === Type.COMMENT) {\n      checkFlowCommentSpace(doc.errors, item);\n      comments.push({\n        comment: item.comment,\n        before: items.length\n      });\n    } else {\n      if (next) {\n        var _msg3 = \"Expected a \".concat(next, \" in flow sequence\");\n\n        doc.errors.push(new YAMLSemanticError(item, _msg3));\n      }\n\n      var value = resolveNode(doc, item);\n\n      if (key === undefined) {\n        items.push(value);\n        prevItem = item;\n      } else {\n        items.push(new Pair(key, value));\n        key = undefined;\n      }\n\n      keyStart = item.range.start;\n      next = ',';\n    }\n  }\n\n  checkFlowCollectionEnd(doc.errors, cst);\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nexport { Alias as A, Collection as C, Merge as M, Node as N, Pair as P, Scalar as S, YAMLSeq as Y, boolOptions as a, binaryOptions as b, stringifyString as c, YAMLMap as d, isEmptyPath as e, addComment as f, resolveMap as g, resolveSeq as h, intOptions as i, resolveString as j, stringifyNumber as k, findPair as l, nullOptions as n, resolveNode as r, strOptions as s, toJSON as t };\n", "import { o as YAMLReferenceError, T as Type, g as YAMLSemanticError, _ as _createForOfIteratorHelper, e as _defineProperty, j as _inherits, k as _createSuper, c as _classCallCheck, p as _assertThisInitialized, b as _createClass, a as _typeof, l as _get, m as _getPrototypeOf } from './PlainValue-b8036b75.js';\nimport { j as resolveString, b as binaryOptions, c as stringifyString, h as resolveSeq, P as Pair, d as YAMLMap, Y as YAMLSeq, t as toJSON, S as Scalar, l as findPair, g as resolveMap, k as stringifyNumber } from './resolveSeq-492ab440.js';\n\n/* global atob, btoa, Buffer */\nvar binary = {\n  identify: function identify(value) {\n    return value instanceof Uint8Array;\n  },\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: function resolve(doc, node) {\n    var src = resolveString(doc, node);\n\n    if (typeof Buffer === 'function') {\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      // On IE 11, atob() can't handle newlines\n      var str = atob(src.replace(/[\\n\\r]/g, ''));\n      var buffer = new Uint8Array(str.length);\n\n      for (var i = 0; i < str.length; ++i) {\n        buffer[i] = str.charCodeAt(i);\n      }\n\n      return buffer;\n    } else {\n      var msg = 'This environment does not support reading binary tags; either Buffer or atob is required';\n      doc.errors.push(new YAMLReferenceError(node, msg));\n      return null;\n    }\n  },\n  options: binaryOptions,\n  stringify: function stringify(_ref, ctx, onComment, onChompKeep) {\n    var comment = _ref.comment,\n        type = _ref.type,\n        value = _ref.value;\n    var src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      var s = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        s += String.fromCharCode(value[i]);\n      }\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = binaryOptions.defaultType;\n\n    if (type === Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      var lineWidth = binaryOptions.lineWidth;\n      var n = Math.ceil(src.length / lineWidth);\n      var lines = new Array(n);\n\n      for (var _i = 0, o = 0; _i < n; ++_i, o += lineWidth) {\n        lines[_i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return stringifyString({\n      comment: comment,\n      type: type,\n      value: value\n    }, ctx, onComment, onChompKeep);\n  }\n};\n\nfunction parsePairs(doc, cst) {\n  var seq = resolveSeq(doc, cst);\n\n  for (var i = 0; i < seq.items.length; ++i) {\n    var item = seq.items[i];\n    if (item instanceof Pair) continue;else if (item instanceof YAMLMap) {\n      if (item.items.length > 1) {\n        var msg = 'Each pair must have its own sequence indicator';\n        throw new YAMLSemanticError(cst, msg);\n      }\n\n      var pair = item.items[0] || new Pair();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? \"\".concat(item.commentBefore, \"\\n\").concat(pair.commentBefore) : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? \"\".concat(item.comment, \"\\n\").concat(pair.comment) : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof Pair ? item : new Pair(item);\n  }\n\n  return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n  var pairs = new YAMLSeq(schema);\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var it = _step.value;\n      var key = void 0,\n          value = void 0;\n\n      if (Array.isArray(it)) {\n        if (it.length === 2) {\n          key = it[0];\n          value = it[1];\n        } else throw new TypeError(\"Expected [key, value] tuple: \".concat(it));\n      } else if (it && it instanceof Object) {\n        var keys = Object.keys(it);\n\n        if (keys.length === 1) {\n          key = keys[0];\n          value = it[key];\n        } else throw new TypeError(\"Expected { key: value } tuple: \".concat(it));\n      } else {\n        key = it;\n      }\n\n      var pair = schema.createPair(key, value, ctx);\n      pairs.items.push(pair);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return pairs;\n}\nvar pairs = {\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: parsePairs,\n  createNode: createPairs\n};\n\nvar YAMLOMap = /*#__PURE__*/function (_YAMLSeq) {\n  _inherits(YAMLOMap, _YAMLSeq);\n\n  var _super = _createSuper(YAMLOMap);\n\n  function YAMLOMap() {\n    var _this;\n\n    _classCallCheck(this, YAMLOMap);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"add\", YAMLMap.prototype.add.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"delete\", YAMLMap.prototype.delete.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"get\", YAMLMap.prototype.get.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"has\", YAMLMap.prototype.has.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"set\", YAMLMap.prototype.set.bind(_assertThisInitialized(_this)));\n\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n\n  _createClass(YAMLOMap, [{\n    key: \"toJSON\",\n    value: function toJSON$1(_, ctx) {\n      var map = new Map();\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n      var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n          var key = void 0,\n              value = void 0;\n\n          if (pair instanceof Pair) {\n            key = toJSON(pair.key, '', ctx);\n            value = toJSON(pair.value, key, ctx);\n          } else {\n            key = toJSON(pair, '', ctx);\n          }\n\n          if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n          map.set(key, value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return map;\n    }\n  }]);\n\n  return YAMLOMap;\n}(YAMLSeq);\n\n_defineProperty(YAMLOMap, \"tag\", 'tag:yaml.org,2002:omap');\n\nfunction parseOMap(doc, cst) {\n  var pairs = parsePairs(doc, cst);\n  var seenKeys = [];\n\n  var _iterator2 = _createForOfIteratorHelper(pairs.items),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var key = _step2.value.key;\n\n      if (key instanceof Scalar) {\n        if (seenKeys.includes(key.value)) {\n          var msg = 'Ordered maps must not include duplicate keys';\n          throw new YAMLSemanticError(cst, msg);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  var pairs = createPairs(schema, iterable, ctx);\n  var omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nvar omap = {\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: parseOMap,\n  createNode: createOMap\n};\n\nvar YAMLSet = /*#__PURE__*/function (_YAMLMap) {\n  _inherits(YAMLSet, _YAMLMap);\n\n  var _super = _createSuper(YAMLSet);\n\n  function YAMLSet() {\n    var _this;\n\n    _classCallCheck(this, YAMLSet);\n\n    _this = _super.call(this);\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n\n  _createClass(YAMLSet, [{\n    key: \"add\",\n    value: function add(key) {\n      var pair = key instanceof Pair ? key : new Pair(key);\n      var prev = findPair(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepPair) {\n      var pair = findPair(this.items, key);\n      return !keepPair && pair instanceof Pair ? pair.key instanceof Scalar ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof value !== 'boolean') throw new Error(\"Expected boolean value for set(key, value) in a YAML set, not \".concat(_typeof(value)));\n      var prev = findPair(this.items, key);\n\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new Pair(key));\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      return _get(_getPrototypeOf(YAMLSet.prototype), \"toJSON\", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues()) return _get(_getPrototypeOf(YAMLSet.prototype), \"toString\", this).call(this, ctx, onComment, onChompKeep);else throw new Error('Set items must all have null values');\n    }\n  }]);\n\n  return YAMLSet;\n}(YAMLMap);\n\n_defineProperty(YAMLSet, \"tag\", 'tag:yaml.org,2002:set');\n\nfunction parseSet(doc, cst) {\n  var map = resolveMap(doc, cst);\n  if (!map.hasAllNullValues()) throw new YAMLSemanticError(cst, 'Set items must all have null values');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  var set = new YAMLSet();\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      set.items.push(schema.createPair(value, null, ctx));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return set;\n}\n\nvar set = {\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  resolve: parseSet,\n  createNode: createSet\n};\n\nvar parseSexagesimal = function parseSexagesimal(sign, parts) {\n  var n = parts.split(':').reduce(function (n, p) {\n    return n * 60 + Number(p);\n  }, 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nvar stringifySexagesimal = function stringifySexagesimal(_ref) {\n  var value = _ref.value;\n  if (isNaN(value) || !isFinite(value)) return stringifyNumber(value);\n  var sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  var parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(function (n) {\n    return n < 10 ? '0' + String(n) : String(n);\n  }).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nvar intTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar floatTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar timestamp = {\n  identify: function identify(value) {\n    return value instanceof Date;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      var d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '');\n  }\n};\n\n/* global console, process, YAML_SILENCE_DEPRECATION_WARNINGS, YAML_SILENCE_WARNINGS */\nfunction shouldWarn(deprecation) {\n  var env = typeof process !== 'undefined' && process.env || {};\n\n  if (deprecation) {\n    if (typeof YAML_SILENCE_DEPRECATION_WARNINGS !== 'undefined') return !YAML_SILENCE_DEPRECATION_WARNINGS;\n    return !env.YAML_SILENCE_DEPRECATION_WARNINGS;\n  }\n\n  if (typeof YAML_SILENCE_WARNINGS !== 'undefined') return !YAML_SILENCE_WARNINGS;\n  return !env.YAML_SILENCE_WARNINGS;\n}\n\nfunction warn(warning, type) {\n  if (shouldWarn(false)) {\n    var emit = typeof process !== 'undefined' && process.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n    // https://github.com/facebook/jest/issues/2549\n\n    if (emit) emit(warning, type);else {\n      // eslint-disable-next-line no-console\n      console.warn(type ? \"\".concat(type, \": \").concat(warning) : warning);\n    }\n  }\n}\nfunction warnFileDeprecation(filename) {\n  if (shouldWarn(true)) {\n    var path = filename.replace(/.*yaml[/\\\\]/i, '').replace(/\\.js$/, '').replace(/\\\\/g, '/');\n    warn(\"The endpoint 'yaml/\".concat(path, \"' will be removed in a future release.\"), 'DeprecationWarning');\n  }\n}\nvar warned = {};\nfunction warnOptionDeprecation(name, alternative) {\n  if (!warned[name] && shouldWarn(true)) {\n    warned[name] = true;\n    var msg = \"The option '\".concat(name, \"' will be removed in a future release\");\n    msg += alternative ? \", use '\".concat(alternative, \"' instead.\") : '.';\n    warn(msg, 'DeprecationWarning');\n  }\n}\n\nexport { warnOptionDeprecation as a, binary as b, warnFileDeprecation as c, floatTime as f, intTime as i, omap as o, pairs as p, set as s, timestamp as t, warn as w };\n", "import { _ as _createForOfIteratorHelper, h as _slicedToArray, a as _typeof, b as _createClass, e as _defineProperty, c as _classCallCheck, d as defaultTagPrefix, n as defaultTags } from './PlainValue-b8036b75.js';\nimport { d as YAMLMap, g as resolveMap, Y as YAMLSeq, h as resolveSeq, j as resolveString, c as stringifyString, s as strOptions, S as Scalar, n as nullOptions, a as boolOptions, i as intOptions, k as stringifyNumber, N as Node, A as Alias, P as Pair } from './resolveSeq-492ab440.js';\nimport { b as binary, o as omap, p as pairs, s as set, i as intTime, f as floatTime, t as timestamp, a as warnOptionDeprecation } from './warnings-df54cb69.js';\n\nfunction createMap(schema, obj, ctx) {\n  var map = new YAMLMap(schema);\n\n  if (obj instanceof Map) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        map.items.push(schema.createPair(key, value, ctx));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (obj && _typeof(obj) === 'object') {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      map.items.push(schema.createPair(_key, obj[_key], ctx));\n    }\n  }\n\n  if (typeof schema.sortMapEntries === 'function') {\n    map.items.sort(schema.sortMapEntries);\n  }\n\n  return map;\n}\n\nvar map = {\n  createNode: createMap,\n  default: true,\n  nodeClass: YAMLMap,\n  tag: 'tag:yaml.org,2002:map',\n  resolve: resolveMap\n};\n\nfunction createSeq(schema, obj, ctx) {\n  var seq = new YAMLSeq(schema);\n\n  if (obj && obj[Symbol.iterator]) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var it = _step.value;\n        var v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n        seq.items.push(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return seq;\n}\n\nvar seq = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: YAMLSeq,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve: resolveSeq\n};\n\nvar string = {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: function stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return stringifyString(item, ctx, onComment, onChompKeep);\n  },\n  options: strOptions\n};\n\nvar failsafe = [map, seq, string];\n\n/* global BigInt */\n\nvar intIdentify$2 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar intResolve$1 = function intResolve(src, part, radix) {\n  return intOptions.asBigInt ? BigInt(src) : parseInt(part, radix);\n};\n\nfunction intStringify$1(node, radix, prefix) {\n  var value = node.value;\n  if (intIdentify$2(value) && value >= 0) return prefix + value.toString(radix);\n  return stringifyNumber(node);\n}\n\nvar nullObj = {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n};\nvar boolObj = {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: function resolve(str) {\n    return str[0] === 't' || str[0] === 'T';\n  },\n  options: boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? boolOptions.trueStr : boolOptions.falseStr;\n  }\n};\nvar octObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: function resolve(str, oct) {\n    return intResolve$1(str, oct, 8);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 8, '0o');\n  }\n};\nvar intObj = {\n  identify: intIdentify$2,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return intResolve$1(str, str, 10);\n  },\n  options: intOptions,\n  stringify: stringifyNumber\n};\nvar hexObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: function resolve(str, hex) {\n    return intResolve$1(str, hex, 16);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 16, '0x');\n  }\n};\nvar nanObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n};\nvar expObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n};\nvar floatObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:\\.([0-9]+)|[0-9]+\\.([0-9]*))$/,\n  resolve: function resolve(str, frac1, frac2) {\n    var frac = frac1 || frac2;\n    var node = new Scalar(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n  stringify: stringifyNumber\n};\nvar core = failsafe.concat([nullObj, boolObj, octObj, intObj, hexObj, nanObj, expObj, floatObj]);\n\n/* global BigInt */\n\nvar intIdentify$1 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar stringifyJSON = function stringifyJSON(_ref) {\n  var value = _ref.value;\n  return JSON.stringify(value);\n};\n\nvar json = [map, seq, {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: function resolve() {\n    return null;\n  },\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true|false$/,\n  resolve: function resolve(str) {\n    return str === 'true';\n  },\n  stringify: stringifyJSON\n}, {\n  identify: intIdentify$1,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: function resolve(str) {\n    return intOptions.asBigInt ? BigInt(str) : parseInt(str, 10);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return intIdentify$1(value) ? value.toString() : JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: stringifyJSON\n}];\n\njson.scalarFallback = function (str) {\n  throw new SyntaxError(\"Unresolved plain scalar \".concat(JSON.stringify(str)));\n};\n\n/* global BigInt */\n\nvar boolStringify = function boolStringify(_ref) {\n  var value = _ref.value;\n  return value ? boolOptions.trueStr : boolOptions.falseStr;\n};\n\nvar intIdentify = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nfunction intResolve(sign, src, radix) {\n  var str = src.replace(/_/g, '');\n\n  if (intOptions.asBigInt) {\n    switch (radix) {\n      case 2:\n        str = \"0b\".concat(str);\n        break;\n\n      case 8:\n        str = \"0o\".concat(str);\n        break;\n\n      case 16:\n        str = \"0x\".concat(str);\n        break;\n    }\n\n    var _n = BigInt(str);\n\n    return sign === '-' ? BigInt(-1) * _n : _n;\n  }\n\n  var n = parseInt(str, radix);\n  return sign === '-' ? -1 * n : n;\n}\n\nfunction intStringify(node, radix, prefix) {\n  var value = node.value;\n\n  if (intIdentify(value)) {\n    var str = value.toString(radix);\n    return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n  }\n\n  return stringifyNumber(node);\n}\n\nvar yaml11 = failsafe.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return true;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return false;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^([-+]?)0b([0-1_]+)$/,\n  resolve: function resolve(str, sign, bin) {\n    return intResolve(sign, bin, 2);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 2, '0b');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^([-+]?)0([0-7_]+)$/,\n  resolve: function resolve(str, sign, oct) {\n    return intResolve(sign, oct, 8);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 8, '0');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^([-+]?)([0-9][0-9_]*)$/,\n  resolve: function resolve(str, sign, abs) {\n    return intResolve(sign, abs, 10);\n  },\n  stringify: stringifyNumber\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^([-+]?)0x([0-9a-fA-F_]+)$/,\n  resolve: function resolve(str, sign, hex) {\n    return intResolve(sign, hex, 16);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 16, '0x');\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str.replace(/_/g, ''));\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new Scalar(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      var f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n  stringify: stringifyNumber\n}], binary, omap, pairs, set, intTime, floatTime, timestamp);\n\nvar schemas = {\n  core: core,\n  failsafe: failsafe,\n  json: json,\n  yaml11: yaml11\n};\nvar tags = {\n  binary: binary,\n  bool: boolObj,\n  float: floatObj,\n  floatExp: expObj,\n  floatNaN: nanObj,\n  floatTime: floatTime,\n  int: intObj,\n  intHex: hexObj,\n  intOct: octObj,\n  intTime: intTime,\n  map: map,\n  null: nullObj,\n  omap: omap,\n  pairs: pairs,\n  seq: seq,\n  set: set,\n  timestamp: timestamp\n};\n\nfunction findTagObject(value, tagName, tags) {\n  if (tagName) {\n    var match = tags.filter(function (t) {\n      return t.tag === tagName;\n    });\n    var tagObj = match.find(function (t) {\n      return !t.format;\n    }) || match[0];\n    if (!tagObj) throw new Error(\"Tag \".concat(tagName, \" not found\"));\n    return tagObj;\n  } // TODO: deprecate/remove class check\n\n\n  return tags.find(function (t) {\n    return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;\n  });\n}\n\nfunction createNode(value, tagName, ctx) {\n  if (value instanceof Node) return value;\n  var defaultPrefix = ctx.defaultPrefix,\n      onTagObj = ctx.onTagObj,\n      prevObjects = ctx.prevObjects,\n      schema = ctx.schema,\n      wrapScalars = ctx.wrapScalars;\n  if (tagName && tagName.startsWith('!!')) tagName = defaultPrefix + tagName.slice(2);\n  var tagObj = findTagObject(value, tagName, schema.tags);\n\n  if (!tagObj) {\n    if (typeof value.toJSON === 'function') value = value.toJSON();\n    if (!value || _typeof(value) !== 'object') return wrapScalars ? new Scalar(value) : value;\n    tagObj = value instanceof Map ? map : value[Symbol.iterator] ? seq : map;\n  }\n\n  if (onTagObj) {\n    onTagObj(tagObj);\n    delete ctx.onTagObj;\n  } // Detect duplicate references to the same object & use Alias nodes for all\n  // after first. The `obj` wrapper allows for circular references to resolve.\n\n\n  var obj = {\n    value: undefined,\n    node: undefined\n  };\n\n  if (value && _typeof(value) === 'object' && prevObjects) {\n    var prev = prevObjects.get(value);\n\n    if (prev) {\n      var alias = new Alias(prev); // leaves source dirty; must be cleaned by caller\n\n      ctx.aliasNodes.push(alias); // defined along with prevObjects\n\n      return alias;\n    }\n\n    obj.value = value;\n    prevObjects.set(value, obj);\n  }\n\n  obj.node = tagObj.createNode ? tagObj.createNode(ctx.schema, value, ctx) : wrapScalars ? new Scalar(value) : value;\n  if (tagName && obj.node instanceof Node) obj.node.tag = tagName;\n  return obj.node;\n}\n\nfunction getSchemaTags(schemas, knownTags, customTags, schemaId) {\n  var tags = schemas[schemaId.replace(/\\W/g, '')]; // 'yaml-1.1' -> 'yaml11'\n\n  if (!tags) {\n    var keys = Object.keys(schemas).map(function (key) {\n      return JSON.stringify(key);\n    }).join(', ');\n    throw new Error(\"Unknown schema \\\"\".concat(schemaId, \"\\\"; use one of \").concat(keys));\n  }\n\n  if (Array.isArray(customTags)) {\n    var _iterator = _createForOfIteratorHelper(customTags),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var tag = _step.value;\n        tags = tags.concat(tag);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (typeof customTags === 'function') {\n    tags = customTags(tags.slice());\n  }\n\n  for (var i = 0; i < tags.length; ++i) {\n    var _tag = tags[i];\n\n    if (typeof _tag === 'string') {\n      var tagObj = knownTags[_tag];\n\n      if (!tagObj) {\n        var _keys = Object.keys(knownTags).map(function (key) {\n          return JSON.stringify(key);\n        }).join(', ');\n\n        throw new Error(\"Unknown custom tag \\\"\".concat(_tag, \"\\\"; use one of \").concat(_keys));\n      }\n\n      tags[i] = tagObj;\n    }\n  }\n\n  return tags;\n}\n\nvar sortMapEntriesByKey = function sortMapEntriesByKey(a, b) {\n  return a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\n};\n\nvar Schema = /*#__PURE__*/function () {\n  // TODO: remove in v2\n  // TODO: remove in v2\n  function Schema(_ref) {\n    var customTags = _ref.customTags,\n        merge = _ref.merge,\n        schema = _ref.schema,\n        sortMapEntries = _ref.sortMapEntries,\n        deprecatedCustomTags = _ref.tags;\n\n    _classCallCheck(this, Schema);\n\n    this.merge = !!merge;\n    this.name = schema;\n    this.sortMapEntries = sortMapEntries === true ? sortMapEntriesByKey : sortMapEntries || null;\n    if (!customTags && deprecatedCustomTags) warnOptionDeprecation('tags', 'customTags');\n    this.tags = getSchemaTags(schemas, tags, customTags || deprecatedCustomTags, schema);\n  }\n\n  _createClass(Schema, [{\n    key: \"createNode\",\n    value: function createNode$1(value, wrapScalars, tagName, ctx) {\n      var baseCtx = {\n        defaultPrefix: Schema.defaultPrefix,\n        schema: this,\n        wrapScalars: wrapScalars\n      };\n      var createCtx = ctx ? Object.assign(ctx, baseCtx) : baseCtx;\n      return createNode(value, tagName, createCtx);\n    }\n  }, {\n    key: \"createPair\",\n    value: function createPair(key, value, ctx) {\n      if (!ctx) ctx = {\n        wrapScalars: true\n      };\n      var k = this.createNode(key, ctx.wrapScalars, null, ctx);\n      var v = this.createNode(value, ctx.wrapScalars, null, ctx);\n      return new Pair(k, v);\n    }\n  }]);\n\n  return Schema;\n}();\n\n_defineProperty(Schema, \"defaultPrefix\", defaultTagPrefix);\n\n_defineProperty(Schema, \"defaultTags\", defaultTags);\n\nexport { Schema as S };\n", "import { d as defaultTagPrefix, _ as _createForOfIteratorHelper, a as _typeof, b as _createClass, c as _classCallCheck, e as _defineProperty, Y as YAMLSyntaxError, T as Type, f as YAMLWarning, g as YAMLSemanticError, h as _slicedToArray, i as YAMLError, j as _inherits, k as _createSuper } from './PlainValue-b8036b75.js';\nimport { parse as parse$1 } from './parse-cst.js';\nimport { b as binaryOptions, a as boolOptions, i as intOptions, n as nullOptions, s as strOptions, N as Node, P as Pair, S as Scalar, c as stringifyString, A as Alias, Y as YAMLSeq, d as YAMLMap, M as Merge, C as Collection, r as resolveNode, e as isEmptyPath, t as toJSON, f as addComment } from './resolveSeq-492ab440.js';\nimport { S as Schema } from './Schema-e94716c8.js';\nimport { w as warn } from './warnings-df54cb69.js';\n\nvar defaultOptions = {\n  anchorPrefix: 'a',\n  customTags: null,\n  indent: 2,\n  indentSeq: true,\n  keepCstNodes: false,\n  keepNodeTypes: true,\n  keepBlobsInJSON: true,\n  mapAsMap: false,\n  maxAliasCount: 100,\n  prettyErrors: false,\n  // TODO Set true in v2\n  simpleKeys: false,\n  version: '1.2'\n};\nvar scalarOptions = {\n  get binary() {\n    return binaryOptions;\n  },\n\n  set binary(opt) {\n    Object.assign(binaryOptions, opt);\n  },\n\n  get bool() {\n    return boolOptions;\n  },\n\n  set bool(opt) {\n    Object.assign(boolOptions, opt);\n  },\n\n  get int() {\n    return intOptions;\n  },\n\n  set int(opt) {\n    Object.assign(intOptions, opt);\n  },\n\n  get null() {\n    return nullOptions;\n  },\n\n  set null(opt) {\n    Object.assign(nullOptions, opt);\n  },\n\n  get str() {\n    return strOptions;\n  },\n\n  set str(opt) {\n    Object.assign(strOptions, opt);\n  }\n\n};\nvar documentOptions = {\n  '1.0': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: defaultTagPrefix\n    }, {\n      handle: '!!',\n      prefix: 'tag:private.yaml.org,2002:'\n    }]\n  },\n  1.1: {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: defaultTagPrefix\n    }]\n  },\n  1.2: {\n    schema: 'core',\n    merge: false,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: defaultTagPrefix\n    }]\n  }\n};\n\nfunction stringifyTag(doc, tag) {\n  if ((doc.version || doc.options.version) === '1.0') {\n    var priv = tag.match(/^tag:private\\.yaml\\.org,2002:([^:/]+)$/);\n    if (priv) return '!' + priv[1];\n    var vocab = tag.match(/^tag:([a-zA-Z0-9-]+)\\.yaml\\.org,2002:(.*)/);\n    return vocab ? \"!\".concat(vocab[1], \"/\").concat(vocab[2]) : \"!\".concat(tag.replace(/^tag:/, ''));\n  }\n\n  var p = doc.tagPrefixes.find(function (p) {\n    return tag.indexOf(p.prefix) === 0;\n  });\n\n  if (!p) {\n    var dtp = doc.getDefaults().tagPrefixes;\n    p = dtp && dtp.find(function (p) {\n      return tag.indexOf(p.prefix) === 0;\n    });\n  }\n\n  if (!p) return tag[0] === '!' ? tag : \"!<\".concat(tag, \">\");\n  var suffix = tag.substr(p.prefix.length).replace(/[!,[\\]{}]/g, function (ch) {\n    return {\n      '!': '%21',\n      ',': '%2C',\n      '[': '%5B',\n      ']': '%5D',\n      '{': '%7B',\n      '}': '%7D'\n    }[ch];\n  });\n  return p.handle + suffix;\n}\n\nfunction getTagObject(tags, item) {\n  if (item instanceof Alias) return Alias;\n\n  if (item.tag) {\n    var match = tags.filter(function (t) {\n      return t.tag === item.tag;\n    });\n    if (match.length > 0) return match.find(function (t) {\n      return t.format === item.format;\n    }) || match[0];\n  }\n\n  var tagObj, obj;\n\n  if (item instanceof Scalar) {\n    obj = item.value; // TODO: deprecate/remove class check\n\n    var _match = tags.filter(function (t) {\n      return t.identify && t.identify(obj) || t.class && obj instanceof t.class;\n    });\n\n    tagObj = _match.find(function (t) {\n      return t.format === item.format;\n    }) || _match.find(function (t) {\n      return !t.format;\n    });\n  } else {\n    obj = item;\n    tagObj = tags.find(function (t) {\n      return t.nodeClass && obj instanceof t.nodeClass;\n    });\n  }\n\n  if (!tagObj) {\n    var name = obj && obj.constructor ? obj.constructor.name : _typeof(obj);\n    throw new Error(\"Tag not resolved for \".concat(name, \" value\"));\n  }\n\n  return tagObj;\n} // needs to be called before value stringifier to allow for circular anchor refs\n\n\nfunction stringifyProps(node, tagObj, _ref) {\n  var anchors = _ref.anchors,\n      doc = _ref.doc;\n  var props = [];\n  var anchor = doc.anchors.getName(node);\n\n  if (anchor) {\n    anchors[anchor] = node;\n    props.push(\"&\".concat(anchor));\n  }\n\n  if (node.tag) {\n    props.push(stringifyTag(doc, node.tag));\n  } else if (!tagObj.default) {\n    props.push(stringifyTag(doc, tagObj.tag));\n  }\n\n  return props.join(' ');\n}\n\nfunction stringify$1(item, ctx, onComment, onChompKeep) {\n  var _ctx$doc = ctx.doc,\n      anchors = _ctx$doc.anchors,\n      schema = _ctx$doc.schema;\n  var tagObj;\n\n  if (!(item instanceof Node)) {\n    var createCtx = {\n      aliasNodes: [],\n      onTagObj: function onTagObj(o) {\n        return tagObj = o;\n      },\n      prevObjects: new Map()\n    };\n    item = schema.createNode(item, true, null, createCtx);\n\n    var _iterator = _createForOfIteratorHelper(createCtx.aliasNodes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var alias = _step.value;\n        alias.source = alias.source.node;\n        var name = anchors.getName(alias.source);\n\n        if (!name) {\n          name = anchors.newName();\n          anchors.map[name] = alias.source;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (item instanceof Pair) return item.toString(ctx, onComment, onChompKeep);\n  if (!tagObj) tagObj = getTagObject(schema.tags, item);\n  var props = stringifyProps(item, tagObj, ctx);\n  if (props.length > 0) ctx.indentAtStart = (ctx.indentAtStart || 0) + props.length + 1;\n  var str = typeof tagObj.stringify === 'function' ? tagObj.stringify(item, ctx, onComment, onChompKeep) : item instanceof Scalar ? stringifyString(item, ctx, onComment, onChompKeep) : item.toString(ctx, onComment, onChompKeep);\n  if (!props) return str;\n  return item instanceof Scalar || str[0] === '{' || str[0] === '[' ? \"\".concat(props, \" \").concat(str) : \"\".concat(props, \"\\n\").concat(ctx.indent).concat(str);\n}\n\nvar Anchors = /*#__PURE__*/function () {\n  function Anchors(prefix) {\n    _classCallCheck(this, Anchors);\n\n    _defineProperty(this, \"map\", Object.create(null));\n\n    this.prefix = prefix;\n  }\n\n  _createClass(Anchors, [{\n    key: \"createAlias\",\n    value: function createAlias(node, name) {\n      this.setAnchor(node, name);\n      return new Alias(node);\n    }\n  }, {\n    key: \"createMergePair\",\n    value: function createMergePair() {\n      var _this = this;\n\n      var merge = new Merge();\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      merge.value.items = sources.map(function (s) {\n        if (s instanceof Alias) {\n          if (s.source instanceof YAMLMap) return s;\n        } else if (s instanceof YAMLMap) {\n          return _this.createAlias(s);\n        }\n\n        throw new Error('Merge sources must be Map nodes or their Aliases');\n      });\n      return merge;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName(node) {\n      var map = this.map;\n      return Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n    }\n  }, {\n    key: \"getNames\",\n    value: function getNames() {\n      return Object.keys(this.map);\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(name) {\n      return this.map[name];\n    }\n  }, {\n    key: \"newName\",\n    value: function newName(prefix) {\n      if (!prefix) prefix = this.prefix;\n      var names = Object.keys(this.map);\n\n      for (var i = 1; true; ++i) {\n        var name = \"\".concat(prefix).concat(i);\n        if (!names.includes(name)) return name;\n      }\n    } // During parsing, map & aliases contain CST nodes\n\n  }, {\n    key: \"resolveNodes\",\n    value: function resolveNodes() {\n      var map = this.map,\n          _cstAliases = this._cstAliases;\n      Object.keys(map).forEach(function (a) {\n        map[a] = map[a].resolved;\n      });\n\n      _cstAliases.forEach(function (a) {\n        a.source = a.source.resolved;\n      });\n\n      delete this._cstAliases;\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(node, name) {\n      if (node != null && !Anchors.validAnchorNode(node)) {\n        throw new Error('Anchors may only be set for Scalar, Seq and Map nodes');\n      }\n\n      if (name && /[\\x00-\\x19\\s,[\\]{}]/.test(name)) {\n        throw new Error('Anchor names must not contain whitespace or control characters');\n      }\n\n      var map = this.map;\n      var prev = node && Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n\n      if (prev) {\n        if (!name) {\n          return prev;\n        } else if (prev !== name) {\n          delete map[prev];\n          map[name] = node;\n        }\n      } else {\n        if (!name) {\n          if (!node) return null;\n          name = this.newName();\n        }\n\n        map[name] = node;\n      }\n\n      return name;\n    }\n  }], [{\n    key: \"validAnchorNode\",\n    value: function validAnchorNode(node) {\n      return node instanceof Scalar || node instanceof YAMLSeq || node instanceof YAMLMap;\n    }\n  }]);\n\n  return Anchors;\n}();\n\nvar visit = function visit(node, tags) {\n  if (node && _typeof(node) === 'object') {\n    var tag = node.tag;\n\n    if (node instanceof Collection) {\n      if (tag) tags[tag] = true;\n      node.items.forEach(function (n) {\n        return visit(n, tags);\n      });\n    } else if (node instanceof Pair) {\n      visit(node.key, tags);\n      visit(node.value, tags);\n    } else if (node instanceof Scalar) {\n      if (tag) tags[tag] = true;\n    }\n  }\n\n  return tags;\n};\n\nvar listTagNames = function listTagNames(node) {\n  return Object.keys(visit(node, {}));\n};\n\nfunction parseContents(doc, contents) {\n  var comments = {\n    before: [],\n    after: []\n  };\n  var body = undefined;\n  var spaceBefore = false;\n\n  var _iterator = _createForOfIteratorHelper(contents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (node.valueRange) {\n        if (body !== undefined) {\n          var msg = 'Document contains trailing content not separated by a ... or --- line';\n          doc.errors.push(new YAMLSyntaxError(node, msg));\n          break;\n        }\n\n        var res = resolveNode(doc, node);\n\n        if (spaceBefore) {\n          res.spaceBefore = true;\n          spaceBefore = false;\n        }\n\n        body = res;\n      } else if (node.comment !== null) {\n        var cc = body === undefined ? comments.before : comments.after;\n        cc.push(node.comment);\n      } else if (node.type === Type.BLANK_LINE) {\n        spaceBefore = true;\n\n        if (body === undefined && comments.before.length > 0 && !doc.commentBefore) {\n          // space-separated comments at start are parsed as document comments\n          doc.commentBefore = comments.before.join('\\n');\n          comments.before = [];\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  doc.contents = body || null;\n\n  if (!body) {\n    doc.comment = comments.before.concat(comments.after).join('\\n') || null;\n  } else {\n    var cb = comments.before.join('\\n');\n\n    if (cb) {\n      var cbNode = body instanceof Collection && body.items[0] ? body.items[0] : body;\n      cbNode.commentBefore = cbNode.commentBefore ? \"\".concat(cb, \"\\n\").concat(cbNode.commentBefore) : cb;\n    }\n\n    doc.comment = comments.after.join('\\n') || null;\n  }\n}\n\nfunction resolveTagDirective(_ref, directive) {\n  var tagPrefixes = _ref.tagPrefixes;\n\n  var _directive$parameters = _slicedToArray(directive.parameters, 2),\n      handle = _directive$parameters[0],\n      prefix = _directive$parameters[1];\n\n  if (!handle || !prefix) {\n    var msg = 'Insufficient parameters given for %TAG directive';\n    throw new YAMLSemanticError(directive, msg);\n  }\n\n  if (tagPrefixes.some(function (p) {\n    return p.handle === handle;\n  })) {\n    var _msg = 'The %TAG directive must only be given at most once per handle in the same document.';\n    throw new YAMLSemanticError(directive, _msg);\n  }\n\n  return {\n    handle: handle,\n    prefix: prefix\n  };\n}\n\nfunction resolveYamlDirective(doc, directive) {\n  var _directive$parameters2 = _slicedToArray(directive.parameters, 1),\n      version = _directive$parameters2[0];\n\n  if (directive.name === 'YAML:1.0') version = '1.0';\n\n  if (!version) {\n    var msg = 'Insufficient parameters given for %YAML directive';\n    throw new YAMLSemanticError(directive, msg);\n  }\n\n  if (!documentOptions[version]) {\n    var v0 = doc.version || doc.options.version;\n\n    var _msg2 = \"Document will be parsed as YAML \".concat(v0, \" rather than YAML \").concat(version);\n\n    doc.warnings.push(new YAMLWarning(directive, _msg2));\n  }\n\n  return version;\n}\n\nfunction parseDirectives(doc, directives, prevDoc) {\n  var directiveComments = [];\n  var hasDirectives = false;\n\n  var _iterator = _createForOfIteratorHelper(directives),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var directive = _step.value;\n      var comment = directive.comment,\n          name = directive.name;\n\n      switch (name) {\n        case 'TAG':\n          try {\n            doc.tagPrefixes.push(resolveTagDirective(doc, directive));\n          } catch (error) {\n            doc.errors.push(error);\n          }\n\n          hasDirectives = true;\n          break;\n\n        case 'YAML':\n        case 'YAML:1.0':\n          if (doc.version) {\n            var msg = 'The %YAML directive must only be given at most once per document.';\n            doc.errors.push(new YAMLSemanticError(directive, msg));\n          }\n\n          try {\n            doc.version = resolveYamlDirective(doc, directive);\n          } catch (error) {\n            doc.errors.push(error);\n          }\n\n          hasDirectives = true;\n          break;\n\n        default:\n          if (name) {\n            var _msg3 = \"YAML only supports %TAG and %YAML directives, and not %\".concat(name);\n\n            doc.warnings.push(new YAMLWarning(directive, _msg3));\n          }\n\n      }\n\n      if (comment) directiveComments.push(comment);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (prevDoc && !hasDirectives && '1.1' === (doc.version || prevDoc.version || doc.options.version)) {\n    var copyTagPrefix = function copyTagPrefix(_ref2) {\n      var handle = _ref2.handle,\n          prefix = _ref2.prefix;\n      return {\n        handle: handle,\n        prefix: prefix\n      };\n    };\n\n    doc.tagPrefixes = prevDoc.tagPrefixes.map(copyTagPrefix);\n    doc.version = prevDoc.version;\n  }\n\n  doc.commentBefore = directiveComments.join('\\n') || null;\n}\n\nfunction assertCollection(contents) {\n  if (contents instanceof Collection) return true;\n  throw new Error('Expected a YAML collection as document contents');\n}\n\nvar Document$1 = /*#__PURE__*/function () {\n  function Document(options) {\n    _classCallCheck(this, Document);\n\n    this.anchors = new Anchors(options.anchorPrefix);\n    this.commentBefore = null;\n    this.comment = null;\n    this.contents = null;\n    this.directivesEndMarker = null;\n    this.errors = [];\n    this.options = options;\n    this.schema = null;\n    this.tagPrefixes = [];\n    this.version = null;\n    this.warnings = [];\n  }\n\n  _createClass(Document, [{\n    key: \"add\",\n    value: function add(value) {\n      assertCollection(this.contents);\n      return this.contents.add(value);\n    }\n  }, {\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      assertCollection(this.contents);\n      this.contents.addIn(path, value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      assertCollection(this.contents);\n      return this.contents.delete(key);\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(path) {\n      if (isEmptyPath(path)) {\n        if (this.contents == null) return false;\n        this.contents = null;\n        return true;\n      }\n\n      assertCollection(this.contents);\n      return this.contents.deleteIn(path);\n    }\n  }, {\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Document.defaults[this.version] || Document.defaults[this.options.version] || {};\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      return this.contents instanceof Collection ? this.contents.get(key, keepScalar) : undefined;\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(path, keepScalar) {\n      if (isEmptyPath(path)) return !keepScalar && this.contents instanceof Scalar ? this.contents.value : this.contents;\n      return this.contents instanceof Collection ? this.contents.getIn(path, keepScalar) : undefined;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.contents instanceof Collection ? this.contents.has(key) : false;\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(path) {\n      if (isEmptyPath(path)) return this.contents !== undefined;\n      return this.contents instanceof Collection ? this.contents.hasIn(path) : false;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      assertCollection(this.contents);\n      this.contents.set(key, value);\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(path, value) {\n      if (isEmptyPath(path)) this.contents = value;else {\n        assertCollection(this.contents);\n        this.contents.setIn(path, value);\n      }\n    }\n  }, {\n    key: \"setSchema\",\n    value: function setSchema(id, customTags) {\n      if (!id && !customTags && this.schema) return;\n      if (typeof id === 'number') id = id.toFixed(1);\n\n      if (id === '1.0' || id === '1.1' || id === '1.2') {\n        if (this.version) this.version = id;else this.options.version = id;\n        delete this.options.schema;\n      } else if (id && typeof id === 'string') {\n        this.options.schema = id;\n      }\n\n      if (Array.isArray(customTags)) this.options.customTags = customTags;\n      var opt = Object.assign({}, this.getDefaults(), this.options);\n      this.schema = new Schema(opt);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(node, prevDoc) {\n      if (this.options.keepCstNodes) this.cstNode = node;\n      if (this.options.keepNodeTypes) this.type = 'DOCUMENT';\n      var _node$directives = node.directives,\n          directives = _node$directives === void 0 ? [] : _node$directives,\n          _node$contents = node.contents,\n          contents = _node$contents === void 0 ? [] : _node$contents,\n          directivesEndMarker = node.directivesEndMarker,\n          error = node.error,\n          valueRange = node.valueRange;\n\n      if (error) {\n        if (!error.source) error.source = this;\n        this.errors.push(error);\n      }\n\n      parseDirectives(this, directives, prevDoc);\n      if (directivesEndMarker) this.directivesEndMarker = true;\n      this.range = valueRange ? [valueRange.start, valueRange.end] : null;\n      this.setSchema();\n      this.anchors._cstAliases = [];\n      parseContents(this, contents);\n      this.anchors.resolveNodes();\n\n      if (this.options.prettyErrors) {\n        var _iterator = _createForOfIteratorHelper(this.errors),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _error = _step.value;\n            if (_error instanceof YAMLError) _error.makePretty();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(this.warnings),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var warn = _step2.value;\n            if (warn instanceof YAMLError) warn.makePretty();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"listNonDefaultTags\",\n    value: function listNonDefaultTags() {\n      return listTagNames(this.contents).filter(function (t) {\n        return t.indexOf(Schema.defaultPrefix) !== 0;\n      });\n    }\n  }, {\n    key: \"setTagPrefix\",\n    value: function setTagPrefix(handle, prefix) {\n      if (handle[0] !== '!' || handle[handle.length - 1] !== '!') throw new Error('Handle must start and end with !');\n\n      if (prefix) {\n        var prev = this.tagPrefixes.find(function (p) {\n          return p.handle === handle;\n        });\n        if (prev) prev.prefix = prefix;else this.tagPrefixes.push({\n          handle: handle,\n          prefix: prefix\n        });\n      } else {\n        this.tagPrefixes = this.tagPrefixes.filter(function (p) {\n          return p.handle !== handle;\n        });\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON$1(arg, onAnchor) {\n      var _this = this;\n\n      var _this$options = this.options,\n          keepBlobsInJSON = _this$options.keepBlobsInJSON,\n          mapAsMap = _this$options.mapAsMap,\n          maxAliasCount = _this$options.maxAliasCount;\n      var keep = keepBlobsInJSON && (typeof arg !== 'string' || !(this.contents instanceof Scalar));\n      var ctx = {\n        doc: this,\n        indentStep: '  ',\n        keep: keep,\n        mapAsMap: keep && !!mapAsMap,\n        maxAliasCount: maxAliasCount,\n        stringify: stringify$1 // Requiring directly in Pair would create circular dependencies\n\n      };\n      var anchorNames = Object.keys(this.anchors.map);\n      if (anchorNames.length > 0) ctx.anchors = new Map(anchorNames.map(function (name) {\n        return [_this.anchors.map[name], {\n          alias: [],\n          aliasCount: 0,\n          count: 1\n        }];\n      }));\n\n      var res = toJSON(this.contents, arg, ctx);\n\n      if (typeof onAnchor === 'function' && ctx.anchors) {\n        var _iterator3 = _createForOfIteratorHelper(ctx.anchors.values()),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _step3$value = _step3.value,\n                count = _step3$value.count,\n                _res = _step3$value.res;\n            onAnchor(_res, count);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      return res;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');\n      var indentSize = this.options.indent;\n\n      if (!Number.isInteger(indentSize) || indentSize <= 0) {\n        var s = JSON.stringify(indentSize);\n        throw new Error(\"\\\"indent\\\" option must be a positive integer, not \".concat(s));\n      }\n\n      this.setSchema();\n      var lines = [];\n      var hasDirectives = false;\n\n      if (this.version) {\n        var vd = '%YAML 1.2';\n\n        if (this.schema.name === 'yaml-1.1') {\n          if (this.version === '1.0') vd = '%YAML:1.0';else if (this.version === '1.1') vd = '%YAML 1.1';\n        }\n\n        lines.push(vd);\n        hasDirectives = true;\n      }\n\n      var tagNames = this.listNonDefaultTags();\n      this.tagPrefixes.forEach(function (_ref) {\n        var handle = _ref.handle,\n            prefix = _ref.prefix;\n\n        if (tagNames.some(function (t) {\n          return t.indexOf(prefix) === 0;\n        })) {\n          lines.push(\"%TAG \".concat(handle, \" \").concat(prefix));\n          hasDirectives = true;\n        }\n      });\n      if (hasDirectives || this.directivesEndMarker) lines.push('---');\n\n      if (this.commentBefore) {\n        if (hasDirectives || !this.directivesEndMarker) lines.unshift('');\n        lines.unshift(this.commentBefore.replace(/^/gm, '#'));\n      }\n\n      var ctx = {\n        anchors: Object.create(null),\n        doc: this,\n        indent: '',\n        indentStep: ' '.repeat(indentSize),\n        stringify: stringify$1 // Requiring directly in nodes would create circular dependencies\n\n      };\n      var chompKeep = false;\n      var contentComment = null;\n\n      if (this.contents) {\n        if (this.contents instanceof Node) {\n          if (this.contents.spaceBefore && (hasDirectives || this.directivesEndMarker)) lines.push('');\n          if (this.contents.commentBefore) lines.push(this.contents.commentBefore.replace(/^/gm, '#')); // top-level block scalars need to be indented if followed by a comment\n\n          ctx.forceBlockIndent = !!this.comment;\n          contentComment = this.contents.comment;\n        }\n\n        var onChompKeep = contentComment ? null : function () {\n          return chompKeep = true;\n        };\n        var body = stringify$1(this.contents, ctx, function () {\n          return contentComment = null;\n        }, onChompKeep);\n        lines.push(addComment(body, '', contentComment));\n      } else if (this.contents !== undefined) {\n        lines.push(stringify$1(this.contents, ctx));\n      }\n\n      if (this.comment) {\n        if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');\n        lines.push(this.comment.replace(/^/gm, '#'));\n      }\n\n      return lines.join('\\n') + '\\n';\n    }\n  }]);\n\n  return Document;\n}();\n\n_defineProperty(Document$1, \"defaults\", documentOptions);\n\nfunction createNode(value) {\n  var wrapScalars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var tag = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (tag === undefined && typeof wrapScalars === 'string') {\n    tag = wrapScalars;\n    wrapScalars = true;\n  }\n\n  var options = Object.assign({}, Document$1.defaults[defaultOptions.version], defaultOptions);\n  var schema = new Schema(options);\n  return schema.createNode(value, wrapScalars, tag);\n}\n\nvar Document = /*#__PURE__*/function (_YAMLDocument) {\n  _inherits(Document, _YAMLDocument);\n\n  var _super = _createSuper(Document);\n\n  function Document(options) {\n    _classCallCheck(this, Document);\n\n    return _super.call(this, Object.assign({}, defaultOptions, options));\n  }\n\n  return Document;\n}(Document$1);\n\nfunction parseAllDocuments(src, options) {\n  var stream = [];\n  var prev;\n\n  var _iterator = _createForOfIteratorHelper(parse$1(src)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cstDoc = _step.value;\n      var doc = new Document(options);\n      doc.parse(cstDoc, prev);\n      stream.push(doc);\n      prev = doc;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return stream;\n}\n\nfunction parseDocument(src, options) {\n  var cst = parse$1(src);\n  var doc = new Document(options).parse(cst[0]);\n\n  if (cst.length > 1) {\n    var errMsg = 'Source contains multiple documents; please use YAML.parseAllDocuments()';\n    doc.errors.unshift(new YAMLSemanticError(cst[1], errMsg));\n  }\n\n  return doc;\n}\n\nfunction parse(src, options) {\n  var doc = parseDocument(src, options);\n  doc.warnings.forEach(function (warning) {\n    return warn(warning);\n  });\n  if (doc.errors.length > 0) throw doc.errors[0];\n  return doc.toJSON();\n}\n\nfunction stringify(value, options) {\n  var doc = new Document(options);\n  doc.contents = value;\n  return String(doc);\n}\n\nvar YAML = {\n  createNode: createNode,\n  defaultOptions: defaultOptions,\n  Document: Document,\n  parse: parse,\n  parseAllDocuments: parseAllDocuments,\n  parseCST: parse$1,\n  parseDocument: parseDocument,\n  scalarOptions: scalarOptions,\n  stringify: stringify\n};\n\nexport { YAML };\n", "module.exports = require('./dist').YAML\n", "/* eslint-disable @typescript-eslint/no-require-imports */\n\nimport parseJsonType from 'parse-json';\nimport yamlType from 'yaml';\nimport importFreshType from 'import-fresh';\nimport { LoaderSync } from './index';\nimport { LoadersSync } from './types';\n\nlet importFresh: typeof importFreshType;\nconst loadJs: LoaderSync = function loadJs(filepath) {\n  if (importFresh === undefined) {\n    importFresh = require('import-fresh');\n  }\n\n  const result = importFresh(filepath);\n  return result;\n};\n\nlet parseJson: typeof parseJsonType;\nconst loadJson: LoaderSync = function loadJson(filepath, content) {\n  if (parseJson === undefined) {\n    parseJson = require('parse-json');\n  }\n\n  try {\n    const result = parseJson(content);\n    return result;\n  } catch (error) {\n    error.message = `JSON Error in ${filepath}:\\n${error.message}`;\n    throw error;\n  }\n};\n\nlet yaml: typeof yamlType;\nconst loadYaml: LoaderSync = function loadYaml(filepath, content) {\n  if (yaml === undefined) {\n    yaml = require('yaml');\n  }\n\n  try {\n    const result = yaml.parse(content, { prettyErrors: true });\n    return result;\n  } catch (error) {\n    error.message = `YAML Error in ${filepath}:\\n${error.message}`;\n    throw error;\n  }\n};\n\nconst loaders: LoadersSync = { loadJs, loadJson, loadYaml };\n\nexport { loaders };\n", "// Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\nfunction getPropertyByPath(\n  source: { [key: string]: unknown },\n  path: string | Array<string>,\n): unknown {\n  if (\n    typeof path === 'string' &&\n    Object.prototype.hasOwnProperty.call(source, path)\n  ) {\n    return source[path];\n  }\n\n  const parsedPath = typeof path === 'string' ? path.split('.') : path;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return parsedPath.reduce((previous: any, key): unknown => {\n    if (previous === undefined) {\n      return previous;\n    }\n    return previous[key];\n  }, source);\n}\n\nexport { getPropertyByPath };\n", "import path from 'path';\nimport { loaders } from './loaders';\nimport { getPropertyByPath } from './getPropertyByPath';\nimport {\n  CosmiconfigResult,\n  ExplorerOptions,\n  ExplorerOptionsSync,\n  Cache,\n  LoadedFileContent,\n} from './types';\nimport { Loader } from './index';\n\nclass ExplorerBase<T extends ExplorerOptions | ExplorerOptionsSync> {\n  protected readonly loadCache?: Cache;\n  protected readonly searchCache?: Cache;\n  protected readonly config: T;\n\n  public constructor(options: T) {\n    if (options.cache === true) {\n      this.loadCache = new Map();\n      this.searchCache = new Map();\n    }\n\n    this.config = options;\n    this.validateConfig();\n  }\n\n  public clearLoadCache(): void {\n    if (this.loadCache) {\n      this.loadCache.clear();\n    }\n  }\n\n  public clearSearchCache(): void {\n    if (this.searchCache) {\n      this.searchCache.clear();\n    }\n  }\n\n  public clearCaches(): void {\n    this.clearLoadCache();\n    this.clearSearchCache();\n  }\n\n  private validateConfig(): void {\n    const config = this.config;\n\n    config.searchPlaces.forEach((place): void => {\n      const loaderKey = path.extname(place) || 'noExt';\n      const loader = config.loaders[loaderKey];\n      if (!loader) {\n        throw new Error(\n          `No loader specified for ${getExtensionDescription(\n            place,\n          )}, so searchPlaces item \"${place}\" is invalid`,\n        );\n      }\n\n      if (typeof loader !== 'function') {\n        throw new Error(\n          `loader for ${getExtensionDescription(\n            place,\n          )} is not a function (type provided: \"${typeof loader}\"), so searchPlaces item \"${place}\" is invalid`,\n        );\n      }\n    });\n  }\n\n  protected shouldSearchStopWithResult(result: CosmiconfigResult): boolean {\n    if (result === null) return false;\n    if (result.isEmpty && this.config.ignoreEmptySearchPlaces) return false;\n    return true;\n  }\n\n  protected nextDirectoryToSearch(\n    currentDir: string,\n    currentResult: CosmiconfigResult,\n  ): string | null {\n    if (this.shouldSearchStopWithResult(currentResult)) {\n      return null;\n    }\n    const nextDir = nextDirUp(currentDir);\n    if (nextDir === currentDir || currentDir === this.config.stopDir) {\n      return null;\n    }\n    return nextDir;\n  }\n\n  private loadPackageProp(filepath: string, content: string): unknown {\n    const parsedContent = loaders.loadJson(filepath, content);\n    const packagePropValue = getPropertyByPath(\n      parsedContent,\n      this.config.packageProp,\n    );\n    return packagePropValue || null;\n  }\n\n  protected getLoaderEntryForFile(filepath: string): Loader {\n    if (path.basename(filepath) === 'package.json') {\n      const loader = this.loadPackageProp.bind(this);\n      return loader;\n    }\n\n    const loaderKey = path.extname(filepath) || 'noExt';\n\n    const loader = this.config.loaders[loaderKey];\n\n    if (!loader) {\n      throw new Error(\n        `No loader specified for ${getExtensionDescription(filepath)}`,\n      );\n    }\n\n    return loader;\n  }\n\n  protected loadedContentToCosmiconfigResult(\n    filepath: string,\n    loadedContent: LoadedFileContent,\n  ): CosmiconfigResult {\n    if (loadedContent === null) {\n      return null;\n    }\n    if (loadedContent === undefined) {\n      return { filepath, config: undefined, isEmpty: true };\n    }\n    return { config: loadedContent, filepath };\n  }\n\n  protected validateFilePath(filepath: string): void {\n    if (!filepath) {\n      throw new Error('load must pass a non-empty string');\n    }\n  }\n}\n\nfunction nextDirUp(dir: string): string {\n  return path.dirname(dir);\n}\n\nfunction getExtensionDescription(filepath: string): string {\n  const ext = path.extname(filepath);\n  return ext ? `extension \"${ext}\"` : 'files without extensions';\n}\n\nexport { ExplorerBase, getExtensionDescription };\n", "import fs from 'fs';\n\nasync function fsReadFileAsync(\n  pathname: string,\n  encoding: BufferEncoding,\n): Promise<string> {\n  return new Promise((resolve, reject): void => {\n    fs.readFile(pathname, encoding, (error, contents): void => {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      resolve(contents);\n    });\n  });\n}\n\ninterface Options {\n  throwNotFound?: boolean;\n}\n\nasync function readFile(\n  filepath: string,\n  options: Options = {},\n): Promise<string | null> {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = await fsReadFileAsync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (\n      throwNotFound === false &&\n      (error.code === 'ENOENT' || error.code === 'EISDIR')\n    ) {\n      return null;\n    }\n\n    throw error;\n  }\n}\n\nfunction readFileSync(filepath: string, options: Options = {}): string | null {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = fs.readFileSync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (\n      throwNotFound === false &&\n      (error.code === 'ENOENT' || error.code === 'EISDIR')\n    ) {\n      return null;\n    }\n\n    throw error;\n  }\n}\n\nexport { readFile, readFileSync };\n", "import { Cache, CosmiconfigResult } from './types';\n\nasync function cacheWrapper(\n  cache: Cache,\n  key: string,\n  fn: () => Promise<CosmiconfigResult>,\n): Promise<CosmiconfigResult> {\n  const cached = cache.get(key);\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = await fn();\n  cache.set(key, result);\n  return result;\n}\n\nfunction cacheWrapperSync(\n  cache: Cache,\n  key: string,\n  fn: () => CosmiconfigResult,\n): CosmiconfigResult {\n  const cached = cache.get(key);\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = fn();\n  cache.set(key, result);\n  return result;\n}\n\nexport { cacheWrapper, cacheWrapperSync };\n", "'use strict';\nconst {promisify} = require('util');\nconst fs = require('fs');\n\nasync function isType(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\tconst stats = await promisify(fs[fsStatType])(filePath);\n\t\treturn stats[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nfunction isTypeSync(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\treturn fs[fsStatType](filePath)[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexports.isFile = isType.bind(null, 'stat', 'isFile');\nexports.isDirectory = isType.bind(null, 'stat', 'isDirectory');\nexports.isSymlink = isType.bind(null, 'lstat', 'isSymbolicLink');\nexports.isFileSync = isTypeSync.bind(null, 'statSync', 'isFile');\nexports.isDirectorySync = isTypeSync.bind(null, 'statSync', 'isDirectory');\nexports.isSymlinkSync = isTypeSync.bind(null, 'lstatSync', 'isSymbolicLink');\n", "import path from 'path';\nimport { isDirectory, isDirectorySync } from 'path-type';\n\nasync function getDirectory(filepath: string): Promise<string> {\n  const filePathIsDirectory = await isDirectory(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = path.dirname(filepath);\n\n  return directory;\n}\n\nfunction getDirectorySync(filepath: string): string {\n  const filePathIsDirectory = isDirectorySync(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = path.dirname(filepath);\n\n  return directory;\n}\n\nexport { getDirectory, getDirectorySync };\n", "import path from 'path';\nimport { ExplorerBase } from './ExplorerBase';\nimport { readFile } from './readFile';\nimport { cacheWrapper } from './cacheWrapper';\nimport { getDirectory } from './getDirectory';\nimport { CosmiconfigResult, ExplorerOptions, LoadedFileContent } from './types';\n\nclass Explorer extends ExplorerBase<ExplorerOptions> {\n  public constructor(options: ExplorerOptions) {\n    super(options);\n  }\n\n  public async search(\n    searchFrom: string = process.cwd(),\n  ): Promise<CosmiconfigResult> {\n    const startDirectory = await getDirectory(searchFrom);\n    const result = await this.searchFromDirectory(startDirectory);\n\n    return result;\n  }\n\n  private async searchFromDirectory(dir: string): Promise<CosmiconfigResult> {\n    const absoluteDir = path.resolve(process.cwd(), dir);\n\n    const run = async (): Promise<CosmiconfigResult> => {\n      const result = await this.searchDirectory(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectory(nextDir);\n      }\n\n      const transformResult = await this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.searchCache) {\n      return cacheWrapper(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  private async searchDirectory(dir: string): Promise<CosmiconfigResult> {\n    for await (const place of this.config.searchPlaces) {\n      const placeResult = await this.loadSearchPlace(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult) === true) {\n        return placeResult;\n      }\n    }\n\n    // config not found\n    return null;\n  }\n\n  private async loadSearchPlace(\n    dir: string,\n    place: string,\n  ): Promise<CosmiconfigResult> {\n    const filepath = path.join(dir, place);\n    const fileContents = await readFile(filepath);\n\n    const result = await this.createCosmiconfigResult(filepath, fileContents);\n\n    return result;\n  }\n\n  private async loadFileContent(\n    filepath: string,\n    content: string | null,\n  ): Promise<LoadedFileContent> {\n    if (content === null) {\n      return null;\n    }\n    if (content.trim() === '') {\n      return undefined;\n    }\n    const loader = this.getLoaderEntryForFile(filepath);\n    const loaderResult = await loader(filepath, content);\n    return loaderResult;\n  }\n\n  private async createCosmiconfigResult(\n    filepath: string,\n    content: string | null,\n  ): Promise<CosmiconfigResult> {\n    const fileContent = await this.loadFileContent(filepath, content);\n    const result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n\n    return result;\n  }\n\n  public async load(filepath: string): Promise<CosmiconfigResult> {\n    this.validateFilePath(filepath);\n    const absoluteFilePath = path.resolve(process.cwd(), filepath);\n\n    const runLoad = async (): Promise<CosmiconfigResult> => {\n      const fileContents = await readFile(absoluteFilePath, {\n        throwNotFound: true,\n      });\n\n      const result = await this.createCosmiconfigResult(\n        absoluteFilePath,\n        fileContents,\n      );\n\n      const transformResult = await this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.loadCache) {\n      return cacheWrapper(this.loadCache, absoluteFilePath, runLoad);\n    }\n\n    return runLoad();\n  }\n}\n\nexport { Explorer };\n", "import path from 'path';\nimport { ExplorerBase } from './ExplorerBase';\nimport { readFileSync } from './readFile';\nimport { cacheWrapperSync } from './cacheWrapper';\nimport { getDirectorySync } from './getDirectory';\nimport {\n  CosmiconfigResult,\n  ExplorerOptionsSync,\n  LoadedFileContent,\n} from './types';\n\nclass ExplorerSync extends ExplorerBase<ExplorerOptionsSync> {\n  public constructor(options: ExplorerOptionsSync) {\n    super(options);\n  }\n\n  public searchSync(searchFrom: string = process.cwd()): CosmiconfigResult {\n    const startDirectory = getDirectorySync(searchFrom);\n    const result = this.searchFromDirectorySync(startDirectory);\n\n    return result;\n  }\n\n  private searchFromDirectorySync(dir: string): CosmiconfigResult {\n    const absoluteDir = path.resolve(process.cwd(), dir);\n\n    const run = (): CosmiconfigResult => {\n      const result = this.searchDirectorySync(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectorySync(nextDir);\n      }\n\n      const transformResult = this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.searchCache) {\n      return cacheWrapperSync(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  private searchDirectorySync(dir: string): CosmiconfigResult {\n    for (const place of this.config.searchPlaces) {\n      const placeResult = this.loadSearchPlaceSync(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult) === true) {\n        return placeResult;\n      }\n    }\n\n    // config not found\n    return null;\n  }\n\n  private loadSearchPlaceSync(dir: string, place: string): CosmiconfigResult {\n    const filepath = path.join(dir, place);\n    const content = readFileSync(filepath);\n\n    const result = this.createCosmiconfigResultSync(filepath, content);\n\n    return result;\n  }\n\n  private loadFileContentSync(\n    filepath: string,\n    content: string | null,\n  ): LoadedFileContent {\n    if (content === null) {\n      return null;\n    }\n    if (content.trim() === '') {\n      return undefined;\n    }\n    const loader = this.getLoaderEntryForFile(filepath);\n    const loaderResult = loader(filepath, content);\n\n    return loaderResult;\n  }\n\n  private createCosmiconfigResultSync(\n    filepath: string,\n    content: string | null,\n  ): CosmiconfigResult {\n    const fileContent = this.loadFileContentSync(filepath, content);\n    const result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n\n    return result;\n  }\n\n  public loadSync(filepath: string): CosmiconfigResult {\n    this.validateFilePath(filepath);\n    const absoluteFilePath = path.resolve(process.cwd(), filepath);\n\n    const runLoadSync = (): CosmiconfigResult => {\n      const content = readFileSync(absoluteFilePath, { throwNotFound: true });\n      const cosmiconfigResult = this.createCosmiconfigResultSync(\n        absoluteFilePath,\n        content,\n      );\n\n      const transformResult = this.config.transform(cosmiconfigResult);\n\n      return transformResult;\n    };\n\n    if (this.loadCache) {\n      return cacheWrapperSync(this.loadCache, absoluteFilePath, runLoadSync);\n    }\n\n    return runLoadSync();\n  }\n}\n\nexport { ExplorerSync };\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//# sourceMappingURL=types.js.map", "/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport os from 'os';\nimport { Explorer } from './Explorer';\nimport { ExplorerSync } from './ExplorerSync';\nimport { loaders } from './loaders';\nimport {\n  Config,\n  CosmiconfigResult,\n  ExplorerOptions,\n  ExplorerOptionsSync,\n  Loaders,\n  LoadersSync,\n} from './types';\n\ntype LoaderResult = Config | null;\nexport type Loader =\n  | ((filepath: string, content: string) => Promise<LoaderResult>)\n  | LoaderSync;\nexport type LoaderSync = (filepath: string, content: string) => LoaderResult;\n\nexport type Transform =\n  | ((CosmiconfigResult: CosmiconfigResult) => Promise<CosmiconfigResult>)\n  | TransformSync;\n\nexport type TransformSync = (\n  CosmiconfigResult: CosmiconfigResult,\n) => CosmiconfigResult;\n\ninterface OptionsBase {\n  packageProp?: string | Array<string>;\n  searchPlaces?: Array<string>;\n  ignoreEmptySearchPlaces?: boolean;\n  stopDir?: string;\n  cache?: boolean;\n}\n\nexport interface Options extends OptionsBase {\n  loaders?: Loaders;\n  transform?: Transform;\n}\n\nexport interface OptionsSync extends OptionsBase {\n  loaders?: LoadersSync;\n  transform?: TransformSync;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfig(moduleName: string, options: Options = {}) {\n  const normalizedOptions: ExplorerOptions = normalizeOptions(\n    moduleName,\n    options,\n  );\n\n  const explorer = new Explorer(normalizedOptions);\n\n  return {\n    search: explorer.search.bind(explorer),\n    load: explorer.load.bind(explorer),\n    clearLoadCache: explorer.clearLoadCache.bind(explorer),\n    clearSearchCache: explorer.clearSearchCache.bind(explorer),\n    clearCaches: explorer.clearCaches.bind(explorer),\n  } as const;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfigSync(moduleName: string, options: OptionsSync = {}) {\n  const normalizedOptions: ExplorerOptionsSync = normalizeOptions(\n    moduleName,\n    options,\n  );\n\n  const explorerSync = new ExplorerSync(normalizedOptions);\n\n  return {\n    search: explorerSync.searchSync.bind(explorerSync),\n    load: explorerSync.loadSync.bind(explorerSync),\n    clearLoadCache: explorerSync.clearLoadCache.bind(explorerSync),\n    clearSearchCache: explorerSync.clearSearchCache.bind(explorerSync),\n    clearCaches: explorerSync.clearCaches.bind(explorerSync),\n  } as const;\n}\n\n// do not allow mutation of default loaders. Make sure it is set inside options\nconst defaultLoaders = Object.freeze({\n  '.cjs': loaders.loadJs,\n  '.js': loaders.loadJs,\n  '.json': loaders.loadJson,\n  '.yaml': loaders.loadYaml,\n  '.yml': loaders.loadYaml,\n  noExt: loaders.loadYaml,\n} as const);\n\nconst identity: TransformSync = function identity(x) {\n  return x;\n};\n\nfunction normalizeOptions(\n  moduleName: string,\n  options: OptionsSync,\n): ExplorerOptionsSync;\nfunction normalizeOptions(\n  moduleName: string,\n  options: Options,\n): ExplorerOptions;\nfunction normalizeOptions(\n  moduleName: string,\n  options: Options | OptionsSync,\n): ExplorerOptions | ExplorerOptionsSync {\n  const defaults: ExplorerOptions | ExplorerOptionsSync = {\n    packageProp: moduleName,\n    searchPlaces: [\n      'package.json',\n      `.${moduleName}rc`,\n      `.${moduleName}rc.json`,\n      `.${moduleName}rc.yaml`,\n      `.${moduleName}rc.yml`,\n      `.${moduleName}rc.js`,\n      `.${moduleName}rc.cjs`,\n      `${moduleName}.config.js`,\n      `${moduleName}.config.cjs`,\n    ],\n    ignoreEmptySearchPlaces: true,\n    stopDir: os.homedir(),\n    cache: true,\n    transform: identity,\n    loaders: defaultLoaders,\n  };\n\n  const normalizedOptions: ExplorerOptions | ExplorerOptionsSync = {\n    ...defaults,\n    ...options,\n    loaders: {\n      ...defaults.loaders,\n      ...options.loaders,\n    },\n  };\n\n  return normalizedOptions;\n}\n\nexport { cosmiconfig, cosmiconfigSync, defaultLoaders };\n", "\"use strict\";\n\nconst p = require('path');\n\nconst resolve = require('resolve'); // const printAST = require('ast-pretty-print')\n\n\nconst macrosRegex = /[./]macro(\\.c?js)?$/;\n\nconst testMacrosRegex = v => macrosRegex.test(v); // https://stackoverflow.com/a/32749533/971592\n\n\nclass MacroError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'MacroError';\n    /* istanbul ignore else */\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else if (!this.stack) {\n      this.stack = new Error(message).stack;\n    }\n  }\n\n}\n\nlet _configExplorer = null;\n\nfunction getConfigExplorer() {\n  return _configExplorer = _configExplorer || // Lazy load cosmiconfig since it is a relatively large bundle\n  require('cosmiconfig').cosmiconfigSync('babel-plugin-macros', {\n    searchPlaces: ['package.json', '.babel-plugin-macrosrc', '.babel-plugin-macrosrc.json', '.babel-plugin-macrosrc.yaml', '.babel-plugin-macrosrc.yml', '.babel-plugin-macrosrc.js', 'babel-plugin-macros.config.js'],\n    packageProp: 'babelMacros'\n  });\n}\n\nfunction createMacro(macro, options = {}) {\n  if (options.configName === 'options') {\n    throw new Error(`You cannot use the configName \"options\". It is reserved for babel-plugin-macros.`);\n  }\n\n  macroWrapper.isBabelMacro = true;\n  macroWrapper.options = options;\n  return macroWrapper;\n\n  function macroWrapper(args) {\n    const {\n      source,\n      isBabelMacrosCall\n    } = args;\n\n    if (!isBabelMacrosCall) {\n      throw new MacroError(`The macro you imported from \"${source}\" is being executed outside the context of compilation with babel-plugin-macros. ` + `This indicates that you don't have the babel plugin \"babel-plugin-macros\" configured correctly. ` + `Please see the documentation for how to configure babel-plugin-macros properly: ` + 'https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/user.md');\n    }\n\n    return macro(args);\n  }\n}\n\nfunction nodeResolvePath(source, basedir) {\n  return resolve.sync(source, {\n    basedir,\n    extensions: ['.js', '.ts', '.tsx', '.mjs', '.cjs', '.jsx'],\n    // This is here to support the package being globally installed\n    // read more: https://github.com/kentcdodds/babel-plugin-macros/pull/138\n    paths: [p.resolve(__dirname, '../../')]\n  });\n}\n\nfunction macrosPlugin(babel, // istanbul doesn't like the default of an object for the plugin options\n// but I think older versions of babel didn't always pass options\n// istanbul ignore next\n{\n  require: _require = require,\n  resolvePath = nodeResolvePath,\n  isMacrosName = testMacrosRegex,\n  ...options\n} = {}) {\n  function interopRequire(path) {\n    // eslint-disable-next-line import/no-dynamic-require\n    const o = _require(path);\n\n    return o && o.__esModule && o.default ? o.default : o;\n  }\n\n  return {\n    name: 'macros',\n    visitor: {\n      Program(progPath, state) {\n        progPath.traverse({\n          ImportDeclaration(path) {\n            const isMacros = looksLike(path, {\n              node: {\n                source: {\n                  value: v => isMacrosName(v)\n                }\n              }\n            });\n\n            if (!isMacros) {\n              return;\n            }\n\n            const imports = path.node.specifiers.map(s => ({\n              localName: s.local.name,\n              importedName: s.type === 'ImportDefaultSpecifier' ? 'default' : s.imported.name\n            }));\n            const source = path.node.source.value;\n            const result = applyMacros({\n              path,\n              imports,\n              source,\n              state,\n              babel,\n              interopRequire,\n              resolvePath,\n              options\n            });\n\n            if (!result || !result.keepImports) {\n              path.remove();\n            }\n          },\n\n          VariableDeclaration(path) {\n            const isMacros = child => looksLike(child, {\n              node: {\n                init: {\n                  callee: {\n                    type: 'Identifier',\n                    name: 'require'\n                  },\n                  arguments: args => args.length === 1 && isMacrosName(args[0].value)\n                }\n              }\n            });\n\n            path.get('declarations').filter(isMacros).forEach(child => {\n              const imports = child.node.id.name ? [{\n                localName: child.node.id.name,\n                importedName: 'default'\n              }] : child.node.id.properties.map(property => ({\n                localName: property.value.name,\n                importedName: property.key.name\n              }));\n              const call = child.get('init');\n              const source = call.node.arguments[0].value;\n              const result = applyMacros({\n                path: call,\n                imports,\n                source,\n                state,\n                babel,\n                interopRequire,\n                resolvePath,\n                options\n              });\n\n              if (!result || !result.keepImports) {\n                child.remove();\n              }\n            });\n          }\n\n        });\n      }\n\n    }\n  };\n} // eslint-disable-next-line complexity\n\n\nfunction applyMacros({\n  path,\n  imports,\n  source,\n  state,\n  babel,\n  interopRequire,\n  resolvePath,\n  options\n}) {\n  /* istanbul ignore next (pretty much only useful for astexplorer I think) */\n  const {\n    file: {\n      opts: {\n        filename = ''\n      }\n    }\n  } = state;\n  let hasReferences = false;\n  const referencePathsByImportName = imports.reduce((byName, {\n    importedName,\n    localName\n  }) => {\n    const binding = path.scope.getBinding(localName);\n    byName[importedName] = binding.referencePaths;\n    hasReferences = hasReferences || Boolean(byName[importedName].length);\n    return byName;\n  }, {});\n  const isRelative = source.indexOf('.') === 0;\n  const requirePath = resolvePath(source, p.dirname(getFullFilename(filename)));\n  const macro = interopRequire(requirePath);\n\n  if (!macro.isBabelMacro) {\n    throw new Error(`The macro imported from \"${source}\" must be wrapped in \"createMacro\" ` + `which you can get from \"babel-plugin-macros\". ` + `Please refer to the documentation to see how to do this properly: https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/author.md#writing-a-macro`);\n  }\n\n  const config = getConfig(macro, filename, source, options);\n  let result;\n\n  try {\n    /**\n     * Other plugins that run before babel-plugin-macros might use path.replace, where a path is\n     * put into its own replacement. Apparently babel does not update the scope after such\n     * an operation. As a remedy, the whole scope is traversed again with an empty \"Identifier\"\n     * visitor - this makes the problem go away.\n     *\n     * See: https://github.com/kentcdodds/import-all.macro/issues/7\n     */\n    state.file.scope.path.traverse({\n      Identifier() {}\n\n    });\n    result = macro({\n      references: referencePathsByImportName,\n      source,\n      state,\n      babel,\n      config,\n      isBabelMacrosCall: true\n    });\n  } catch (error) {\n    if (error.name === 'MacroError') {\n      throw error;\n    }\n\n    error.message = `${source}: ${error.message}`;\n\n    if (!isRelative) {\n      error.message = `${error.message} Learn more: https://www.npmjs.com/package/${source.replace( // remove everything after package name\n      // @org/package/macro -> @org/package\n      // package/macro      -> package\n      /^((?:@[^/]+\\/)?[^/]+).*/, '$1')}`;\n    }\n\n    throw error;\n  }\n\n  return result;\n}\n\nfunction getConfigFromFile(configName, filename) {\n  try {\n    const loaded = getConfigExplorer().search(filename);\n\n    if (loaded) {\n      return {\n        options: loaded.config[configName],\n        path: loaded.filepath\n      };\n    }\n  } catch (e) {\n    return {\n      error: e\n    };\n  }\n\n  return {};\n}\n\nfunction getConfigFromOptions(configName, options) {\n  if (options.hasOwnProperty(configName)) {\n    if (options[configName] && typeof options[configName] !== 'object') {\n      // eslint-disable-next-line no-console\n      console.error(`The macro plugin options' ${configName} property was not an object or null.`);\n    } else {\n      return {\n        options: options[configName]\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getConfig(macro, filename, source, options) {\n  const {\n    configName\n  } = macro.options;\n\n  if (configName) {\n    const fileConfig = getConfigFromFile(configName, filename);\n    const optionsConfig = getConfigFromOptions(configName, options);\n\n    if (optionsConfig.options === undefined && fileConfig.options === undefined && fileConfig.error !== undefined) {\n      // eslint-disable-next-line no-console\n      console.error(`There was an error trying to load the config \"${configName}\" ` + `for the macro imported from \"${source}. ` + `Please see the error thrown for more information.`);\n      throw fileConfig.error;\n    }\n\n    if (fileConfig.options !== undefined && optionsConfig.options !== undefined && typeof fileConfig.options !== 'object') {\n      throw new Error(`${fileConfig.path} specified a ${configName} config of type ` + `${typeof optionsConfig.options}, but the the macros plugin's ` + `options.${configName} did contain an object. Both configs must ` + `contain objects for their options to be mergeable.`);\n    }\n\n    return { ...optionsConfig.options,\n      ...fileConfig.options\n    };\n  }\n\n  return undefined;\n}\n/*\n istanbul ignore next\n because this is hard to test\n and not worth it...\n */\n\n\nfunction getFullFilename(filename) {\n  if (p.isAbsolute(filename)) {\n    return filename;\n  }\n\n  return p.join(process.cwd(), filename);\n}\n\nfunction looksLike(a, b) {\n  return a && b && Object.keys(b).every(bKey => {\n    const bVal = b[bKey];\n    const aVal = a[bKey];\n\n    if (typeof bVal === 'function') {\n      return bVal(aVal);\n    }\n\n    return isPrimitive(bVal) ? bVal === aVal : looksLike(aVal, bVal);\n  });\n}\n\nfunction isPrimitive(val) {\n  // eslint-disable-next-line\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nmodule.exports = macrosPlugin;\nObject.assign(module.exports, {\n  createMacro,\n  MacroError\n});", "\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push(\"jsx\");\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = annotateAsPure;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment\n} = _t;\nconst PURE_ANNOTATION = \"#__PURE__\";\n\nconst isPureAnnotated = ({\n  leadingComments\n}) => !!leadingComments && leadingComments.some(comment => /[@#]__PURE__/.test(comment.value));\n\nfunction annotateAsPure(pathOrNode) {\n  const node = pathOrNode[\"node\"] || pathOrNode;\n\n  if (isPureAnnotated(node)) {\n    return;\n  }\n\n  addComment(node, \"leading\", PURE_ANNOTATION);\n}", "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTranspileTemplateLiterals = exports.useTopLevelImportPathMatchers = exports.useSSR = exports.usePureAnnotation = exports.useNamespace = exports.useMinify = exports.useMeaninglessFileNames = exports.useFileName = exports.useDisplayName = exports.useCssProp = void 0;\n\nvar _picomatch = _interopRequireDefault(require(\"picomatch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOption({\n  opts\n}, name, defaultValue = true) {\n  return opts[name] === undefined || opts[name] === null ? defaultValue : opts[name];\n}\n\nconst useDisplayName = state => getOption(state, 'displayName');\n\nexports.useDisplayName = useDisplayName;\n\nconst useTopLevelImportPathMatchers = state => getOption(state, 'topLevelImportPaths', []).map(pattern => (0, _picomatch.default)(pattern));\n\nexports.useTopLevelImportPathMatchers = useTopLevelImportPathMatchers;\n\nconst useSSR = state => getOption(state, 'ssr', true);\n\nexports.useSSR = useSSR;\n\nconst useFileName = state => getOption(state, 'fileName');\n\nexports.useFileName = useFileName;\n\nconst useMeaninglessFileNames = state => getOption(state, 'meaninglessFileNames', ['index']);\n\nexports.useMeaninglessFileNames = useMeaninglessFileNames;\n\nconst useMinify = state => getOption(state, 'minify');\n\nexports.useMinify = useMinify;\n\nconst useTranspileTemplateLiterals = state => getOption(state, 'transpileTemplateLiterals');\n\nexports.useTranspileTemplateLiterals = useTranspileTemplateLiterals;\n\nconst useNamespace = state => {\n  const namespace = getOption(state, 'namespace', '');\n\n  if (namespace) {\n    return `${namespace}__`;\n  }\n\n  return '';\n};\n\nexports.useNamespace = useNamespace;\n\nconst usePureAnnotation = state => getOption(state, 'pure', false);\n\nexports.usePureAnnotation = usePureAnnotation;\n\nconst useCssProp = state => getOption(state, 'cssProp', true);\n\nexports.useCssProp = useCssProp;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isWithThemeHelper = exports.isValidTopLevelImport = exports.isUseTheme = exports.isStyled = exports.isPureHelper = exports.isKeyframesHelper = exports.isInjectGlobalHelper = exports.isHelper = exports.isCreateGlobalStyleHelper = exports.isCSSHelper = exports.importLocalName = void 0;\n\nvar _options = require(\"./options\");\n\nconst VALID_TOP_LEVEL_IMPORT_PATH_MATCHERS = ['styled-components', 'styled-components/no-tags', 'styled-components/native', 'styled-components/primitives'].map(literal => x => x === literal);\n\nconst isValidTopLevelImport = (x, state) => {\n  return [...VALID_TOP_LEVEL_IMPORT_PATH_MATCHERS, ...(0, _options.useTopLevelImportPathMatchers)(state)].some(isMatch => isMatch(x));\n};\n\nexports.isValidTopLevelImport = isValidTopLevelImport;\nconst localNameCache = {};\n\nconst importLocalName = (name, state, options = {}) => {\n  const {\n    cacheIdentifier,\n    bypassCache = false\n  } = options;\n  const cacheKeyAffix = cacheIdentifier ? `|${cacheIdentifier}` : '';\n  const cacheKey = name + state.file.opts.filename + cacheKeyAffix;\n\n  if (!bypassCache && cacheKey in localNameCache) {\n    return localNameCache[cacheKey]; // state.customImportName is injected by the babel macro\n  } else if (state.customImportName) {\n    return state.customImportName.name;\n  }\n\n  let localName = state.styledRequired ? name === 'default' ? 'styled' : name : false;\n  state.file.path.traverse({\n    ImportDeclaration: {\n      exit(path) {\n        const {\n          node\n        } = path;\n\n        if (isValidTopLevelImport(node.source.value, state)) {\n          for (const specifier of path.get('specifiers')) {\n            if (specifier.isImportSpecifier() && specifier.node.imported.name === 'styled') {\n              localName = 'styled';\n            }\n\n            if (specifier.isImportDefaultSpecifier()) {\n              localName = specifier.node.local.name;\n            }\n\n            if (specifier.isImportSpecifier() && specifier.node.imported.name === name) {\n              localName = specifier.node.local.name;\n            }\n\n            if (specifier.isImportNamespaceSpecifier()) {\n              localName = name === 'default' ? specifier.node.local.name : name;\n            }\n          }\n        }\n      }\n\n    }\n  });\n  localNameCache[cacheKey] = localName;\n  return localName;\n};\n\nexports.importLocalName = importLocalName;\n\nconst isStyled = t => (tag, state) => {\n  if (t.isCallExpression(tag) && t.isMemberExpression(tag.callee) && tag.callee.property.name !== 'default'\n  /** ignore default for #93 below */\n  ) {\n    // styled.something()\n    return isStyled(t)(tag.callee.object, state);\n  } else {\n    return t.isMemberExpression(tag) && tag.object.name === importLocalName('default', state, {\n      cacheIdentifier: tag.object.name\n    }) && !isHelper(t)(tag.property, state) || t.isCallExpression(tag) && tag.callee.name === importLocalName('default', state, {\n      cacheIdentifier: tag.callee.name\n    }) ||\n    /**\n     * #93 Support require()\n     * styled-components might be imported using a require()\n     * call and assigned to a variable of any name.\n     * - styled.default.div``\n     * - styled.default.something()\n     */\n    state.styledRequired && t.isMemberExpression(tag) && t.isMemberExpression(tag.object) && tag.object.property.name === 'default' && tag.object.object.name === state.styledRequired || state.styledRequired && t.isCallExpression(tag) && t.isMemberExpression(tag.callee) && tag.callee.property.name === 'default' && tag.callee.object.name === state.styledRequired || importLocalName('default', state) && t.isMemberExpression(tag) && t.isMemberExpression(tag.object) && tag.object.property.name === 'default' && tag.object.object.name === importLocalName('default', state) || importLocalName('default', state) && t.isCallExpression(tag) && t.isMemberExpression(tag.callee) && tag.object.property.name === 'default' && tag.object.object.name === importLocalName('default', state);\n  }\n};\n\nexports.isStyled = isStyled;\n\nconst isCSSHelper = t => (tag, state) => t.isIdentifier(tag) && tag.name === importLocalName('css', state);\n\nexports.isCSSHelper = isCSSHelper;\n\nconst isCreateGlobalStyleHelper = t => (tag, state) => t.isIdentifier(tag) && tag.name === importLocalName('createGlobalStyle', state);\n\nexports.isCreateGlobalStyleHelper = isCreateGlobalStyleHelper;\n\nconst isInjectGlobalHelper = t => (tag, state) => t.isIdentifier(tag) && tag.name === importLocalName('injectGlobal', state);\n\nexports.isInjectGlobalHelper = isInjectGlobalHelper;\n\nconst isKeyframesHelper = t => (tag, state) => t.isIdentifier(tag) && tag.name === importLocalName('keyframes', state);\n\nexports.isKeyframesHelper = isKeyframesHelper;\n\nconst isWithThemeHelper = t => (tag, state) => t.isIdentifier(tag) && tag.name === importLocalName('withTheme', state);\n\nexports.isWithThemeHelper = isWithThemeHelper;\n\nconst isUseTheme = t => (tag, state) => t.isIdentifier(tag) && tag.name === importLocalName('useTheme', state);\n\nexports.isUseTheme = isUseTheme;\n\nconst isHelper = t => (tag, state) => isCreateGlobalStyleHelper(t)(tag, state) || isCSSHelper(t)(tag, state) || isInjectGlobalHelper(t)(tag, state) || isUseTheme(t)(tag, state) || isKeyframesHelper(t)(tag, state) || isWithThemeHelper(t)(tag, state);\n\nexports.isHelper = isHelper;\n\nconst isPureHelper = t => (tag, state) => isCreateGlobalStyleHelper(t)(tag, state) || isCSSHelper(t)(tag, state) || isKeyframesHelper(t)(tag, state) || isUseTheme(t)(tag, state) || isWithThemeHelper(t)(tag, state);\n\nexports.isPureHelper = isPureHelper;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _options = require(\"../utils/options\");\n\nvar _detectors = require(\"../utils/detectors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = t => (path, state) => {\n  if ((0, _options.usePureAnnotation)(state)) {\n    if ((0, _detectors.isStyled)(t)(path.node, state) || (0, _detectors.isStyled)(t)(path.node.callee, state) || (0, _detectors.isPureHelper)(t)(path.node.tag || path.node.callee, state)) {\n      if (path.parent.type === 'VariableDeclarator' || path.parent.type === 'TaggedTemplateExpression') {\n        (0, _helperAnnotateAsPure.default)(path);\n      }\n    }\n  }\n};\n\nexports.default = _default;", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n", "var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n", "var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n", "var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n", "var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n", "var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.splitByPlaceholders = exports.placeholderRegex = exports.makePlaceholder = void 0;\n// The capture group makes sure that the split contains the interpolation index\nconst placeholderRegex = /(?:__PLACEHOLDER_(\\d+)__)/g; // Alternative regex that splits without a capture group\n\nexports.placeholderRegex = placeholderRegex;\nconst placeholderNonCapturingRegex = /__PLACEHOLDER_(?:\\d+)__/g; // Generates a placeholder from an index\n\nconst makePlaceholder = index => `__PLACEHOLDER_${index}__`; // Splits CSS by placeholders\n\n\nexports.makePlaceholder = makePlaceholder;\n\nconst splitByPlaceholders = ([css, ...rest], capture = true) => [css.split(capture ? placeholderRegex : placeholderNonCapturingRegex), ...rest];\n\nexports.splitByPlaceholders = splitByPlaceholders;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stripLineComment = exports.minifyRawValues = exports.minifyRaw = exports.minifyCookedValues = exports.minifyCooked = exports.compressSymbols = void 0;\n\nvar _difference = _interopRequireDefault(require(\"lodash/difference\"));\n\nvar _placeholderUtils = require(\"../css/placeholderUtils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst injectUniquePlaceholders = strArr => {\n  let i = 0;\n  return strArr.reduce((str, val, index, arr) => {\n    return str + val + (index < arr.length - 1 ? (0, _placeholderUtils.makePlaceholder)(i++) : '');\n  }, '');\n};\n\nconst makeMultilineCommentRegex = newlinePattern => new RegExp('\\\\/\\\\*[^!](.|' + newlinePattern + ')*?\\\\*\\\\/', 'g');\n\nconst lineCommentStart = /\\/\\//g;\nconst symbolRegex = /(\\s*[;:{},]\\s*)/g; // Counts occurences of substr inside str\n\nconst countOccurences = (str, substr) => str.split(substr).length - 1; // Joins substrings until predicate returns true\n\n\nconst reduceSubstr = (substrs, join, predicate) => {\n  const length = substrs.length;\n  let res = substrs[0];\n\n  if (length === 1) {\n    return res;\n  }\n\n  for (let i = 1; i < length; i++) {\n    if (predicate(res)) {\n      break;\n    }\n\n    res += join + substrs[i];\n  }\n\n  return res;\n}; // Joins at comment starts when it's inside a string or parantheses\n// effectively removing line comments\n\n\nconst stripLineComment = line => reduceSubstr(line.split(lineCommentStart), '//', str => !str.endsWith(':') && // NOTE: This is another guard against urls, if they're not inside strings or parantheses.\ncountOccurences(str, \"'\") % 2 === 0 && countOccurences(str, '\"') % 2 === 0 && countOccurences(str, '(') === countOccurences(str, ')'));\n\nexports.stripLineComment = stripLineComment;\n\nconst compressSymbols = code => code.split(symbolRegex).reduce((str, fragment, index) => {\n  // Even-indices are non-symbol fragments\n  if (index % 2 === 0) {\n    return str + fragment;\n  } // Only manipulate symbols outside of strings\n\n\n  if (countOccurences(str, \"'\") % 2 !== 0 || countOccurences(str, '\"') % 2 !== 0) {\n    return str + fragment;\n  } // Preserve whitespace preceding colon, to avoid joining selectors.\n\n\n  if (/^\\s+:/.test(fragment)) {\n    return str + ' ' + fragment.trim();\n  }\n\n  return str + fragment.trim();\n}, ''); // Detects lines that are exclusively line comments\n\n\nexports.compressSymbols = compressSymbols;\n\nconst isLineComment = line => line.trim().startsWith('//'); // Creates a minifier with a certain linebreak pattern\n\n\nconst minify = linebreakPattern => {\n  const linebreakRegex = new RegExp(linebreakPattern + '\\\\s*', 'g');\n  const multilineCommentRegex = makeMultilineCommentRegex(linebreakPattern);\n  return code => {\n    const newCode = code.replace(multilineCommentRegex, '\\n') // Remove multiline comments\n    .split(linebreakRegex) // Split at newlines\n    .filter(line => line.length > 0 && !isLineComment(line)) // Removes lines containing only line comments\n    .map(stripLineComment) // Remove line comments inside text\n    .join(' '); // Rejoin all lines\n\n    const eliminatedExpressionIndices = (0, _difference.default)(code.match(_placeholderUtils.placeholderRegex), newCode.match(_placeholderUtils.placeholderRegex)).map(x => parseInt(x.match(/\\d+/)[0], 10));\n    return [compressSymbols(newCode), eliminatedExpressionIndices];\n  };\n};\n\nconst minifyRaw = minify('(?:\\\\\\\\r|\\\\\\\\n|\\\\r|\\\\n)');\nexports.minifyRaw = minifyRaw;\nconst minifyCooked = minify('[\\\\r\\\\n]');\nexports.minifyCooked = minifyCooked;\n\nconst minifyRawValues = rawValues => (0, _placeholderUtils.splitByPlaceholders)(minifyRaw(injectUniquePlaceholders(rawValues)), false);\n\nexports.minifyRawValues = minifyRawValues;\n\nconst minifyCookedValues = cookedValues => (0, _placeholderUtils.splitByPlaceholders)(minifyCooked(injectUniquePlaceholders(cookedValues)), false);\n\nexports.minifyCookedValues = minifyCookedValues;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _options = require(\"../utils/options\");\n\nvar _detectors = require(\"../utils/detectors\");\n\nvar _minify = require(\"../minify\");\n\nvar _default = t => (path, state) => {\n  if ((0, _options.useMinify)(state) && ((0, _detectors.isStyled)(t)(path.node.tag, state) || (0, _detectors.isHelper)(t)(path.node.tag, state))) {\n    const templateLiteral = path.node.quasi;\n    const quasisLength = templateLiteral.quasis.length;\n    const [rawValuesMinified] = (0, _minify.minifyRawValues)(templateLiteral.quasis.map(x => x.value.raw));\n    const [cookedValuesMinfified, eliminatedExpressionIndices] = (0, _minify.minifyCookedValues)(templateLiteral.quasis.map(x => x.value.cooked));\n    eliminatedExpressionIndices.forEach((expressionIndex, iteration) => {\n      templateLiteral.expressions.splice(expressionIndex - iteration, 1);\n    });\n\n    for (let i = 0; i < quasisLength; i++) {\n      const element = templateLiteral.quasis[i];\n      element.value.raw = rawValuesMinified[i];\n      element.value.cooked = cookedValuesMinfified[i];\n    }\n  }\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Get the name of variable that contains node\n *\n * @param  {Path} path to the node\n *\n * @return {String}   The target\n */\nvar _default = t => path => {\n  let namedNode;\n  path.find(path => {\n    // X = styled\n    if (path.isAssignmentExpression()) {\n      namedNode = path.node.left; // const X = { Y: styled }\n    } else if (path.isObjectProperty()) {\n      namedNode = path.node.key; // class Y { (static) X = styled }\n    } else if (path.isClassProperty()) {\n      namedNode = path.node.key; // const X = styled\n    } else if (path.isVariableDeclarator()) {\n      namedNode = path.node.id;\n    } else if (path.isStatement()) {\n      // we've hit a statement, we should stop crawling up\n      return true;\n    } // we've got an displayName (if we need it) no need to continue\n    // However if this is an assignment expression like X = styled then we\n    // want to keep going up incase there is Y = X = styled; in this case we\n    // want to pick the outer name because react-refresh will add HMR variables\n    // like this: X = _a = styled. We could also consider only doing this if the\n    // name starts with an underscore.\n\n\n    if (namedNode && !path.isAssignmentExpression()) return true;\n  }); // foo.bar -> bar\n\n  if (t.isMemberExpression(namedNode)) {\n    namedNode = namedNode.property;\n  } // identifiers are the only thing we can reliably get a name from\n\n\n  return t.isIdentifier(namedNode) ? namedNode.name : undefined;\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixLeadingDigit;\n\nfunction prefixLeadingDigit(str) {\n  return str.replace(/^(\\d)/, 'sc-$1');\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * JS Implementation of MurmurHash2\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} str ASCII only\n * @return {string} Base 36 encoded hash result\n */\nfunction murmurhash2_32_gc(str) {\n  let l = str.length;\n  let h = l;\n  let i = 0;\n  let k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  } // forgive existing code\n\n  /* eslint-disable no-fallthrough */\n\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n  /* eslint-enable no-fallthrough */\n\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\n\nvar _default = murmurhash2_32_gc;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _options = require(\"../utils/options\");\n\nvar _getName = _interopRequireDefault(require(\"../utils/getName\"));\n\nvar _prefixDigit = _interopRequireDefault(require(\"../utils/prefixDigit\"));\n\nvar _hash = _interopRequireDefault(require(\"../utils/hash\"));\n\nvar _detectors = require(\"../utils/detectors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst addConfig = t => (path, displayName, componentId) => {\n  if (!displayName && !componentId) {\n    return;\n  }\n\n  const withConfigProps = [];\n\n  if (displayName) {\n    withConfigProps.push(t.objectProperty(t.identifier('displayName'), t.stringLiteral(displayName)));\n  }\n\n  if (componentId) {\n    withConfigProps.push(t.objectProperty(t.identifier('componentId'), t.stringLiteral(componentId)));\n  }\n\n  const existingConfig = getExistingConfig(t)(path);\n\n  if (existingConfig && existingConfig.arguments.length && Array.isArray(existingConfig.arguments[0].properties) && !existingConfig.arguments[0].properties.some(prop => ['displayName', 'componentId'].includes(prop.key.name))) {\n    existingConfig.arguments[0].properties.push(...withConfigProps);\n    return;\n  }\n\n  if (path.node.callee && t.isMemberExpression(path.node.callee.callee) && path.node.callee.callee.property && path.node.callee.callee.property.name && path.node.callee.callee.property.name == 'withConfig' && path.node.callee.arguments.length && Array.isArray(path.node.callee.arguments[0].properties) && !path.node.callee.arguments[0].properties.some(prop => ['displayName', 'componentId'].includes(prop.key.name))) {\n    path.node.callee.arguments[0].properties.push(...withConfigProps);\n    return;\n  }\n\n  if (path.node.tag) {\n    // Replace x`...` with x.withConfig({ })`...`\n    path.node.tag = t.callExpression(t.memberExpression(path.node.tag, t.identifier('withConfig')), [t.objectExpression(withConfigProps)]);\n  } else {\n    path.replaceWith(t.callExpression(t.callExpression(t.memberExpression(path.node.callee, t.identifier('withConfig')), [t.objectExpression(withConfigProps)]), path.node.arguments));\n  }\n};\n\nconst getExistingConfig = t => path => {\n  if (path.node.callee && t.isMemberExpression(path.node.callee.callee) && path.node.callee.callee.property && path.node.callee.callee.property.name && path.node.callee.callee.property.name == 'withConfig') {\n    return path.node.callee;\n  }\n\n  if (path.node.callee && t.isMemberExpression(path.node.callee.callee) && path.node.callee.callee.object && path.node.callee.callee.object.callee && path.node.callee.callee.object.callee.property && path.node.callee.callee.object.callee.property.name === 'withConfig') {\n    return path.node.callee.callee.object;\n  }\n};\n\nconst getBlockName = (file, meaninglessFileNames) => {\n  const name = _path.default.basename(file.opts.filename, _path.default.extname(file.opts.filename));\n\n  return meaninglessFileNames.includes(name) ? _path.default.basename(_path.default.dirname(file.opts.filename)) : name;\n};\n\nconst getDisplayName = t => (path, state) => {\n  const {\n    file\n  } = state;\n  const componentName = (0, _getName.default)(t)(path);\n\n  if (file) {\n    const blockName = getBlockName(file, (0, _options.useMeaninglessFileNames)(state));\n\n    if (blockName === componentName) {\n      return componentName;\n    }\n\n    return componentName ? `${(0, _prefixDigit.default)(blockName)}__${componentName}` : (0, _prefixDigit.default)(blockName);\n  } else {\n    return componentName;\n  }\n};\n\nconst findModuleRoot = filename => {\n  if (!filename) {\n    return null;\n  }\n\n  let dir = _path.default.dirname(filename);\n\n  if (_fs.default.existsSync(_path.default.join(dir, 'package.json'))) {\n    return dir;\n  } else if (dir !== filename) {\n    return findModuleRoot(dir);\n  } else {\n    return null;\n  }\n};\n\nconst FILE_HASH = 'styled-components-file-hash';\nconst COMPONENT_POSITION = 'styled-components-component-position';\nconst separatorRegExp = new RegExp(`\\\\${_path.default.sep}`, 'g');\n\nconst getFileHash = state => {\n  const {\n    file\n  } = state; // hash calculation is costly due to fs operations, so we'll cache it per file.\n\n  if (file.get(FILE_HASH)) {\n    return file.get(FILE_HASH);\n  }\n\n  const filename = file.opts.filename; // find module root directory\n\n  const moduleRoot = findModuleRoot(filename);\n\n  const filePath = moduleRoot && _path.default.relative(moduleRoot, filename).replace(separatorRegExp, '/');\n\n  const moduleName = moduleRoot && JSON.parse(_fs.default.readFileSync(_path.default.join(moduleRoot, 'package.json'))).name;\n  const code = file.code;\n  const stuffToHash = [moduleName];\n\n  if (filePath) {\n    stuffToHash.push(filePath);\n  } else {\n    stuffToHash.push(code);\n  }\n\n  const fileHash = (0, _hash.default)(stuffToHash.join(''));\n  file.set(FILE_HASH, fileHash);\n  return fileHash;\n};\n\nconst getNextId = state => {\n  const id = state.file.get(COMPONENT_POSITION) || 0;\n  state.file.set(COMPONENT_POSITION, id + 1);\n  return id;\n};\n\nconst getComponentId = state => {\n  // Prefix the identifier with a character because CSS classes cannot start with a number\n  return `${(0, _options.useNamespace)(state)}sc-${getFileHash(state)}-${getNextId(state)}`;\n};\n\nvar _default = t => (path, state) => {\n  if (path.node.tag ? (0, _detectors.isStyled)(t)(path.node.tag, state) :\n  /* styled()`` */\n  (0, _detectors.isStyled)(t)(path.node.callee, state) && path.node.callee.property && path.node.callee.property.name !== 'withConfig' || // styled(x)({})\n  (0, _detectors.isStyled)(t)(path.node.callee, state) && !t.isMemberExpression(path.node.callee.callee) || // styled(x).attrs()({})\n  (0, _detectors.isStyled)(t)(path.node.callee, state) && t.isMemberExpression(path.node.callee.callee) && path.node.callee.callee.property && path.node.callee.callee.property.name && path.node.callee.callee.property.name !== 'withConfig' || // styled(x).withConfig({})\n  (0, _detectors.isStyled)(t)(path.node.callee, state) && t.isMemberExpression(path.node.callee.callee) && path.node.callee.callee.property && path.node.callee.callee.property.name && path.node.callee.callee.property.name === 'withConfig' && path.node.callee.arguments.length && Array.isArray(path.node.callee.arguments[0].properties) && !path.node.callee.arguments[0].properties.some(prop => ['displayName', 'componentId'].includes(prop.key.name))) {\n    const displayName = (0, _options.useDisplayName)(state) && getDisplayName(t)(path, (0, _options.useFileName)(state) && state);\n    addConfig(t)(path, displayName && displayName.replace(/[^_a-zA-Z0-9-]/g, ''), (0, _options.useSSR)(state) && getComponentId(state));\n  }\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _detectors = require(\"../../utils/detectors\");\n\nvar _default = t => (path, state) => {\n  if ((0, _detectors.isStyled)(t)(path.node.tag, state) || (0, _detectors.isHelper)(t)(path.node.tag, state)) {\n    const {\n      tag: callee,\n      quasi: {\n        quasis,\n        expressions\n      }\n    } = path.node;\n    const values = t.arrayExpression(quasis.filter(quasi => quasi.value.cooked !== undefined).map(quasi => t.stringLiteral(quasi.value.cooked)));\n    path.replaceWith(t.callExpression(callee, [values, ...expressions]));\n  }\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _options = require(\"../../utils/options\");\n\nvar _transpile = _interopRequireDefault(require(\"./transpile\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = t => (path, state) => {\n  if ((0, _options.useTranspileTemplateLiterals)(state)) {\n    (0, _transpile.default)(t)(path, state);\n  }\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _detectors = require(\"../utils/detectors\");\n\nvar _default = t => (path, state) => {\n  if (t.isCallExpression(path.node.init) && t.isIdentifier(path.node.init.callee) && path.node.init.callee.name === 'require' && path.node.init.arguments && path.node.init.arguments[0] && t.isLiteral(path.node.init.arguments[0]) && (0, _detectors.isValidTopLevelImport)(path.node.init.arguments[0].value, state)) {\n    state.styledRequired = path.node.id.name;\n  }\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _detectors = require(\"../utils/detectors\");\n\nvar _options = require(\"../utils/options\");\n\n// Most of this code was taken from @satya164's babel-plugin-css-prop\n// @see https://github.com/satya164/babel-plugin-css-prop\nconst TAG_NAME_REGEXP = /^[a-z][a-z\\d]*(\\-[a-z][a-z\\d]*)?$/;\n\nconst getName = (node, t) => {\n  if (typeof node.name === 'string') return node.name;\n\n  if (t.isJSXMemberExpression(node)) {\n    return `${getName(node.object, t)}.${node.property.name}`;\n  }\n\n  throw path.buildCodeFrameError(`Cannot infer name from node with type \"${node.type}\". Please submit an issue at github.com/styled-components/babel-plugin-styled-components with your code so we can take a look at your use case!`);\n};\n\nconst getNameExpression = (node, t) => {\n  if (typeof node.name === 'string') return t.identifier(node.name);\n\n  if (t.isJSXMemberExpression(node)) {\n    return t.memberExpression(getNameExpression(node.object, t), t.identifier(node.property.name));\n  }\n\n  throw path.buildCodeFrameError(`Cannot infer name expression from node with type \"${node.type}\". Please submit an issue at github.com/styled-components/babel-plugin-styled-components with your code so we can take a look at your use case!`);\n};\n\nconst getLocalIdentifier = path => {\n  const identifier = path.scope.generateUidIdentifier('css'); // make it transient\n\n  identifier.name = identifier.name.replace('_', '$_');\n  return identifier;\n};\n\nvar _default = t => (path, state) => {\n  if (!(0, _options.useCssProp)(state)) return;\n  if (path.node.name.name !== 'css') return;\n  const program = state.file.path; // state.customImportName is passed through from styled-components/macro if it's used\n  // since the macro also inserts the import\n\n  let importName = state.customImportName || (0, _detectors.importLocalName)('default', state);\n  const {\n    bindings\n  } = program.scope; // Insert import if it doesn't exist yet\n\n  if (!importName || !bindings[importName.name] || !bindings[importName]) {\n    (0, _helperModuleImports.addDefault)(path, 'styled-components', {\n      nameHint: 'styled'\n    });\n    importName = t.identifier((0, _detectors.importLocalName)('default', state, {\n      bypassCache: true\n    }));\n  }\n\n  if (!t.isIdentifier(importName)) importName = t.identifier(importName);\n  const elem = path.parentPath;\n  const name = getName(elem.node.name, t);\n  const nameExpression = getNameExpression(elem.node.name, t);\n  const id = path.scope.generateUidIdentifier('Styled' + name.replace(/^([a-z])/, (match, p1) => p1.toUpperCase()));\n  let styled;\n  let injector;\n\n  if (TAG_NAME_REGEXP.test(name)) {\n    styled = t.callExpression(importName, [t.stringLiteral(name)]);\n  } else {\n    styled = t.callExpression(importName, [nameExpression]);\n\n    if (bindings[name] && !t.isImportDeclaration(bindings[name].path.parent)) {\n      injector = nodeToInsert => (t.isVariableDeclaration(bindings[name].path.parent) ? bindings[name].path.parentPath : bindings[name].path).insertAfter(nodeToInsert);\n    }\n  }\n\n  let css;\n\n  if (t.isStringLiteral(path.node.value)) {\n    css = t.templateLiteral([t.templateElement({\n      raw: path.node.value.value,\n      cooked: path.node.value.value\n    }, true)], []);\n  } else if (t.isJSXExpressionContainer(path.node.value)) {\n    if (t.isTemplateLiteral(path.node.value.expression)) {\n      css = path.node.value.expression;\n    } else if (t.isTaggedTemplateExpression(path.node.value.expression) && path.node.value.expression.tag.name === 'css') {\n      css = path.node.value.expression.quasi;\n    } else if (t.isObjectExpression(path.node.value.expression)) {\n      css = path.node.value.expression;\n    } else {\n      css = t.templateLiteral([t.templateElement({\n        raw: '',\n        cooked: ''\n      }, false), t.templateElement({\n        raw: '',\n        cooked: ''\n      }, true)], [path.node.value.expression]);\n    }\n  }\n\n  if (!css) return; // strip off css prop from final output\n\n  elem.node.attributes = elem.node.attributes.filter(x => t.isJSXSpreadAttribute(x) || (t.isJSXAttribute(x) ? x.name.name !== 'css' : false));\n  elem.node.name = t.jSXIdentifier(id.name);\n\n  if (elem.parentPath.node.closingElement) {\n    elem.parentPath.node.closingElement.name = t.jSXIdentifier(id.name);\n  } // object syntax\n\n\n  if (t.isObjectExpression(css)) {\n    /**\n     * for objects as CSS props, we have to recurse through the object and replace any\n     * object key/value scope references with generated props similar to how the template\n     * literal transform above creates dynamic interpolations\n     */\n    const p = t.identifier('p');\n    let replaceObjectWithPropFunction = false;\n    css.properties = css.properties.reduce(function propertiesReducer(acc, property) {\n      /**\n       * handle potential object key interpolations\n       */\n      if (t.isMemberExpression(property.key) || t.isCallExpression(property.key) || // checking for css={{[something]: something}}\n      t.isIdentifier(property.key) && path.scope.hasBinding(property.key.name) && ( // but not a object reference shorthand like css={{ color }}\n      t.isIdentifier(property.value) ? property.key.name !== property.value.name : true) && // and not a tricky expression\n      !t.isLogicalExpression(property.value) && !t.isConditionalExpression(property.value)) {\n        replaceObjectWithPropFunction = true;\n        const identifier = getLocalIdentifier(path);\n        elem.node.attributes.push(t.jSXAttribute(t.jSXIdentifier(identifier.name), t.jSXExpressionContainer(property.key)));\n        property.key = t.memberExpression(p, identifier);\n      }\n\n      if (t.isObjectExpression(property.value)) {\n        // recurse for objects within objects (e.g. {'::before': { content: x }})\n        property.value.properties = property.value.properties.reduce(propertiesReducer, []);\n        acc.push(property);\n      } else if (t.isSpreadElement(property)) {\n        // handle spread variables and such\n        if (t.isObjectExpression(property.argument)) {\n          property.argument.properties = property.argument.properties.reduce(propertiesReducer, []);\n        } else {\n          replaceObjectWithPropFunction = true;\n          const identifier = getLocalIdentifier(path);\n          elem.node.attributes.push(t.jSXAttribute(t.jSXIdentifier(identifier.name), t.jSXExpressionContainer(property.argument)));\n          property.argument = t.memberExpression(p, identifier);\n        }\n\n        acc.push(property);\n      } else if ( // if a non-primitive value we have to interpolate it\n      [t.isBigIntLiteral, t.isBooleanLiteral, t.isNullLiteral, t.isNumericLiteral, t.isStringLiteral].filter(Boolean) // older versions of babel might not have bigint support baked in\n      .every(x => !x(property.value))) {\n        replaceObjectWithPropFunction = true;\n        const identifier = getLocalIdentifier(path);\n        elem.node.attributes.push(t.jSXAttribute(t.jSXIdentifier(identifier.name), t.jSXExpressionContainer(property.value)));\n        acc.push(t.objectProperty(property.key, t.memberExpression(p, identifier)));\n      } else {\n        // some sort of primitive which is safe to pass through as-is\n        acc.push(property);\n      }\n\n      return acc;\n    }, []);\n\n    if (replaceObjectWithPropFunction) {\n      css = t.arrowFunctionExpression([p], css);\n    }\n  } else {\n    // tagged template literal\n    css.expressions = css.expressions.reduce((acc, ex) => {\n      if (Object.keys(bindings).some(key => bindings[key].referencePaths.find(p => p.node === ex)) || t.isFunctionExpression(ex) || t.isArrowFunctionExpression(ex)) {\n        acc.push(ex);\n      } else {\n        const identifier = getLocalIdentifier(path);\n        const p = t.identifier('p');\n        elem.node.attributes.push(t.jSXAttribute(t.jSXIdentifier(identifier.name), t.jSXExpressionContainer(ex)));\n        acc.push(t.arrowFunctionExpression([p], t.memberExpression(p, identifier)));\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (!injector) {\n    let parent = elem;\n\n    while (!t.isProgram(parent)) {\n      parent = parent.parentPath;\n    }\n\n    injector = nodeToInsert => parent.pushContainer('body', nodeToInsert);\n  }\n\n  injector(t.variableDeclaration('var', [t.variableDeclarator(id, t.isObjectExpression(css) || t.isArrowFunctionExpression(css) ? t.callExpression(styled, [css]) : t.taggedTemplateExpression(styled, css))]));\n};\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _babelPluginSyntaxJsx = _interopRequireDefault(require(\"babel-plugin-syntax-jsx\"));\n\nvar _pure = _interopRequireDefault(require(\"./visitors/pure\"));\n\nvar _minify = _interopRequireDefault(require(\"./visitors/minify\"));\n\nvar _displayNameAndId = _interopRequireDefault(require(\"./visitors/displayNameAndId\"));\n\nvar _templateLiterals = _interopRequireDefault(require(\"./visitors/templateLiterals\"));\n\nvar _assignStyledRequired = _interopRequireDefault(require(\"./visitors/assignStyledRequired\"));\n\nvar _transpileCssProp = _interopRequireDefault(require(\"./visitors/transpileCssProp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _default({\n  types: t\n}) {\n  return {\n    inherits: _babelPluginSyntaxJsx.default,\n    visitor: {\n      Program(path, state) {\n        path.traverse({\n          JSXAttribute(path, state) {\n            (0, _transpileCssProp.default)(t)(path, state);\n          },\n\n          VariableDeclarator(path, state) {\n            (0, _assignStyledRequired.default)(t)(path, state);\n          }\n\n        }, state);\n      },\n\n      CallExpression(path, state) {\n        (0, _displayNameAndId.default)(t)(path, state);\n        (0, _pure.default)(t)(path, state);\n      },\n\n      TaggedTemplateExpression(path, state) {\n        (0, _minify.default)(t)(path, state);\n        (0, _displayNameAndId.default)(t)(path, state);\n        (0, _templateLiterals.default)(t)(path, state);\n        (0, _pure.default)(t)(path, state);\n      }\n\n    }\n  };\n}", "// @flow\nimport { addDefault, addNamed } from '@babel/helper-module-imports';\nimport traverse from '@babel/traverse';\nimport { createMacro } from 'babel-plugin-macros';\nimport babelPlugin from 'babel-plugin-styled-components';\n\nfunction styledComponentsMacro({\n  references,\n  state,\n  babel: { types: t },\n  config: { importModuleName = 'styled-components', ...config } = {},\n}) {\n  const program = state.file.path;\n\n  // FIRST STEP : replace `styled-components/macro` by `styled-components\n  // references looks like this\n  // { default: [path, path], css: [path], ... }\n  let customImportName;\n  Object.keys(references).forEach(refName => {\n    // generate new identifier\n    let id;\n    if (refName === 'default') {\n      id = addDefault(program, importModuleName, { nameHint: 'styled' });\n      customImportName = id;\n    } else {\n      id = addNamed(program, refName, importModuleName, { nameHint: refName });\n    }\n\n    // update references with the new identifiers\n    references[refName].forEach(referencePath => {\n      // eslint-disable-next-line no-param-reassign\n      referencePath.node.name = id.name;\n    });\n  });\n\n  // SECOND STEP : apply babel-plugin-styled-components to the file\n  const stateWithOpts = {\n    ...state,\n    opts: {\n      ...config,\n      topLevelImportPaths: (config.topLevelImportPaths || []).concat(importModuleName),\n    },\n    customImportName,\n  };\n  traverse(program.parent, babelPlugin({ types: t }).visitor, undefined, stateWithOpts);\n}\n\nexport default createMacro(styledComponentsMacro, {\n  configName: 'styledComponents',\n});\n", "import d from \"../../node_modules/styled-components/dist/styled-components-macro.esm.js\";export default d;"],
  "mappings": "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IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,IAAI;AACj8D,QAAM,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,I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IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,MAAK,OAAM,IAAG,MAAK,GAAE,KAAI,GAAE,MAAK,IAAG,MAAK,MAAK,KAAI,MAAK,IAA/3C;AAEnC,QAAM,wBAAwB,CAAC,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,IAAG,IAAG,GAAE,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,OAAM,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,OAAM,GAAE,MAAK,IAAG,GAAE,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,GAAE,MAAK,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,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",
  "names": []
}
